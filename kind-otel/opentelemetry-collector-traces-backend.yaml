receivers:
  otlp:
    protocols:
      grpc:
      http:

  # receiver that's just a dummy and never used; added to pass validation requiring at least one receiver in a pipeline.
  otlp/spanmetrics:
    protocols:
      grpc:
        endpoint: "0.0.0.0:12345"

processors:
  tail_sampling:
    decision_wait: 3s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies: [
      {
        name: ignore-health-check-requests,
        type: string_attribute,
        string_attribute: { key: http.user_agent, values: [ kube-probe/* ], enabled_regex_matching: true, invert_match: true }
      },
      {
        name: sampling-50%,
        type: probabilistic,
        probabilistic: { sampling_percentage: 50 }
      },
    ]
  attributes:
    actions:
      - key: instance
        value: $POD_NAME
        action: insert
  spanmetrics:
    metrics_exporter: otlp/spanmetrics
    dimensions:
      - name: http.method
      - name: http.status_code
      - name: instance

exporters:
  logging:
    loglevel: debug
  otlp/jaeger:
    endpoint: $JAEGER_OTLP_ENDPOINT
    tls:
      insecure: true
  otlp/spanmetrics:
    endpoint: $SPANMETRICS_OTLP_ENDPOINT
    tls:
      insecure: true

service:
  telemetry:
    logs:
      level: debug
      disable_stacktrace: true
  pipelines:
    traces:
      receivers: [ otlp ]
      processors: [ attributes, spanmetrics, tail_sampling ]
      exporters: [ logging, otlp/jaeger ]
    metrics/spanmetrics:
      receivers: [ otlp/spanmetrics ]
      exporters: [ otlp/spanmetrics ]
