receivers:
  otlp:
    protocols:
      grpc:
      http:

  prometheus:
    config:
      scrape_configs:
        - job_name: otelcol-traces-backend
          scrape_interval: 30s
          static_configs:
            - targets: [ "${POD_NAME}:8888" ]

exporters:
  logging:
    loglevel: debug

  otlp/jaeger:
    endpoint: $JAEGER_OTLP_ENDPOINT
    tls:
      insecure: true

  otlp/metrics:
    endpoint: $METRICS_OTLP_ENDPOINT
    tls:
      insecure: true

processors:
  batch:
    send_batch_size: 10000
    timeout: 1s

  memory_limiter:
    check_interval: 1s
    limit_percentage: 50
    spike_limit_percentage: 30

  attributes:
    actions:
      - key: otelcol
        value: $POD_NAME
        action: insert

  transform:
    trace_statements:
      - context: span
        statements:
          - set(attributes["k8s.pod.name"], resource.attributes["k8s.pod.name"])
          - set(attributes["http.user_agent"], attributes["http.request.header.user-agent"]) where attributes["http.request.header.user-agent"] != nil
          - set(attributes["http.user_agent"], attributes["request.header.user-agent"]) where attributes["request.header.user-agent"] != nil
          - delete_key(attributes, "http.request.header.user-agent")
          - delete_key(attributes, "request.header.user-agent")

  filter/spanmetrics:
    spans:
      include:
        match_type: strict
        span_kinds:
          - SPAN_KIND_CONSUMER
          - SPAN_KIND_SERVER
      exclude:
        match_type: regexp
        attributes:
          - Key: http.user_agent
            Value: kube-probe/.*|Prometheus/.*|Gravitee.io/.*|ELB-HealthChecker/.*

  filter/all:
    traces:
      span:
        - 'IsMatch(name, ".*") == true'

  spanmetrics:
    dimensions:
      - name: http.method
      - name: http.status_code
      - name: k8s.pod.name
      - name: otelcol
    metrics_exporter: otlp/metrics
    metrics_flush_interval: 1m

  tail_sampling:
    decision_wait: 3s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies: [
      {
        name: ignore-http-user-agent,
        type: string_attribute,
        string_attribute: { key: http.user_agent, values: [ kube-probe/.*, Prometheus/.*, Gravitee.io/.*, ELB-HealthChecker/.* ], enabled_regex_matching: true, invert_match: true }
      },
      {
        name: sampling-100%,
        type: probabilistic,
        probabilistic: { sampling_percentage: 100 }
      },
    ]

service:
  telemetry:
    logs:
      level: debug
      disable_stacktrace: true

  pipelines:
    traces/spanmetrics:
      receivers: [ otlp ]
      processors:
        - memory_limiter
        - batch
        - attributes
        - transform
        - filter/spanmetrics
        - spanmetrics
        - filter/all
      exporters: [ logging ]

    traces:
      receivers: [ otlp ]
      processors:
        - memory_limiter
        - attributes
        - transform
        - tail_sampling
        - batch
      exporters: [ otlp/jaeger ]

    metrics:
      receivers: [ prometheus ]
      processors:
        - memory_limiter
        - batch
      exporters: [ otlp/metrics ]
