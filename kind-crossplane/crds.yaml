---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: alerts.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Alert
    listKind: AlertList
    plural: alerts
    singular: alert
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Alert is deprecated, upgrade to v1beta3
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects
              properties:
                eventSeverity:
                  default: info
                  description: |-
                    Filter events based on severity, defaults to ('info').
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: Filter events based on the involved objects.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: A list of Golang regular expressions to be used for excluding messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: Send events using this provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: Short description of the impact and affected cluster.
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events dispatching.
                    Defaults to false.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: AlertStatus defines the observed state of Alert
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Alert is deprecated, upgrade to v1beta3
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects.
              properties:
                eventMetadata:
                  additionalProperties:
                    type: string
                  description: |-
                    EventMetadata is an optional field for adding metadata to events dispatched by the
                    controller. This can be used for enhancing the context of the event. If a field
                    would override one already present on the original event as generated by the emitter,
                    then the override doesn't happen, i.e. the original value is preserved, and an info
                    log is printed.
                  type: object
                eventSeverity:
                  default: info
                  description: |-
                    EventSeverity specifies how to filter events based on severity.
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: |-
                    EventSources specifies how to filter events based
                    on the involved object kind, name and namespace.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: |-
                    ExclusionList specifies a list of Golang regular expressions
                    to be used for excluding messages.
                  items:
                    type: string
                  type: array
                inclusionList:
                  description: |-
                    InclusionList specifies a list of Golang regular expressions
                    to be used for including messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: ProviderRef specifies which Provider this Alert should use.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: Summary holds a short description of the impact and affected cluster.
                  maxLength: 255
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Alert.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: AlertStatus defines the observed state of the Alert.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Alert.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta3
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects.
              properties:
                eventMetadata:
                  additionalProperties:
                    type: string
                  description: |-
                    EventMetadata is an optional field for adding metadata to events dispatched by the
                    controller. This can be used for enhancing the context of the event. If a field
                    would override one already present on the original event as generated by the emitter,
                    then the override doesn't happen, i.e. the original value is preserved, and an info
                    log is printed.
                  type: object
                eventSeverity:
                  default: info
                  description: |-
                    EventSeverity specifies how to filter events based on severity.
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: |-
                    EventSources specifies how to filter events based
                    on the involved object kind, name and namespace.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: |-
                    ExclusionList specifies a list of Golang regular expressions
                    to be used for excluding messages.
                  items:
                    type: string
                  type: array
                inclusionList:
                  description: |-
                    InclusionList specifies a list of Golang regular expressions
                    to be used for including messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: ProviderRef specifies which Provider this Alert should use.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: |-
                    Summary holds a short description of the impact and affected cluster.
                    Deprecated: Use EventMetadata instead.
                  maxLength: 255
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Alert.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: buckets.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                BucketSpec specifies the required configuration to produce an Artifact for
                an object storage bucket.
              properties:
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    bucket. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    This field is only supported for the `generic` provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                endpoint:
                  description: Endpoint is the object storage address the BucketName is located at.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the Bucket Endpoint is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                prefix:
                  description: Prefix to use for server-side filtering of files in the Bucket.
                  type: string
                provider:
                  default: generic
                  description: |-
                    Provider of the object storage bucket.
                    Defaults to 'generic', which expects an S3 (API) compatible object
                    storage.
                  enum:
                    - generic
                    - aws
                    - gcp
                    - azure
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Bucket server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                region:
                  description: Region of the Endpoint where the BucketName is located in.
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                sts:
                  description: |-
                    STS specifies the required configuration to use a Security Token
                    Service for fetching temporary credentials to authenticate in a
                    Bucket provider.

                    This field is only supported for the `aws` and `generic` providers.
                  properties:
                    certSecretRef:
                      description: |-
                        CertSecretRef can be given the name of a Secret containing
                        either or both of

                        - a PEM-encoded client certificate (`tls.crt`) and private
                        key (`tls.key`);
                        - a PEM-encoded CA certificate (`ca.crt`)

                        and whichever are supplied, will be used for connecting to the
                        STS endpoint. The client cert and key are useful if you are
                        authenticating with a certificate; the CA cert is useful if
                        you are using a self-signed server certificate. The Secret must
                        be of type `Opaque` or `kubernetes.io/tls`.

                        This field is only supported for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    endpoint:
                      description: |-
                        Endpoint is the HTTP/S endpoint of the Security Token Service from
                        where temporary credentials will be fetched.
                      pattern: ^(http|https)://.*$
                      type: string
                    provider:
                      description: Provider of the Security Token Service.
                      enum:
                        - aws
                        - ldap
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing authentication credentials
                        for the STS endpoint. This Secret must contain the fields `username`
                        and `password` and is supported only for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - endpoint
                    - provider
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
              x-kubernetes-validations:
                - message: STS configuration is only supported for the 'aws' and 'generic' Bucket providers
                  rule: self.provider == 'aws' || self.provider == 'generic' || !has(self.sts)
                - message: '''aws'' is the only supported STS provider for the ''aws'' Bucket provider'
                  rule: self.provider != 'aws' || !has(self.sts) || self.sts.provider == 'aws'
                - message: '''ldap'' is the only supported STS provider for the ''generic'' Bucket provider'
                  rule: self.provider != 'generic' || !has(self.sts) || self.sts.provider == 'ldap'
                - message: spec.sts.secretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.secretRef)'
                - message: spec.sts.certSecretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.certSecretRef)'
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Bucket object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 Bucket is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec defines the desired state of an S3 compatible bucket
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: The bucket name.
                  type: string
                endpoint:
                  description: The bucket endpoint address.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
                  type: boolean
                interval:
                  description: The interval at which to check for bucket updates.
                  type: string
                provider:
                  default: generic
                  description: The S3 compatible storage provider name, default ('generic').
                  enum:
                    - generic
                    - aws
                    - gcp
                  type: string
                region:
                  description: The bucket region.
                  type: string
                secretRef:
                  description: |-
                    The name of the secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for download operations, defaults to 60s.
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus defines the observed state of a bucket
              properties:
                artifact:
                  description: Artifact represents the output of the last successful Bucket sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of the last Bucket sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Bucket is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                BucketSpec specifies the required configuration to produce an Artifact for
                an object storage bucket.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    bucket. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    This field is only supported for the `generic` provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                endpoint:
                  description: Endpoint is the object storage address the BucketName is located at.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the Bucket Endpoint is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                prefix:
                  description: Prefix to use for server-side filtering of files in the Bucket.
                  type: string
                provider:
                  default: generic
                  description: |-
                    Provider of the object storage bucket.
                    Defaults to 'generic', which expects an S3 (API) compatible object
                    storage.
                  enum:
                    - generic
                    - aws
                    - gcp
                    - azure
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Bucket server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                region:
                  description: Region of the Endpoint where the BucketName is located in.
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                sts:
                  description: |-
                    STS specifies the required configuration to use a Security Token
                    Service for fetching temporary credentials to authenticate in a
                    Bucket provider.

                    This field is only supported for the `aws` and `generic` providers.
                  properties:
                    certSecretRef:
                      description: |-
                        CertSecretRef can be given the name of a Secret containing
                        either or both of

                        - a PEM-encoded client certificate (`tls.crt`) and private
                        key (`tls.key`);
                        - a PEM-encoded CA certificate (`ca.crt`)

                        and whichever are supplied, will be used for connecting to the
                        STS endpoint. The client cert and key are useful if you are
                        authenticating with a certificate; the CA cert is useful if
                        you are using a self-signed server certificate. The Secret must
                        be of type `Opaque` or `kubernetes.io/tls`.

                        This field is only supported for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    endpoint:
                      description: |-
                        Endpoint is the HTTP/S endpoint of the Security Token Service from
                        where temporary credentials will be fetched.
                      pattern: ^(http|https)://.*$
                      type: string
                    provider:
                      description: Provider of the Security Token Service.
                      enum:
                        - aws
                        - ldap
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing authentication credentials
                        for the STS endpoint. This Secret must contain the fields `username`
                        and `password` and is supported only for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - endpoint
                    - provider
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
              x-kubernetes-validations:
                - message: STS configuration is only supported for the 'aws' and 'generic' Bucket providers
                  rule: self.provider == 'aws' || self.provider == 'generic' || !has(self.sts)
                - message: '''aws'' is the only supported STS provider for the ''aws'' Bucket provider'
                  rule: self.provider != 'aws' || !has(self.sts) || self.sts.provider == 'aws'
                - message: '''ldap'' is the only supported STS provider for the ''generic'' Bucket provider'
                  rule: self.provider != 'generic' || !has(self.sts) || self.sts.provider == 'ldap'
                - message: spec.sts.secretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.secretRef)'
                - message: spec.sts.certSecretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.certSecretRef)'
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Bucket object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusterusages.protection.crossplane.io
spec:
  conversion:
    strategy: None
  group: protection.crossplane.io
  names:
    categories:
      - crossplane
    kind: ClusterUsage
    listKind: ClusterUsageList
    plural: clusterusages
    singular: clusterusage
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.annotations.crossplane\.io/usage-details
          name: DETAILS
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            A ClusterUsage defines a deletion blocking relationship between two
            resources.

            Usages prevent accidental deletion of a single resource or deletion of
            resources with dependent resources.

            Read the Crossplane documentation for
            [more information about usages](https://docs.crossplane.io/latest/concepts/usages).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ClusterUsageSpec defines the desired state of a ClusterUsage.
              properties:
                by:
                  description: By is the resource that is "using the other resource".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                of:
                  description: Of is the resource that is "being used".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                reason:
                  description: Reason is the reason for blocking deletion of the resource.
                  type: string
                replayDeletion:
                  description: ReplayDeletion will trigger a deletion on the used resource during the deletion of the usage itself, if it was attempted to be deleted at least once.
                  type: boolean
              required:
                - of
              type: object
              x-kubernetes-validations:
                - message: either "spec.by" or "spec.reason" must be specified.
                  rule: has(self.by) || has(self.reason)
            status:
              description: UsageStatus defines the observed state of Usage.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: compositeresourcedefinitions.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: CompositeResourceDefinition
    listKind: CompositeResourceDefinitionList
    plural: compositeresourcedefinitions
    shortNames:
      - xrd
      - xrds
    singular: compositeresourcedefinition
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Established')].status
          name: ESTABLISHED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Offered')].status
          name: OFFERED
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      deprecated: true
      deprecationWarning: CompositeResourceDefinition v1 is deprecated and will be removed in a future release; consider migrating to v2
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A CompositeResourceDefinition defines the schema for a new custom Kubernetes
            API.

            Read the Crossplane documentation for
            [more information about CustomResourceDefinitions](https://docs.crossplane.io/latest/concepts/composite-resource-definitions).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CompositeResourceDefinitionSpec specifies the desired state of the definition.
              properties:
                claimNames:
                  description: |-
                    ClaimNames specifies the names of an optional composite resource claim.
                    When claim names are specified Crossplane will create a namespaced
                    'composite resource claim' CRD that corresponds to the defined composite
                    resource. This composite resource claim acts as a namespaced proxy for
                    the composite resource; creating, updating, or deleting the claim will
                    create, update, or delete a corresponding composite resource. You may add
                    claim names to an existing CompositeResourceDefinition, but they cannot
                    be changed or removed once they have been set.
                  properties:
                    categories:
                      description: |-
                        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                        This is published in API discovery documents, and used by clients to support invocations like
                        `kubectl get all`.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    kind:
                      description: |-
                        kind is the serialized kind of the resource. It is normally CamelCase and singular.
                        Custom resource instances will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: |-
                        plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    shortNames:
                      description: |-
                        shortNames are short names for the resource, exposed in API discovery documents,
                        and used by clients to support invocations like `kubectl get <shortname>`.
                        It must be all lowercase.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    singular:
                      description: singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                    - kind
                    - plural
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                    - message: Plural name must be lowercase
                      rule: self.plural == self.plural.lowerAscii()
                    - message: Singular name must be lowercase
                      rule: '!has(self.singular) || self.singular == self.singular.lowerAscii()'
                connectionSecretKeys:
                  description: |-
                    ConnectionSecretKeys is the list of connection secret keys the
                    defined XR can publish. If the list is empty, all keys will be
                    published. If the list isn't empty, any connection secret keys that
                    don't appear in the list will be filtered out. Only LegacyCluster XRs
                    support connection secrets.
                  items:
                    type: string
                  type: array
                conversion:
                  description: Conversion defines all conversion settings for the defined Composite resource.
                  properties:
                    strategy:
                      description: |-
                        strategy specifies how custom resources are converted between versions. Allowed values are:
                        - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
                        - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
                          is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
                      type: string
                    webhook:
                      description: webhook describes how to call the conversion webhook. Required when `strategy` is set to `"Webhook"`.
                      properties:
                        clientConfig:
                          description: clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
                          properties:
                            caBundle:
                              description: |-
                                caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                                If unspecified, system trust roots on the apiserver are used.
                              format: byte
                              type: string
                            service:
                              description: |-
                                service is a reference to the service for this webhook. Either
                                service or url must be specified.

                                If the webhook is running within the cluster, then you should use `service`.
                              properties:
                                name:
                                  description: |-
                                    name is the name of the service.
                                    Required
                                  type: string
                                namespace:
                                  description: |-
                                    namespace is the namespace of the service.
                                    Required
                                  type: string
                                path:
                                  description: path is an optional URL path at which the webhook will be contacted.
                                  type: string
                                port:
                                  description: |-
                                    port is an optional service port at which the webhook will be contacted.
                                    `port` should be a valid port number (1-65535, inclusive).
                                    Defaults to 443 for backward compatibility.
                                  format: int32
                                  type: integer
                              required:
                                - name
                                - namespace
                              type: object
                            url:
                              description: |-
                                url gives the location of the webhook, in standard URL form
                                (`scheme://host:port/path`). Exactly one of `url` or `service`
                                must be specified.

                                The `host` should not refer to a service running in the cluster; use
                                the `service` field instead. The host might be resolved via external
                                DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                                in-cluster DNS as that would be a layering violation). `host` may
                                also be an IP address.

                                Please note that using `localhost` or `127.0.0.1` as a `host` is
                                risky unless you take great care to run this webhook on all hosts
                                which run an apiserver which might need to make calls to this
                                webhook. Such installs are likely to be non-portable, i.e., not easy
                                to turn up in a new cluster.

                                The scheme must be "https"; the URL must begin with "https://".

                                A path is optional, and if present may be any string permissible in
                                a URL. You may use the path to pass an arbitrary string to the
                                webhook, for example, a cluster identifier.

                                Attempting to use a user or basic auth e.g. "user:password@" is not
                                allowed. Fragments ("#...") and query parameters ("?...") are not
                                allowed, either.
                              type: string
                          type: object
                        conversionReviewVersions:
                          description: |-
                            conversionReviewVersions is an ordered list of preferred `ConversionReview`
                            versions the Webhook expects. The API server will use the first version in
                            the list which it supports. If none of the versions specified in this list
                            are supported by API server, conversion will fail for the custom resource.
                            If a persisted Webhook configuration specifies allowed versions and does not
                            include any versions known to the API Server, calls to the webhook will fail.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                        - conversionReviewVersions
                      type: object
                  required:
                    - strategy
                  type: object
                  x-kubernetes-validations:
                    - message: Webhook configuration is required when conversion strategy is Webhook
                      rule: self.strategy == 'Webhook' && has(self.webhook)
                defaultCompositeDeletePolicy:
                  default: Background
                  description: |-
                    DefaultCompositeDeletePolicy is the policy used when deleting the Composite
                    that is associated with the Claim if no policy has been specified.
                  enum:
                    - Background
                    - Foreground
                  type: string
                defaultCompositionRef:
                  description: |-
                    DefaultCompositionRef refers to the Composition resource that will be used
                    in case no composition selector is given.
                  properties:
                    name:
                      description: Name of the Composition.
                      type: string
                  required:
                    - name
                  type: object
                defaultCompositionUpdatePolicy:
                  default: Automatic
                  description: |-
                    DefaultCompositionUpdatePolicy is the policy used when updating composites after a new
                    Composition Revision has been created if no policy has been specified on the composite.
                  enum:
                    - Automatic
                    - Manual
                  type: string
                enforcedCompositionRef:
                  description: |-
                    EnforcedCompositionRef refers to the Composition resource that will be used
                    by all composite instances whose schema is defined by this definition.
                  properties:
                    name:
                      description: Name of the Composition.
                      type: string
                  required:
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                group:
                  description: |-
                    Group specifies the API group of the defined composite resource.
                    Composite resources are served under `/apis/<group>/...`. Must match the
                    name of the XRD (in the form `<names.plural>.<group>`).
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                metadata:
                  description: Metadata specifies the desired metadata for the defined composite resource and claim CRD's.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations is an unstructured key value map stored with a resource that may be
                        set by external tools to store and retrieve arbitrary metadata. They are not
                        queryable and should be preserved when modifying objects.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Map of string keys and values that can be used to organize and categorize
                        (scope and select) objects. May match selectors of replication controllers
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        and services.
                        These labels are added to the composite resource and claim CRD's in addition
                        to any labels defined by `CompositionResourceDefinition` `metadata.labels`.
                      type: object
                  type: object
                names:
                  description: |-
                    Names specifies the resource and kind names of the defined composite
                    resource.
                  properties:
                    categories:
                      description: |-
                        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                        This is published in API discovery documents, and used by clients to support invocations like
                        `kubectl get all`.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    kind:
                      description: |-
                        kind is the serialized kind of the resource. It is normally CamelCase and singular.
                        Custom resource instances will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: |-
                        plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    shortNames:
                      description: |-
                        shortNames are short names for the resource, exposed in API discovery documents,
                        and used by clients to support invocations like `kubectl get <shortname>`.
                        It must be all lowercase.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    singular:
                      description: singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                    - kind
                    - plural
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                    - message: Plural name must be lowercase
                      rule: self.plural == self.plural.lowerAscii()
                    - message: Singular name must be lowercase
                      rule: '!has(self.singular) || self.singular == self.singular.lowerAscii()'
                scope:
                  default: LegacyCluster
                  description: |-
                    Scope of the defined composite resource. Namespaced composite resources
                    are scoped to a single namespace. Cluster scoped composite resource exist
                    outside the scope of any namespace. Neither can be claimed. Legacy
                    cluster scoped composite resources are cluster scoped resources that can
                    be claimed.
                  enum:
                    - LegacyCluster
                    - Namespaced
                    - Cluster
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                versions:
                  description: |-
                    Versions is the list of all API versions of the defined composite
                    resource. Version names are used to compute the order in which served
                    versions are listed in API discovery. If the version string is
                    "kube-like", it will sort above non "kube-like" version strings, which
                    are ordered lexicographically. "Kube-like" versions start with a "v",
                    then are followed by a number (the major version), then optionally the
                    string "alpha" or "beta" and another number (the minor version). These
                    are sorted first by GA > beta > alpha (where GA is a version with no
                    suffix such as beta or alpha), and then by comparing major version, then
                    minor version. An example sorted list of versions: v10, v2, v1, v11beta2,
                    v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
                  items:
                    description: CompositeResourceDefinitionVersion describes a version of an XR.
                    properties:
                      additionalPrinterColumns:
                        description: |-
                          AdditionalPrinterColumns specifies additional columns returned in Table
                          output. If no columns are specified, a single column displaying the age
                          of the custom resource is used. See the following link for details:
                          https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                        items:
                          description: CustomResourceColumnDefinition specifies a column for server side printing.
                          properties:
                            description:
                              description: description is a human readable description of this column.
                              type: string
                            format:
                              description: |-
                                format is an optional OpenAPI type definition for this column. The 'name' format is applied
                                to the primary identifier column to assist in clients identifying column is the resource name.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                            jsonPath:
                              description: |-
                                jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
                                each custom resource to produce the value for this column.
                              type: string
                            name:
                              description: name is a human readable name for the column.
                              type: string
                            priority:
                              description: |-
                                priority is an integer defining the relative importance of this column compared to others. Lower
                                numbers are considered higher priority. Columns that may be omitted in limited space scenarios
                                should be given a priority greater than 0.
                              format: int32
                              type: integer
                            type:
                              description: |-
                                type is an OpenAPI type definition for this column.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                          required:
                            - jsonPath
                            - name
                            - type
                          type: object
                        type: array
                      deprecated:
                        description: |-
                          The deprecated field specifies that this version is deprecated and should
                          not be used.
                        type: boolean
                      deprecationWarning:
                        description: |-
                          DeprecationWarning specifies the message that should be shown to the user
                          when using this version.
                        maxLength: 256
                        type: string
                      name:
                        description: |-
                          Name of this version, e.g. “v1”, “v2beta1”, etc. Composite resources are
                          served under this version at `/apis/<group>/<version>/...` if `served` is
                          true.
                        type: string
                      referenceable:
                        description: |-
                          Referenceable specifies that this version may be referenced by a
                          Composition in order to configure which resources an XR may be composed
                          of. Exactly one version must be marked as referenceable; all Compositions
                          must target only the referenceable version. The referenceable version
                          must be served. It's mapped to the CRD's `spec.versions[*].storage` field.
                        type: boolean
                      schema:
                        description: |-
                          Schema describes the schema used for validation, pruning, and defaulting
                          of this version of the defined composite resource. Fields required by all
                          composite resources will be injected into this schema automatically, and
                          will override equivalently named fields in this schema. Omitting this
                          schema results in a schema that contains only the fields required by all
                          composite resources.
                        properties:
                          openAPIV3Schema:
                            description: |-
                              OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and
                              pruning.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      served:
                        description: Served specifies that this version should be served via REST APIs.
                        type: boolean
                    required:
                      - name
                      - referenceable
                      - served
                    type: object
                  type: array
              required:
                - group
                - names
                - versions
              type: object
              x-kubernetes-validations:
                - message: Only LegacyCluster composite resources can offer claims
                  rule: self.scope == 'LegacyCluster' || !has(self.claimNames)
                - message: Only LegacyCluster composite resources support connection secrets
                  rule: self.scope == 'LegacyCluster' || !has(self.connectionSecretKeys)
            status:
              description: CompositeResourceDefinitionStatus shows the observed state of the definition.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                controllers:
                  description: |-
                    Controllers represents the status of the controllers that power this
                    composite resource definition.
                  properties:
                    compositeResourceClaimType:
                      description: |-
                        The CompositeResourceClaimTypeRef is the type of composite resource claim
                        that Crossplane is currently reconciling for this definition. Its version
                        will eventually become consistent with the definition's referenceable
                        version. Note that clients may interact with any served type; this is
                        simply the type that Crossplane interacts with.
                      properties:
                        apiVersion:
                          description: APIVersion of the type.
                          type: string
                        kind:
                          description: Kind of the type.
                          type: string
                      required:
                        - apiVersion
                        - kind
                      type: object
                    compositeResourceType:
                      description: |-
                        The CompositeResourceTypeRef is the type of composite resource that
                        Crossplane is currently reconciling for this definition. Its version will
                        eventually become consistent with the definition's referenceable version.
                        Note that clients may interact with any served type; this is simply the
                        type that Crossplane interacts with.
                      properties:
                        apiVersion:
                          description: APIVersion of the type.
                          type: string
                        kind:
                          description: Kind of the type.
                          type: string
                      required:
                        - apiVersion
                        - kind
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Established')].status
          name: ESTABLISHED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Offered')].status
          name: OFFERED
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v2
      schema:
        openAPIV3Schema:
          description: |-
            A CompositeResourceDefinition defines the schema for a new custom Kubernetes
            API.

            Read the Crossplane documentation for
            [more information about CustomResourceDefinitions](https://docs.crossplane.io/latest/concepts/composite-resource-definitions).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CompositeResourceDefinitionSpec specifies the desired state of the definition.
              properties:
                claimNames:
                  description: |-
                    ClaimNames specifies the names of an optional composite resource claim.
                    When claim names are specified Crossplane will create a namespaced
                    'composite resource claim' CRD that corresponds to the defined composite
                    resource. This composite resource claim acts as a namespaced proxy for
                    the composite resource; creating, updating, or deleting the claim will
                    create, update, or delete a corresponding composite resource. You may add
                    claim names to an existing CompositeResourceDefinition, but they cannot
                    be changed or removed once they have been set.

                    Deprecated: Claims aren't supported in apiextensions.crossplane.io/v2.
                  properties:
                    categories:
                      description: |-
                        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                        This is published in API discovery documents, and used by clients to support invocations like
                        `kubectl get all`.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    kind:
                      description: |-
                        kind is the serialized kind of the resource. It is normally CamelCase and singular.
                        Custom resource instances will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: |-
                        plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    shortNames:
                      description: |-
                        shortNames are short names for the resource, exposed in API discovery documents,
                        and used by clients to support invocations like `kubectl get <shortname>`.
                        It must be all lowercase.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    singular:
                      description: singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                    - kind
                    - plural
                  type: object
                connectionSecretKeys:
                  description: |-
                    ConnectionSecretKeys is the list of connection secret keys the
                    defined XR can publish. If the list is empty, all keys will be
                    published. If the list isn't empty, any connection secret keys that
                    don't appear in the list will be filtered out. Only LegacyCluster XRs
                    support connection secrets.

                    Deprecated: XR connection secrets aren't supported in
                    apiextensions.crossplane.io/v2. Compose a secret instead.
                  items:
                    type: string
                  type: array
                conversion:
                  description: Conversion defines all conversion settings for the defined Composite resource.
                  properties:
                    strategy:
                      description: |-
                        strategy specifies how custom resources are converted between versions. Allowed values are:
                        - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
                        - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
                          is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
                      type: string
                    webhook:
                      description: webhook describes how to call the conversion webhook. Required when `strategy` is set to `"Webhook"`.
                      properties:
                        clientConfig:
                          description: clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
                          properties:
                            caBundle:
                              description: |-
                                caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                                If unspecified, system trust roots on the apiserver are used.
                              format: byte
                              type: string
                            service:
                              description: |-
                                service is a reference to the service for this webhook. Either
                                service or url must be specified.

                                If the webhook is running within the cluster, then you should use `service`.
                              properties:
                                name:
                                  description: |-
                                    name is the name of the service.
                                    Required
                                  type: string
                                namespace:
                                  description: |-
                                    namespace is the namespace of the service.
                                    Required
                                  type: string
                                path:
                                  description: path is an optional URL path at which the webhook will be contacted.
                                  type: string
                                port:
                                  description: |-
                                    port is an optional service port at which the webhook will be contacted.
                                    `port` should be a valid port number (1-65535, inclusive).
                                    Defaults to 443 for backward compatibility.
                                  format: int32
                                  type: integer
                              required:
                                - name
                                - namespace
                              type: object
                            url:
                              description: |-
                                url gives the location of the webhook, in standard URL form
                                (`scheme://host:port/path`). Exactly one of `url` or `service`
                                must be specified.

                                The `host` should not refer to a service running in the cluster; use
                                the `service` field instead. The host might be resolved via external
                                DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                                in-cluster DNS as that would be a layering violation). `host` may
                                also be an IP address.

                                Please note that using `localhost` or `127.0.0.1` as a `host` is
                                risky unless you take great care to run this webhook on all hosts
                                which run an apiserver which might need to make calls to this
                                webhook. Such installs are likely to be non-portable, i.e., not easy
                                to turn up in a new cluster.

                                The scheme must be "https"; the URL must begin with "https://".

                                A path is optional, and if present may be any string permissible in
                                a URL. You may use the path to pass an arbitrary string to the
                                webhook, for example, a cluster identifier.

                                Attempting to use a user or basic auth e.g. "user:password@" is not
                                allowed. Fragments ("#...") and query parameters ("?...") are not
                                allowed, either.
                              type: string
                          type: object
                        conversionReviewVersions:
                          description: |-
                            conversionReviewVersions is an ordered list of preferred `ConversionReview`
                            versions the Webhook expects. The API server will use the first version in
                            the list which it supports. If none of the versions specified in this list
                            are supported by API server, conversion will fail for the custom resource.
                            If a persisted Webhook configuration specifies allowed versions and does not
                            include any versions known to the API Server, calls to the webhook will fail.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                        - conversionReviewVersions
                      type: object
                  required:
                    - strategy
                  type: object
                defaultCompositeDeletePolicy:
                  description: |-
                    DefaultCompositeDeletePolicy is the policy used when deleting the Composite
                    that is associated with the Claim if no policy has been specified.

                    Deprecated: Claims aren't supported in apiextensions.crossplane.io/v2.
                  enum:
                    - Background
                    - Foreground
                  type: string
                defaultCompositionRef:
                  description: |-
                    DefaultCompositionRef refers to the Composition resource that will be used
                    in case no composition selector is given.
                  properties:
                    name:
                      description: Name of the Composition.
                      type: string
                  required:
                    - name
                  type: object
                defaultCompositionUpdatePolicy:
                  default: Automatic
                  description: |-
                    DefaultCompositionUpdatePolicy is the policy used when updating composites after a new
                    Composition Revision has been created if no policy has been specified on the composite.
                  enum:
                    - Automatic
                    - Manual
                  type: string
                enforcedCompositionRef:
                  description: |-
                    EnforcedCompositionRef refers to the Composition resource that will be used
                    by all composite instances whose schema is defined by this definition.
                  properties:
                    name:
                      description: Name of the Composition.
                      type: string
                  required:
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                group:
                  description: |-
                    Group specifies the API group of the defined composite resource.
                    Composite resources are served under `/apis/<group>/...`. Must match the
                    name of the XRD (in the form `<names.plural>.<group>`).
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                metadata:
                  description: Metadata specifies the desired metadata for the defined composite resource and claim CRD's.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations is an unstructured key value map stored with a resource that may be
                        set by external tools to store and retrieve arbitrary metadata. They are not
                        queryable and should be preserved when modifying objects.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Map of string keys and values that can be used to organize and categorize
                        (scope and select) objects. May match selectors of replication controllers
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        and services.
                        These labels are added to the composite resource and claim CRD's in addition
                        to any labels defined by `CompositionResourceDefinition` `metadata.labels`.
                      type: object
                  type: object
                names:
                  description: |-
                    Names specifies the resource and kind names of the defined composite
                    resource.
                  properties:
                    categories:
                      description: |-
                        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                        This is published in API discovery documents, and used by clients to support invocations like
                        `kubectl get all`.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    kind:
                      description: |-
                        kind is the serialized kind of the resource. It is normally CamelCase and singular.
                        Custom resource instances will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: |-
                        plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    shortNames:
                      description: |-
                        shortNames are short names for the resource, exposed in API discovery documents,
                        and used by clients to support invocations like `kubectl get <shortname>`.
                        It must be all lowercase.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    singular:
                      description: singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                    - kind
                    - plural
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                    - message: Plural name must be lowercase
                      rule: self.plural == self.plural.lowerAscii()
                    - message: Singular name must be lowercase
                      rule: '!has(self.singular) || self.singular == self.singular.lowerAscii()'
                scope:
                  default: Namespaced
                  description: |-
                    Scope of the defined composite resource. Namespaced composite resources
                    are scoped to a single namespace. Cluster scoped composite resource exist
                    outside the scope of any namespace.
                  enum:
                    - Namespaced
                    - Cluster
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                versions:
                  description: |-
                    Versions is the list of all API versions of the defined composite
                    resource. Version names are used to compute the order in which served
                    versions are listed in API discovery. If the version string is
                    "kube-like", it will sort above non "kube-like" version strings, which
                    are ordered lexicographically. "Kube-like" versions start with a "v",
                    then are followed by a number (the major version), then optionally the
                    string "alpha" or "beta" and another number (the minor version). These
                    are sorted first by GA > beta > alpha (where GA is a version with no
                    suffix such as beta or alpha), and then by comparing major version, then
                    minor version. An example sorted list of versions: v10, v2, v1, v11beta2,
                    v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
                  items:
                    description: CompositeResourceDefinitionVersion describes a version of an XR.
                    properties:
                      additionalPrinterColumns:
                        description: |-
                          AdditionalPrinterColumns specifies additional columns returned in Table
                          output. If no columns are specified, a single column displaying the age
                          of the custom resource is used. See the following link for details:
                          https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                        items:
                          description: CustomResourceColumnDefinition specifies a column for server side printing.
                          properties:
                            description:
                              description: description is a human readable description of this column.
                              type: string
                            format:
                              description: |-
                                format is an optional OpenAPI type definition for this column. The 'name' format is applied
                                to the primary identifier column to assist in clients identifying column is the resource name.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                            jsonPath:
                              description: |-
                                jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
                                each custom resource to produce the value for this column.
                              type: string
                            name:
                              description: name is a human readable name for the column.
                              type: string
                            priority:
                              description: |-
                                priority is an integer defining the relative importance of this column compared to others. Lower
                                numbers are considered higher priority. Columns that may be omitted in limited space scenarios
                                should be given a priority greater than 0.
                              format: int32
                              type: integer
                            type:
                              description: |-
                                type is an OpenAPI type definition for this column.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                          required:
                            - jsonPath
                            - name
                            - type
                          type: object
                        type: array
                      deprecated:
                        description: |-
                          The deprecated field specifies that this version is deprecated and should
                          not be used.
                        type: boolean
                      deprecationWarning:
                        description: |-
                          DeprecationWarning specifies the message that should be shown to the user
                          when using this version.
                        maxLength: 256
                        type: string
                      name:
                        description: |-
                          Name of this version, e.g. “v1”, “v2beta1”, etc. Composite resources are
                          served under this version at `/apis/<group>/<version>/...` if `served` is
                          true.
                        type: string
                      referenceable:
                        description: |-
                          Referenceable specifies that this version may be referenced by a
                          Composition in order to configure which resources an XR may be composed
                          of. Exactly one version must be marked as referenceable; all Compositions
                          must target only the referenceable version. The referenceable version
                          must be served. It's mapped to the CRD's `spec.versions[*].storage` field.
                        type: boolean
                      schema:
                        description: |-
                          Schema describes the schema used for validation, pruning, and defaulting
                          of this version of the defined composite resource. Fields required by all
                          composite resources will be injected into this schema automatically, and
                          will override equivalently named fields in this schema. Omitting this
                          schema results in a schema that contains only the fields required by all
                          composite resources.
                        properties:
                          openAPIV3Schema:
                            description: |-
                              OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and
                              pruning.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      served:
                        description: Served specifies that this version should be served via REST APIs.
                        type: boolean
                    required:
                      - name
                      - referenceable
                      - served
                    type: object
                  type: array
              required:
                - group
                - names
                - versions
              type: object
              x-kubernetes-validations:
                - message: Claims aren't supported in apiextensions.crossplane.io/v2
                  rule: '!has(self.claimNames)'
                - message: XR connection secrets aren't supported in apiextensions.crossplane.io/v2
                  rule: '!has(self.connectionSecretKeys)'
            status:
              description: CompositeResourceDefinitionStatus shows the observed state of the definition.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                controllers:
                  description: |-
                    Controllers represents the status of the controllers that power this
                    composite resource definition.
                  properties:
                    compositeResourceClaimType:
                      description: |-
                        The CompositeResourceClaimTypeRef is the type of composite resource claim
                        that Crossplane is currently reconciling for this definition. Its version
                        will eventually become consistent with the definition's referenceable
                        version. Note that clients may interact with any served type; this is
                        simply the type that Crossplane interacts with.
                      properties:
                        apiVersion:
                          description: APIVersion of the type.
                          type: string
                        kind:
                          description: Kind of the type.
                          type: string
                      required:
                        - apiVersion
                        - kind
                      type: object
                    compositeResourceType:
                      description: |-
                        The CompositeResourceTypeRef is the type of composite resource that
                        Crossplane is currently reconciling for this definition. Its version will
                        eventually become consistent with the definition's referenceable version.
                        Note that clients may interact with any served type; this is simply the
                        type that Crossplane interacts with.
                      properties:
                        apiVersion:
                          description: APIVersion of the type.
                          type: string
                        kind:
                          description: Kind of the type.
                          type: string
                      required:
                        - apiVersion
                        - kind
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: compositionrevisions.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: CompositionRevision
    listKind: CompositionRevisionList
    plural: compositionrevisions
    shortNames:
      - comprev
    singular: compositionrevision
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.revision
          name: REVISION
          type: string
        - jsonPath: .spec.compositeTypeRef.kind
          name: XR-KIND
          type: string
        - jsonPath: .spec.compositeTypeRef.apiVersion
          name: XR-APIVERSION
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A CompositionRevision represents a revision of a Composition. Crossplane
            creates new revisions when there are changes to the Composition.

            Crossplane creates and manages CompositionRevisions. Don't directly edit
            CompositionRevisions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                CompositionRevisionSpec specifies the desired state of the composition
                revision.
              properties:
                compositeTypeRef:
                  description: |-
                    CompositeTypeRef specifies the type of composite resource that this
                    composition is compatible with.
                  properties:
                    apiVersion:
                      description: APIVersion of the type.
                      type: string
                    kind:
                      description: Kind of the type.
                      type: string
                  required:
                    - apiVersion
                    - kind
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                mode:
                  default: Pipeline
                  description: |-
                    Mode controls what type or "mode" of Composition will be used.

                    "Pipeline" indicates that a Composition specifies a pipeline of
                    functions, each of which is responsible for producing composed
                    resources that Crossplane should create or update.
                  enum:
                    - Pipeline
                  type: string
                pipeline:
                  description: |-
                    Pipeline is a list of function steps that will be used when a
                    composite resource referring to this composition is created.

                    The Pipeline is only used by the "Pipeline" mode of Composition. It is
                    ignored by other modes.
                  items:
                    description: A PipelineStep in a function pipeline.
                    properties:
                      credentials:
                        description: Credentials are optional credentials that the function needs.
                        items:
                          description: |-
                            FunctionCredentials are optional credentials that a function
                            needs to run.
                          properties:
                            name:
                              description: Name of this set of credentials.
                              type: string
                            secretRef:
                              description: |-
                                A SecretRef is a reference to a secret containing credentials that should
                                be supplied to the function.
                              properties:
                                name:
                                  description: Name of the secret.
                                  type: string
                                namespace:
                                  description: Namespace of the secret.
                                  type: string
                              required:
                                - name
                                - namespace
                              type: object
                            source:
                              description: Source of the function credentials.
                              enum:
                                - None
                                - Secret
                              type: string
                          required:
                            - name
                            - source
                          type: object
                          x-kubernetes-validations:
                            - message: the Secret source requires a secretRef
                              rule: self.source == 'Secret' && has(self.secretRef)
                        type: array
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      functionRef:
                        description: |-
                          FunctionRef is a reference to the function this step should
                          execute.
                        properties:
                          name:
                            description: Name of the referenced Function.
                            type: string
                        required:
                          - name
                        type: object
                      input:
                        description: |-
                          Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                          with an apiVersion and kind) that will be passed to the function as
                          the 'input' of its RunFunctionRequest.
                        type: object
                        x-kubernetes-embedded-resource: true
                        x-kubernetes-preserve-unknown-fields: true
                      requirements:
                        description: |-
                          Requirements are resource requirements that will be satisfied before
                          this pipeline step is called for the first time. This allows
                          pre-populating required resources without requiring a function to
                          request them first.
                        properties:
                          requiredResources:
                            description: |-
                              RequiredResources is a list of resources that must be fetched before
                              this function is called.
                            items:
                              description: RequiredResourceSelector selects a required resource.
                              properties:
                                apiVersion:
                                  description: APIVersion of the required resource.
                                  type: string
                                kind:
                                  description: Kind of the required resource.
                                  type: string
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    MatchLabels specifies the set of labels to match for finding the
                                    required resource. When specified, Name is ignored.
                                  type: object
                                name:
                                  description: Name of the required resource.
                                  type: string
                                namespace:
                                  description: Namespace of the required resource if it is namespaced.
                                  type: string
                                requirementName:
                                  description: |-
                                    RequirementName is the unique name to identify this required resource
                                    in the Required Resources map in the function request.
                                  type: string
                              required:
                                - apiVersion
                                - kind
                                - requirementName
                              type: object
                              x-kubernetes-validations:
                                - message: Either name or matchLabels must be specified, but not both
                                  rule: (has(self.name) && !has(self.matchLabels)) || (!has(self.name) && has(self.matchLabels))
                            type: array
                            x-kubernetes-list-map-keys:
                              - requirementName
                            x-kubernetes-list-type: map
                        type: object
                      step:
                        description: Step name. Must be unique within its Pipeline.
                        type: string
                    required:
                      - functionRef
                      - step
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - step
                  x-kubernetes-list-type: map
                revision:
                  description: |-
                    Revision number. Newer revisions have larger numbers.

                    This number can change. When a Composition transitions from state A
                    -> B -> A there will be only two CompositionRevisions. Crossplane will
                    edit the original CompositionRevision to change its revision number from
                    0 to 2.
                  format: int64
                  type: integer
                writeConnectionSecretsToNamespace:
                  description: |-
                    WriteConnectionSecretsToNamespace specifies the namespace in which the
                    connection secrets of composite resource dynamically provisioned using
                    this composition will be created.
                  type: string
              required:
                - compositeTypeRef
                - revision
              type: object
            status:
              description: |-
                CompositionRevisionStatus shows the observed state of the composition
                revision.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: compositions.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: Composition
    listKind: CompositionList
    plural: compositions
    shortNames:
      - comp
    singular: composition
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.compositeTypeRef.kind
          name: XR-KIND
          type: string
        - jsonPath: .spec.compositeTypeRef.apiVersion
          name: XR-APIVERSION
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A Composition defines a collection of managed resources or functions that
            Crossplane uses to create and manage new composite resources.

            Read the Crossplane documentation for
            [more information about Compositions](https://docs.crossplane.io/latest/concepts/compositions).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CompositionSpec specifies desired state of a composition.
              properties:
                compositeTypeRef:
                  description: |-
                    CompositeTypeRef specifies the type of composite resource that this
                    composition is compatible with.
                  properties:
                    apiVersion:
                      description: APIVersion of the type.
                      type: string
                    kind:
                      description: Kind of the type.
                      type: string
                  required:
                    - apiVersion
                    - kind
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                mode:
                  default: Pipeline
                  description: |-
                    Mode controls what type or "mode" of Composition will be used.

                    "Pipeline" indicates that a Composition specifies a pipeline of
                    functions, each of which is responsible for producing composed
                    resources that Crossplane should create or update.
                  enum:
                    - Pipeline
                  type: string
                pipeline:
                  description: |-
                    Pipeline is a list of composition function steps that will be used when a
                    composite resource referring to this composition is created. One of
                    resources and pipeline must be specified - you cannot specify both.

                    The Pipeline is only used by the "Pipeline" mode of Composition. It is
                    ignored by other modes.
                  items:
                    description: A PipelineStep in a function pipeline.
                    properties:
                      credentials:
                        description: Credentials are optional credentials that the function needs.
                        items:
                          description: |-
                            FunctionCredentials are optional credentials that a function
                            needs to run.
                          properties:
                            name:
                              description: Name of this set of credentials.
                              type: string
                            secretRef:
                              description: |-
                                A SecretRef is a reference to a secret containing credentials that should
                                be supplied to the function.
                              properties:
                                name:
                                  description: Name of the secret.
                                  type: string
                                namespace:
                                  description: Namespace of the secret.
                                  type: string
                              required:
                                - name
                                - namespace
                              type: object
                            source:
                              description: Source of the function credentials.
                              enum:
                                - None
                                - Secret
                              type: string
                          required:
                            - name
                            - source
                          type: object
                          x-kubernetes-validations:
                            - message: the Secret source requires a secretRef
                              rule: self.source == 'Secret' && has(self.secretRef)
                        type: array
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      functionRef:
                        description: |-
                          FunctionRef is a reference to the function this step should
                          execute.
                        properties:
                          name:
                            description: Name of the referenced Function.
                            type: string
                        required:
                          - name
                        type: object
                      input:
                        description: |-
                          Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                          with an apiVersion and kind) that will be passed to the function as
                          the 'input' of its RunFunctionRequest.
                        type: object
                        x-kubernetes-embedded-resource: true
                        x-kubernetes-preserve-unknown-fields: true
                      requirements:
                        description: |-
                          Requirements are resource requirements that will be satisfied before
                          this pipeline step is called for the first time. This allows
                          pre-populating required resources without requiring a function to
                          request them first.
                        properties:
                          requiredResources:
                            description: |-
                              RequiredResources is a list of resources that must be fetched before
                              this function is called.
                            items:
                              description: RequiredResourceSelector selects a required resource.
                              properties:
                                apiVersion:
                                  description: APIVersion of the required resource.
                                  type: string
                                kind:
                                  description: Kind of the required resource.
                                  type: string
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    MatchLabels specifies the set of labels to match for finding the
                                    required resource. When specified, Name is ignored.
                                  type: object
                                name:
                                  description: Name of the required resource.
                                  type: string
                                namespace:
                                  description: Namespace of the required resource if it is namespaced.
                                  type: string
                                requirementName:
                                  description: |-
                                    RequirementName is the unique name to identify this required resource
                                    in the Required Resources map in the function request.
                                  type: string
                              required:
                                - apiVersion
                                - kind
                                - requirementName
                              type: object
                              x-kubernetes-validations:
                                - message: Either name or matchLabels must be specified, but not both
                                  rule: (has(self.name) && !has(self.matchLabels)) || (!has(self.name) && has(self.matchLabels))
                            type: array
                            x-kubernetes-list-map-keys:
                              - requirementName
                            x-kubernetes-list-type: map
                        type: object
                      step:
                        description: Step name. Must be unique within its Pipeline.
                        type: string
                    required:
                      - functionRef
                      - step
                    type: object
                  maxItems: 99
                  minItems: 1
                  type: array
                  x-kubernetes-list-map-keys:
                    - step
                  x-kubernetes-list-type: map
                writeConnectionSecretsToNamespace:
                  description: |-
                    WriteConnectionSecretsToNamespace specifies the namespace in which the
                    connection secrets of composite resource dynamically provisioned using
                    this composition will be created.
                  type: string
              required:
                - compositeTypeRef
              type: object
              x-kubernetes-validations:
                - message: an array of pipeline steps is required in Pipeline mode
                  rule: self.mode == 'Pipeline' && has(self.pipeline)
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: configurationrevisions.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkgrev
    kind: ConfigurationRevision
    listKind: ConfigurationRevisionList
    plural: configurationrevisions
    singular: configurationrevision
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='RevisionHealthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .spec.image
          name: IMAGE
          type: string
        - jsonPath: .spec.desiredState
          name: STATE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.revision
          name: REVISION
          priority: 1
          type: string
        - jsonPath: .status.foundDependencies
          name: DEP-FOUND
          priority: 1
          type: string
        - jsonPath: .status.installedDependencies
          name: DEP-INSTALLED
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A ConfigurationRevision represents a revision of a Configuration. Crossplane
            creates new revisions when there are changes to a Configuration.

            Crossplane creates and manages ConfigurationRevision. Don't directly edit
            ConfigurationRevisions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: PackageRevisionSpec specifies the desired state of a PackageRevision.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                desiredState:
                  description: DesiredState of the PackageRevision. Can be either Active or Inactive.
                  type: string
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                image:
                  description: Package image used by install Pod to extract package contents.
                  type: string
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package. It is also
                    applied to any images pulled for the package, such as a provider's
                    controller image.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be
                    used to fetch packages from private registries. They are also applied to
                    any images pulled for the package, such as a provider's controller image.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revision:
                  description: |-
                    Revision number. Indicates when the revision will be garbage collected
                    based on the parent's RevisionHistoryLimit.
                  format: int64
                  type: integer
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
              required:
                - desiredState
                - image
                - revision
              type: object
            status:
              description: PackageRevisionStatus represents the observed state of a PackageRevision.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this revision, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                capabilities:
                  description: |-
                    Capabilities of this package. Capabilities are opaque strings that
                    may be meaningful to package consumers.
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                foundDependencies:
                  description: Dependency information.
                  format: int64
                  type: integer
                installedDependencies:
                  format: int64
                  type: integer
                invalidDependencies:
                  format: int64
                  type: integer
                objectRefs:
                  description: References to objects owned by PackageRevision.
                  items:
                    description: |-
                      A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                      commonly used to reference cluster-scoped objects or objects where the
                      namespace is already known.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced object.
                        type: string
                      kind:
                        description: Kind of the referenced object.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      uid:
                        description: UID of the referenced object.
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  type: array
                resolvedImage:
                  description: |-
                    ResolvedPackage is the name of the package that was installed. It may be
                    different from spec.image if the package path was rewritten using an
                    image config.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: configurations.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkg
    kind: Configuration
    listKind: ConfigurationList
    plural: configurations
    singular: configuration
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Installed')].status
          name: INSTALLED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Healthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .spec.package
          name: PACKAGE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A Configuration installs an OCI compatible Crossplane package, extending
            Crossplane with support for new kinds of CompositeResourceDefinitions and
            Compositions.

            Read the Crossplane documentation for
            [more information about Configuration packages](https://docs.crossplane.io/latest/concepts/packages).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ConfigurationSpec specifies details about a request to install a
                configuration to Crossplane.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                package:
                  description: |-
                    Package is the name of the package that is being requested.
                    must be a fully qualified image name, including the registry,
                    repository, and tag. for example, "registry.example.com/repo/package:tag".
                  type: string
                  x-kubernetes-validations:
                    - message: must be a fully qualified image name, including the registry, repository, and tag or digest. For example, 'registry.example.com/repo/package:tag' or 'registry.example.com/repo/package[:tag]@sha256:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'.
                      rule: self.matches('^[^\\.\\/]+(\\.[^\\.\\/]+)+(\\/[^\\/:@]+)+(:[^:@]+(@sha256.+)?|@sha256.+)$')
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be used
                    to fetch packages from private registries.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revisionActivationPolicy:
                  default: Automatic
                  description: |-
                    RevisionActivationPolicy specifies how the package controller should
                    update from one revision to the next. Options are Automatic or Manual.
                    Default is Automatic.
                  type: string
                revisionHistoryLimit:
                  default: 1
                  description: |-
                    RevisionHistoryLimit dictates how the package controller cleans up old
                    inactive package revisions.
                    Defaults to 1. Can be disabled by explicitly setting to 0.
                  format: int64
                  type: integer
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
              required:
                - package
              type: object
            status:
              description: ConfigurationStatus represents the observed state of a Configuration.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this package, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                currentIdentifier:
                  description: |-
                    CurrentIdentifier is the most recent package source that was used to
                    produce a revision. The package manager uses this field to determine
                    whether to check for package updates for a given source when
                    packagePullPolicy is set to IfNotPresent. Manually removing this field
                    will cause the package manager to check that the current revision is
                    correct for the given package source.
                  type: string
                currentRevision:
                  description: |-
                    CurrentRevision is the name of the current package revision. It will
                    reflect the most up to date revision, whether it has been activated or
                    not.
                  type: string
                resolvedPackage:
                  description: |-
                    ResolvedPackage is the name of the package that was used for version
                    resolution. It may be different from spec.package if the package path was
                    rewritten using an image config.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: controllerconfigs.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    kind: ControllerConfig
    listKind: ControllerConfigList
    plural: controllerconfigs
    singular: controllerconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      deprecated: true
      deprecationWarning: ControllerConfig.pkg.crossplane.io/v1alpha1 is deprecated. Use DeploymentRuntimeConfig from pkg.crossplane.io/v1beta1 instead.
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            A ControllerConfig applies settings to controllers like Provider pods.
            Deprecated: Use the
            [DeploymentRuntimeConfig](https://docs.crossplane.io/latest/concepts/providers#runtime-configuration)
            instead.

            Read the
            [Package Runtime Configuration](https://github.com/crossplane/crossplane/blob/11bbe13ea3604928cc4e24e8d0d18f3f5f7e847c/design/one-pager-package-runtime-config.md)
            design document for more details.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ControllerConfigSpec specifies the configuration for a packaged controller.
                Values provided will override package manager defaults. Labels and
                annotations are passed to both the controller Deployment and ServiceAccount.
              properties:
                affinity:
                  description: If specified, the pod's scheduling constraints
                  properties:
                    nodeAffinity:
                      description: Describes node affinity scheduling rules for the pod.
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            The scheduler will prefer to schedule pods to nodes that satisfy
                            the affinity expressions specified by this field, but it may choose
                            a node that violates one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of weights, i.e.
                            for each node that meets all of the scheduling requirements (resource
                            request, requiredDuringScheduling affinity expressions, etc.),
                            compute a sum by iterating through the elements of this field and adding
                            "weight" to the sum if the node matches the corresponding matchExpressions; the
                            node(s) with the highest sum are the most preferred.
                          items:
                            description: |-
                              An empty preferred scheduling term matches all objects with implicit weight 0
                              (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                            properties:
                              preference:
                                description: A node selector term, associated with the corresponding weight.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements by node's labels.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchFields:
                                    description: A list of node selector requirements by node's fields.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              weight:
                                description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - preference
                              - weight
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            If the affinity requirements specified by this field are not met at
                            scheduling time, the pod will not be scheduled onto the node.
                            If the affinity requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to an update), the system
                            may or may not try to eventually evict the pod from its node.
                          properties:
                            nodeSelectorTerms:
                              description: Required. A list of node selector terms. The terms are ORed.
                              items:
                                description: |-
                                  A null or empty node selector term matches no objects. The requirements of
                                  them are ANDed.
                                  The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                properties:
                                  matchExpressions:
                                    description: A list of node selector requirements by node's labels.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchFields:
                                    description: A list of node selector requirements by node's fields.
                                    items:
                                      description: |-
                                        A node selector requirement is a selector that contains values, a key, and an operator
                                        that relates the key and values.
                                      properties:
                                        key:
                                          description: The label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            Represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                          type: string
                                        values:
                                          description: |-
                                            An array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. If the operator is Gt or Lt, the values
                                            array must have a single element, which will be interpreted as an integer.
                                            This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                            - nodeSelectorTerms
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    podAffinity:
                      description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            The scheduler will prefer to schedule pods to nodes that satisfy
                            the affinity expressions specified by this field, but it may choose
                            a node that violates one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of weights, i.e.
                            for each node that meets all of the scheduling requirements (resource
                            request, requiredDuringScheduling affinity expressions, etc.),
                            compute a sum by iterating through the elements of this field and adding
                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                            node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: |-
                                      A label query over a set of resources, in this case pods.
                                      If it's null, this PodAffinityTerm matches with no Pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  matchLabelKeys:
                                    description: |-
                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  mismatchLabelKeys:
                                    description: |-
                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  namespaceSelector:
                                    description: |-
                                      A label query over the set of namespaces that the term applies to.
                                      The term is applied to the union of the namespaces selected by this field
                                      and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list means "this pod's namespace".
                                      An empty selector ({}) matches all namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: |-
                                      namespaces specifies a static list of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces listed in this field
                                      and the ones selected by namespaceSelector.
                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  topologyKey:
                                    description: |-
                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                      selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: |-
                                  weight associated with matching the corresponding podAffinityTerm,
                                  in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            If the affinity requirements specified by this field are not met at
                            scheduling time, the pod will not be scheduled onto the node.
                            If the affinity requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a pod label update), the
                            system may or may not try to eventually evict the pod from its node.
                            When there are multiple elements, the lists of nodes corresponding to each
                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                          items:
                            description: |-
                              Defines a set of pods (namely those matching the labelSelector
                              relative to the given namespace(s)) that this pod should be
                              co-located (affinity) or not co-located (anti-affinity) with,
                              where co-located is defined as running on a node whose value of
                              the label with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: |-
                                  A label query over a set of resources, in this case pods.
                                  If it's null, this PodAffinityTerm matches with no Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              mismatchLabelKeys:
                                description: |-
                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              namespaceSelector:
                                description: |-
                                  A label query over the set of namespaces that the term applies to.
                                  The term is applied to the union of the namespaces selected by this field
                                  and the ones listed in the namespaces field.
                                  null selector and null or empty namespaces list means "this pod's namespace".
                                  An empty selector ({}) matches all namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: |-
                                  namespaces specifies a static list of namespace names that the term applies to.
                                  The term is applied to the union of the namespaces listed in this field
                                  and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              topologyKey:
                                description: |-
                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                  selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    podAntiAffinity:
                      description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            The scheduler will prefer to schedule pods to nodes that satisfy
                            the anti-affinity expressions specified by this field, but it may choose
                            a node that violates one or more of the expressions. The node that is
                            most preferred is the one with the greatest sum of weights, i.e.
                            for each node that meets all of the scheduling requirements (resource
                            request, requiredDuringScheduling anti-affinity expressions, etc.),
                            compute a sum by iterating through the elements of this field and adding
                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                            node(s) with the highest sum are the most preferred.
                          items:
                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                            properties:
                              podAffinityTerm:
                                description: Required. A pod affinity term, associated with the corresponding weight.
                                properties:
                                  labelSelector:
                                    description: |-
                                      A label query over a set of resources, in this case pods.
                                      If it's null, this PodAffinityTerm matches with no Pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  matchLabelKeys:
                                    description: |-
                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  mismatchLabelKeys:
                                    description: |-
                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  namespaceSelector:
                                    description: |-
                                      A label query over the set of namespaces that the term applies to.
                                      The term is applied to the union of the namespaces selected by this field
                                      and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list means "this pod's namespace".
                                      An empty selector ({}) matches all namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: |-
                                      namespaces specifies a static list of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces listed in this field
                                      and the ones selected by namespaceSelector.
                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  topologyKey:
                                    description: |-
                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                      selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                  - topologyKey
                                type: object
                              weight:
                                description: |-
                                  weight associated with matching the corresponding podAffinityTerm,
                                  in the range 1-100.
                                format: int32
                                type: integer
                            required:
                              - podAffinityTerm
                              - weight
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        requiredDuringSchedulingIgnoredDuringExecution:
                          description: |-
                            If the anti-affinity requirements specified by this field are not met at
                            scheduling time, the pod will not be scheduled onto the node.
                            If the anti-affinity requirements specified by this field cease to be met
                            at some point during pod execution (e.g. due to a pod label update), the
                            system may or may not try to eventually evict the pod from its node.
                            When there are multiple elements, the lists of nodes corresponding to each
                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                          items:
                            description: |-
                              Defines a set of pods (namely those matching the labelSelector
                              relative to the given namespace(s)) that this pod should be
                              co-located (affinity) or not co-located (anti-affinity) with,
                              where co-located is defined as running on a node whose value of
                              the label with key <topologyKey> matches that of any node on which
                              a pod of the set of pods is running
                            properties:
                              labelSelector:
                                description: |-
                                  A label query over a set of resources, in this case pods.
                                  If it's null, this PodAffinityTerm matches with no Pods.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              matchLabelKeys:
                                description: |-
                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              mismatchLabelKeys:
                                description: |-
                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                  be taken into consideration. The keys are used to lookup values from the
                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                  to select the group of existing pods which pods will be taken into consideration
                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                  pod labels will be ignored. The default value is empty.
                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              namespaceSelector:
                                description: |-
                                  A label query over the set of namespaces that the term applies to.
                                  The term is applied to the union of the namespaces selected by this field
                                  and the ones listed in the namespaces field.
                                  null selector and null or empty namespaces list means "this pod's namespace".
                                  An empty selector ({}) matches all namespaces.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: |-
                                  namespaces specifies a static list of namespace names that the term applies to.
                                  The term is applied to the union of the namespaces listed in this field
                                  and the ones selected by namespaceSelector.
                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              topologyKey:
                                description: |-
                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                  selected pods is running.
                                  Empty topologyKey is not allowed.
                                type: string
                            required:
                              - topologyKey
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                  type: object
                args:
                  description: |-
                    Arguments to the entrypoint.
                    The docker image's CMD is used if this is not provided.
                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                    cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax
                    can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                    regardless of whether the variable exists or not.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                  items:
                    type: string
                  type: array
                env:
                  description: |-
                    List of environment variables to set in the container.
                    Cannot be updated.
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: |-
                          Variable references $(VAR_NAME) are expanded
                          using the previously defined environment variables in the container and
                          any service environment variables. If a variable cannot be resolved,
                          the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of whether the variable
                          exists or not.
                          Defaults to "".
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                          fieldRef:
                            description: |-
                              Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                              spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceFieldRef:
                            description: |-
                              Selects a resource of the container: only resources limits and requests
                              (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                envFrom:
                  description: |-
                    List of sources to populate environment variables in the container.
                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                    will be reported as an event when the container is starting. When a key exists in multiple
                    sources, the value associated with the last source will take precedence.
                    Values defined by an Env with a duplicate key will take precedence.
                    Cannot be updated.
                  items:
                    description: EnvFromSource represents the source of a set of ConfigMaps
                    properties:
                      configMapRef:
                        description: The ConfigMap to select from
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap must be defined
                            type: boolean
                        type: object
                        x-kubernetes-map-type: atomic
                      prefix:
                        description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                        type: string
                      secretRef:
                        description: The Secret to select from
                        properties:
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret must be defined
                            type: boolean
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  type: array
                image:
                  description: |-
                    Docker image name.
                    More info: https://kubernetes.io/docs/concepts/containers/images
                    This field is optional to allow higher level config management to default or override
                    container images in workload controllers like Deployments and StatefulSets.
                  type: string
                imagePullPolicy:
                  description: |-
                    Image pull policy.
                    One of Always, Never, IfNotPresent.
                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                  type: string
                imagePullSecrets:
                  description: |-
                    ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                    If specified, these secrets will be passed to individual puller implementations for them to use. For example,
                    in the case of docker, only DockerConfig type secrets are honored.
                    More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                    Setting ImagePullSecrets will replace any secrets that have been
                    propagated to a controller Deployment, typically via packagePullSecrets.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                metadata:
                  description: Metadata that will be added to the provider Pod.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: |-
                        Annotations is an unstructured key value map stored with a resource that may be
                        set by external tools to store and retrieve arbitrary metadata. They are not
                        queryable and should be preserved when modifying objects.
                        More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Map of string keys and values that can be used to organize and
                        categorize (scope and select) objects. This will only affect
                        labels on the pod, not the pod selector. Labels will be merged
                        with internal labels used by crossplane, and labels with a
                        crossplane.io key might be overwritten.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                      type: object
                  type: object
                nodeName:
                  description: |-
                    NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
                    the scheduler simply schedules this pod onto that node, assuming that it fits resource
                    requirements.
                  type: string
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: |-
                    NodeSelector is a selector which must be true for the pod to fit on a node.
                    Selector which must match a node's labels for the pod to be scheduled on that node.
                    More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                  type: object
                podSecurityContext:
                  description: |-
                    PodSecurityContext holds pod-level security attributes and common container settings.
                    Optional: Defaults to empty.  See type description for default values of each field.
                  properties:
                    appArmorProfile:
                      description: |-
                        appArmorProfile is the AppArmor options to use by the containers in this pod.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        localhostProfile:
                          description: |-
                            localhostProfile indicates a profile loaded on the node that should be used.
                            The profile must be preconfigured on the node to work.
                            Must match the loaded name of the profile.
                            Must be set if and only if type is "Localhost".
                          type: string
                        type:
                          description: |-
                            type indicates which kind of AppArmor profile will be applied.
                            Valid options are:
                              Localhost - a profile pre-loaded on the node.
                              RuntimeDefault - the container runtime's default profile.
                              Unconfined - no AppArmor enforcement.
                          type: string
                      required:
                        - type
                      type: object
                    fsGroup:
                      description: |-
                        A special supplemental group that applies to all containers in a pod.
                        Some volume types allow the Kubelet to change the ownership of that volume
                        to be owned by the pod:

                        1. The owning GID will be the FSGroup
                        2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                        3. The permission bits are OR'd with rw-rw----

                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                        Note that this field cannot be set when spec.os.name is windows.
                      format: int64
                      type: integer
                    fsGroupChangePolicy:
                      description: |-
                        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                        before being exposed inside Pod. This field will only apply to
                        volume types which support fsGroup based ownership(and permissions).
                        It will have no effect on ephemeral volume types such as: secret, configmaps
                        and emptydir.
                        Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                        Note that this field cannot be set when spec.os.name is windows.
                      type: string
                    runAsGroup:
                      description: |-
                        The GID to run the entrypoint of the container process.
                        Uses runtime default if unset.
                        May also be set in SecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence
                        for that container.
                        Note that this field cannot be set when spec.os.name is windows.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: |-
                        Indicates that the container must run as a non-root user.
                        If true, the Kubelet will validate the image at runtime to ensure that it
                        does not run as UID 0 (root) and fail to start the container if it does.
                        If unset or false, no such validation will be performed.
                        May also be set in SecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: |-
                        The UID to run the entrypoint of the container process.
                        Defaults to user specified in image metadata if unspecified.
                        May also be set in SecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence
                        for that container.
                        Note that this field cannot be set when spec.os.name is windows.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: |-
                        The SELinux context to be applied to all containers.
                        If unspecified, the container runtime will allocate a random SELinux context for each
                        container.  May also be set in SecurityContext.  If set in
                        both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                        takes precedence for that container.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        level:
                          description: Level is SELinux level label that applies to the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to the container.
                          type: string
                      type: object
                    seccompProfile:
                      description: |-
                        The seccomp options to use by the containers in this pod.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        localhostProfile:
                          description: |-
                            localhostProfile indicates a profile defined in a file on the node should be used.
                            The profile must be preconfigured on the node to work.
                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                            Must be set if type is "Localhost". Must NOT be set for any other type.
                          type: string
                        type:
                          description: |-
                            type indicates which kind of seccomp profile will be applied.
                            Valid options are:

                            Localhost - a profile defined in a file on the node should be used.
                            RuntimeDefault - the container runtime default profile should be used.
                            Unconfined - no profile should be applied.
                          type: string
                      required:
                        - type
                      type: object
                    supplementalGroups:
                      description: |-
                        A list of groups applied to the first process run in each container, in
                        addition to the container's primary GID and fsGroup (if specified).  If
                        the SupplementalGroupsPolicy feature is enabled, the
                        supplementalGroupsPolicy field determines whether these are in addition
                        to or instead of any group memberships defined in the container image.
                        If unspecified, no additional groups are added, though group memberships
                        defined in the container image may still be used, depending on the
                        supplementalGroupsPolicy field.
                        Note that this field cannot be set when spec.os.name is windows.
                      items:
                        format: int64
                        type: integer
                      type: array
                      x-kubernetes-list-type: atomic
                    supplementalGroupsPolicy:
                      description: |-
                        Defines how supplemental groups of the first container processes are calculated.
                        Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                        (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                        and the container runtime must implement support for this feature.
                        Note that this field cannot be set when spec.os.name is windows.
                      type: string
                    sysctls:
                      description: |-
                        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                        sysctls (by the container runtime) might fail to launch.
                        Note that this field cannot be set when spec.os.name is windows.
                      items:
                        description: Sysctl defines a kernel parameter to be set
                        properties:
                          name:
                            description: Name of a property to set
                            type: string
                          value:
                            description: Value of a property to set
                            type: string
                        required:
                          - name
                          - value
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    windowsOptions:
                      description: |-
                        The Windows specific settings applied to all containers.
                        If unspecified, the options within a container's SecurityContext will be used.
                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is linux.
                      properties:
                        gmsaCredentialSpec:
                          description: |-
                            GMSACredentialSpec is where the GMSA admission webhook
                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                            GMSA credential spec named by the GMSACredentialSpecName field.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                          type: string
                        hostProcess:
                          description: |-
                            HostProcess determines if a container should be run as a 'Host Process' container.
                            All of a Pod's containers must have the same effective HostProcess value
                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                          type: boolean
                        runAsUserName:
                          description: |-
                            The UserName in Windows to run the entrypoint of the container process.
                            Defaults to the user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext. If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: string
                      type: object
                  type: object
                ports:
                  description: List of container ports to expose on the container
                  items:
                    description: ContainerPort represents a network port in a single container.
                    properties:
                      containerPort:
                        description: |-
                          Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                        format: int32
                        type: integer
                      hostIP:
                        description: What host IP to bind the external port to.
                        type: string
                      hostPort:
                        description: |-
                          Number of port to expose on the host.
                          If specified, this must be a valid port number, 0 < x < 65536.
                          If HostNetwork is specified, this must match ContainerPort.
                          Most containers do not need this.
                        format: int32
                        type: integer
                      name:
                        description: |-
                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                          named port in a pod must have a unique name. Name for the port that can be
                          referred to by services.
                        type: string
                      protocol:
                        default: TCP
                        description: |-
                          Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                        type: string
                    required:
                      - containerPort
                    type: object
                  type: array
                priorityClassName:
                  description: |-
                    If specified, indicates the pod's priority. "system-node-critical" and
                    "system-cluster-critical" are two special keywords which indicate the
                    highest priorities with the former being the highest priority. Any other
                    name must be defined by creating a PriorityClass object with that name.
                    If not specified, the pod priority will be default or zero if there is no
                    default.
                  type: string
                replicas:
                  description: |-
                    Number of desired pods. This is a pointer to distinguish between explicit
                    zero and not specified. Defaults to 1.
                    Note: If more than 1 replica is set and leader election is not enabled then
                    controllers could conflict. Environment variable "LEADER_ELECTION" can be
                    used to enable leader election process.
                  format: int32
                  type: integer
                resources:
                  description: |-
                    Compute Resources required by this container.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
                  properties:
                    claims:
                      description: |-
                        Claims lists the names of resources, defined in spec.resourceClaims,
                        that are used by this container.

                        This is an alpha field and requires enabling the
                        DynamicResourceAllocation feature gate.

                        This field is immutable. It can only be set for containers.
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: |-
                              Name must match the name of one entry in pod.spec.resourceClaims of
                              the Pod where this field is used. It makes that resource available
                              inside a container.
                            type: string
                          request:
                            description: |-
                              Request is the name chosen for a request in the referenced claim.
                              If empty, everything from the claim is made available, otherwise
                              only the result of this request.
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Limits describes the maximum amount of compute resources allowed.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: |-
                        Requests describes the minimum amount of compute resources required.
                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      type: object
                  type: object
                runtimeClassName:
                  description: |-
                    RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                    to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                    If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                    empty definition that uses the default runtime handler.
                    More info: https://github.com/kubernetes/enhancements/blob/master/keps/sig-node/585-runtime-class/README.md
                    This is a beta feature as of Kubernetes v1.14.
                  type: string
                securityContext:
                  description: |-
                    SecurityContext holds container-level security attributes and common container settings.
                    Optional: Defaults to empty.  See type description for default values of each field.
                  properties:
                    allowPrivilegeEscalation:
                      description: |-
                        AllowPrivilegeEscalation controls whether a process can gain more
                        privileges than its parent process. This bool directly controls if
                        the no_new_privs flag will be set on the container process.
                        AllowPrivilegeEscalation is true always when the container is:
                        1) run as Privileged
                        2) has CAP_SYS_ADMIN
                        Note that this field cannot be set when spec.os.name is windows.
                      type: boolean
                    appArmorProfile:
                      description: |-
                        appArmorProfile is the AppArmor options to use by this container. If set, this profile
                        overrides the pod's appArmorProfile.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        localhostProfile:
                          description: |-
                            localhostProfile indicates a profile loaded on the node that should be used.
                            The profile must be preconfigured on the node to work.
                            Must match the loaded name of the profile.
                            Must be set if and only if type is "Localhost".
                          type: string
                        type:
                          description: |-
                            type indicates which kind of AppArmor profile will be applied.
                            Valid options are:
                              Localhost - a profile pre-loaded on the node.
                              RuntimeDefault - the container runtime's default profile.
                              Unconfined - no AppArmor enforcement.
                          type: string
                      required:
                        - type
                      type: object
                    capabilities:
                      description: |-
                        The capabilities to add/drop when running containers.
                        Defaults to the default set of capabilities granted by the container runtime.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        add:
                          description: Added capabilities
                          items:
                            description: Capability represent POSIX capabilities type
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        drop:
                          description: Removed capabilities
                          items:
                            description: Capability represent POSIX capabilities type
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    privileged:
                      description: |-
                        Run container in privileged mode.
                        Processes in privileged containers are essentially equivalent to root on the host.
                        Defaults to false.
                        Note that this field cannot be set when spec.os.name is windows.
                      type: boolean
                    procMount:
                      description: |-
                        procMount denotes the type of proc mount to use for the containers.
                        The default value is Default which uses the container runtime defaults for
                        readonly paths and masked paths.
                        This requires the ProcMountType feature flag to be enabled.
                        Note that this field cannot be set when spec.os.name is windows.
                      type: string
                    readOnlyRootFilesystem:
                      description: |-
                        Whether this container has a read-only root filesystem.
                        Default is false.
                        Note that this field cannot be set when spec.os.name is windows.
                      type: boolean
                    runAsGroup:
                      description: |-
                        The GID to run the entrypoint of the container process.
                        Uses runtime default if unset.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is windows.
                      format: int64
                      type: integer
                    runAsNonRoot:
                      description: |-
                        Indicates that the container must run as a non-root user.
                        If true, the Kubelet will validate the image at runtime to ensure that it
                        does not run as UID 0 (root) and fail to start the container if it does.
                        If unset or false, no such validation will be performed.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                      type: boolean
                    runAsUser:
                      description: |-
                        The UID to run the entrypoint of the container process.
                        Defaults to user specified in image metadata if unspecified.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is windows.
                      format: int64
                      type: integer
                    seLinuxOptions:
                      description: |-
                        The SELinux context to be applied to the container.
                        If unspecified, the container runtime will allocate a random SELinux context for each
                        container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        level:
                          description: Level is SELinux level label that applies to the container.
                          type: string
                        role:
                          description: Role is a SELinux role label that applies to the container.
                          type: string
                        type:
                          description: Type is a SELinux type label that applies to the container.
                          type: string
                        user:
                          description: User is a SELinux user label that applies to the container.
                          type: string
                      type: object
                    seccompProfile:
                      description: |-
                        The seccomp options to use by this container. If seccomp options are
                        provided at both the pod & container level, the container options
                        override the pod options.
                        Note that this field cannot be set when spec.os.name is windows.
                      properties:
                        localhostProfile:
                          description: |-
                            localhostProfile indicates a profile defined in a file on the node should be used.
                            The profile must be preconfigured on the node to work.
                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                            Must be set if type is "Localhost". Must NOT be set for any other type.
                          type: string
                        type:
                          description: |-
                            type indicates which kind of seccomp profile will be applied.
                            Valid options are:

                            Localhost - a profile defined in a file on the node should be used.
                            RuntimeDefault - the container runtime default profile should be used.
                            Unconfined - no profile should be applied.
                          type: string
                      required:
                        - type
                      type: object
                    windowsOptions:
                      description: |-
                        The Windows specific settings applied to all containers.
                        If unspecified, the options from the PodSecurityContext will be used.
                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is linux.
                      properties:
                        gmsaCredentialSpec:
                          description: |-
                            GMSACredentialSpec is where the GMSA admission webhook
                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                            GMSA credential spec named by the GMSACredentialSpecName field.
                          type: string
                        gmsaCredentialSpecName:
                          description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                          type: string
                        hostProcess:
                          description: |-
                            HostProcess determines if a container should be run as a 'Host Process' container.
                            All of a Pod's containers must have the same effective HostProcess value
                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                          type: boolean
                        runAsUserName:
                          description: |-
                            The UserName in Windows to run the entrypoint of the container process.
                            Defaults to the user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext. If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                          type: string
                      type: object
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                    If specified, a ServiceAccount named this ServiceAccountName will be used for
                    the spec.serviceAccountName field in Pods to be created and for the subjects.name field
                    in a ClusterRoleBinding to be created.
                    If there is no ServiceAccount named this ServiceAccountName, a new ServiceAccount
                    will be created.
                    If there is a pre-existing ServiceAccount named this ServiceAccountName, the ServiceAccount
                    will be used. The annotations in the ControllerConfig will be copied to the ServiceAccount
                    and pre-existing annotations will be kept.
                    Regardless of whether there is a ServiceAccount created by Crossplane or is in place already,
                    the ServiceAccount will be deleted once the Provider and ControllerConfig are deleted.
                  type: string
                tolerations:
                  description: If specified, the pod's tolerations.
                  items:
                    description: |-
                      The pod this Toleration is attached to tolerates any taint that matches
                      the triple <key,value,effect> using the matching operator <operator>.
                    properties:
                      effect:
                        description: |-
                          Effect indicates the taint effect to match. Empty means match all taint effects.
                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: |-
                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: |-
                          Operator represents a key's relationship to the value.
                          Valid operators are Exists and Equal. Defaults to Equal.
                          Exists is equivalent to wildcard for value, so that a pod can
                          tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: |-
                          TolerationSeconds represents the period of time the toleration (which must be
                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                          negative values will be treated as 0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          Value is the taint value the toleration matches to.
                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
                    type: object
                  type: array
                volumeMounts:
                  description: |-
                    List of VolumeMounts to mount into the container's filesystem.
                    Cannot be updated.
                  items:
                    description: VolumeMount describes a mounting of a Volume within a container.
                    properties:
                      mountPath:
                        description: |-
                          Path within the container at which the volume should be mounted.  Must
                          not contain ':'.
                        type: string
                      mountPropagation:
                        description: |-
                          mountPropagation determines how mounts are propagated from the host
                          to container and the other way around.
                          When not set, MountPropagationNone is used.
                          This field is beta in 1.10.
                          When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                          (which defaults to None).
                        type: string
                      name:
                        description: This must match the Name of a Volume.
                        type: string
                      readOnly:
                        description: |-
                          Mounted read-only if true, read-write otherwise (false or unspecified).
                          Defaults to false.
                        type: boolean
                      recursiveReadOnly:
                        description: |-
                          RecursiveReadOnly specifies whether read-only mounts should be handled
                          recursively.

                          If ReadOnly is false, this field has no meaning and must be unspecified.

                          If ReadOnly is true, and this field is set to Disabled, the mount is not made
                          recursively read-only.  If this field is set to IfPossible, the mount is made
                          recursively read-only, if it is supported by the container runtime.  If this
                          field is set to Enabled, the mount is made recursively read-only if it is
                          supported by the container runtime, otherwise the pod will not be started and
                          an error will be generated to indicate the reason.

                          If this field is set to IfPossible or Enabled, MountPropagation must be set to
                          None (or be unspecified, which defaults to None).

                          If this field is not specified, it is treated as an equivalent of Disabled.
                        type: string
                      subPath:
                        description: |-
                          Path within the volume from which the container's volume should be mounted.
                          Defaults to "" (volume's root).
                        type: string
                      subPathExpr:
                        description: |-
                          Expanded path within the volume from which the container's volume should be mounted.
                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                          Defaults to "" (volume's root).
                          SubPathExpr and SubPath are mutually exclusive.
                        type: string
                    required:
                      - mountPath
                      - name
                    type: object
                  type: array
                volumes:
                  description: |-
                    List of volumes that can be mounted by containers belonging to the pod.
                    More info: https://kubernetes.io/docs/concepts/storage/volumes
                  items:
                    description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                    properties:
                      awsElasticBlockStore:
                        description: |-
                          awsElasticBlockStore represents an AWS Disk resource that is attached to a
                          kubelet's host machine and then exposed to the pod.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type of the volume that you want to mount.
                              Tip: Ensure that the filesystem type is supported by the host operating system.
                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            type: string
                          partition:
                            description: |-
                              partition is the partition in the volume that you want to mount.
                              If omitted, the default is to mount by volume name.
                              Examples: For volume /dev/sda1, you specify the partition as "1".
                              Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                            format: int32
                            type: integer
                          readOnly:
                            description: |-
                              readOnly value true will force the readOnly setting in VolumeMounts.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            type: boolean
                          volumeID:
                            description: |-
                              volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                            type: string
                        required:
                          - volumeID
                        type: object
                      azureDisk:
                        description: azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                        properties:
                          cachingMode:
                            description: 'cachingMode is the Host Caching mode: None, Read Only, Read Write.'
                            type: string
                          diskName:
                            description: diskName is the Name of the data disk in the blob storage
                            type: string
                          diskURI:
                            description: diskURI is the URI of data disk in the blob storage
                            type: string
                          fsType:
                            default: ext4
                            description: |-
                              fsType is Filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          kind:
                            description: 'kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                            type: string
                          readOnly:
                            default: false
                            description: |-
                              readOnly Defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                        required:
                          - diskName
                          - diskURI
                        type: object
                      azureFile:
                        description: azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                        properties:
                          readOnly:
                            description: |-
                              readOnly defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretName:
                            description: secretName is the  name of secret that contains Azure Storage Account Name and Key
                            type: string
                          shareName:
                            description: shareName is the azure share Name
                            type: string
                        required:
                          - secretName
                          - shareName
                        type: object
                      cephfs:
                        description: cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
                        properties:
                          monitors:
                            description: |-
                              monitors is Required: Monitors is a collection of Ceph monitors
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          path:
                            description: 'path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                            type: string
                          readOnly:
                            description: |-
                              readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                            type: boolean
                          secretFile:
                            description: |-
                              secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                            type: string
                          secretRef:
                            description: |-
                              secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            description: |-
                              user is optional: User is the rados user name, default is admin
                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                            type: string
                        required:
                          - monitors
                        type: object
                      cinder:
                        description: |-
                          cinder represents a cinder volume attached and mounted on kubelets host machine.
                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                            type: string
                          readOnly:
                            description: |-
                              readOnly defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                            type: boolean
                          secretRef:
                            description: |-
                              secretRef is optional: points to a secret object containing parameters used to connect
                              to OpenStack.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeID:
                            description: |-
                              volumeID used to identify the volume in cinder.
                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                            type: string
                        required:
                          - volumeID
                        type: object
                      configMap:
                        description: configMap represents a configMap that should populate this volume
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            format: int32
                            type: integer
                          items:
                            description: |-
                              items if unspecified, each key-value pair in the Data field of the referenced
                              ConfigMap will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the ConfigMap,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: optional specify whether the ConfigMap or its keys must be defined
                            type: boolean
                        type: object
                        x-kubernetes-map-type: atomic
                      csi:
                        description: csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
                        properties:
                          driver:
                            description: |-
                              driver is the name of the CSI driver that handles this volume.
                              Consult with your admin for the correct name as registered in the cluster.
                            type: string
                          fsType:
                            description: |-
                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                              If not provided, the empty value is passed to the associated CSI driver
                              which will determine the default filesystem to apply.
                            type: string
                          nodePublishSecretRef:
                            description: |-
                              nodePublishSecretRef is a reference to the secret object containing
                              sensitive information to pass to the CSI driver to complete the CSI
                              NodePublishVolume and NodeUnpublishVolume calls.
                              This field is optional, and  may be empty if no secret is required. If the
                              secret object contains more than one secret, all secret references are passed.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          readOnly:
                            description: |-
                              readOnly specifies a read-only configuration for the volume.
                              Defaults to false (read/write).
                            type: boolean
                          volumeAttributes:
                            additionalProperties:
                              type: string
                            description: |-
                              volumeAttributes stores driver-specific properties that are passed to the CSI
                              driver. Consult your driver's documentation for supported values.
                            type: object
                        required:
                          - driver
                        type: object
                      downwardAPI:
                        description: downwardAPI represents downward API about the pod that should populate this volume
                        properties:
                          defaultMode:
                            description: |-
                              Optional: mode bits to use on created files by default. Must be a
                              Optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            format: int32
                            type: integer
                          items:
                            description: Items is a list of downward API volume file
                            items:
                              description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                              properties:
                                fieldRef:
                                  description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in the specified API version.
                                      type: string
                                  required:
                                    - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                mode:
                                  description: |-
                                    Optional: mode bits used to set permissions on this file, must be an octal value
                                    between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                path:
                                  description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                  type: string
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes, optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                    - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      emptyDir:
                        description: |-
                          emptyDir represents a temporary directory that shares a pod's lifetime.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            anyOf:
                              - type: integer
                              - type: string
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      ephemeral:
                        description: |-
                          ephemeral represents a volume that is handled by a cluster storage driver.
                          The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                          and deleted when the pod is removed.

                          Use this if:
                          a) the volume is only needed while the pod runs,
                          b) features of normal volumes like restoring from snapshot or capacity
                             tracking are needed,
                          c) the storage driver is specified through a storage class, and
                          d) the storage driver supports dynamic volume provisioning through
                             a PersistentVolumeClaim (see EphemeralVolumeSource for more
                             information on the connection between this volume type
                             and PersistentVolumeClaim).

                          Use PersistentVolumeClaim or one of the vendor-specific
                          APIs for volumes that persist for longer than the lifecycle
                          of an individual pod.

                          Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                          be used that way - see the documentation of the driver for
                          more information.

                          A pod can use both types of ephemeral volumes and
                          persistent volumes at the same time.
                        properties:
                          volumeClaimTemplate:
                            description: |-
                              Will be used to create a stand-alone PVC to provision the volume.
                              The pod in which this EphemeralVolumeSource is embedded will be the
                              owner of the PVC, i.e. the PVC will be deleted together with the
                              pod.  The name of the PVC will be `<pod name>-<volume name>` where
                              `<volume name>` is the name from the `PodSpec.Volumes` array
                              entry. Pod validation will reject the pod if the concatenated name
                              is not valid for a PVC (for example, too long).

                              An existing PVC with that name that is not owned by the pod
                              will *not* be used for the pod to avoid using an unrelated
                              volume by mistake. Starting the pod is then blocked until
                              the unrelated PVC is removed. If such a pre-created PVC is
                              meant to be used by the pod, the PVC has to updated with an
                              owner reference to the pod once the pod exists. Normally
                              this should not be necessary, but it may be useful when
                              manually reconstructing a broken cluster.

                              This field is read-only and no changes will be made by Kubernetes
                              to the PVC after it has been created.

                              Required, must not be nil.
                            properties:
                              metadata:
                                description: |-
                                  May contain labels and annotations that will be copied into the PVC
                                  when creating it. No other fields are allowed and will be rejected during
                                  validation.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                description: |-
                                  The specification for the PersistentVolumeClaim. The entire content is
                                  copied unchanged into the PVC that gets created from this
                                  template. The same fields as in a PersistentVolumeClaim
                                  are also valid here.
                                properties:
                                  accessModes:
                                    description: |-
                                      accessModes contains the desired access modes the volume should have.
                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  dataSource:
                                    description: |-
                                      dataSource field can be used to specify either:
                                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                      * An existing PVC (PersistentVolumeClaim)
                                      If the provisioner or an external controller can support the specified data source,
                                      it will create a new volume based on the contents of the specified data source.
                                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                    properties:
                                      apiGroup:
                                        description: |-
                                          APIGroup is the group for the resource being referenced.
                                          If APIGroup is not specified, the specified Kind must be in the core API group.
                                          For any other third-party types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being referenced
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  dataSourceRef:
                                    description: |-
                                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                      volume is desired. This may be any object from a non-empty API group (non
                                      core object) or a PersistentVolumeClaim object.
                                      When this field is specified, volume binding will only succeed if the type of
                                      the specified object matches some installed volume populator or dynamic
                                      provisioner.
                                      This field will replace the functionality of the dataSource field and as such
                                      if both fields are non-empty, they must have the same value. For backwards
                                      compatibility, when namespace isn't specified in dataSourceRef,
                                      both fields (dataSource and dataSourceRef) will be set to the same
                                      value automatically if one of them is empty and the other is non-empty.
                                      When namespace is specified in dataSourceRef,
                                      dataSource isn't set to the same value and must be empty.
                                      There are three important differences between dataSource and dataSourceRef:
                                      * While dataSource only allows two specific types of objects, dataSourceRef
                                        allows any non-core object, as well as PersistentVolumeClaim objects.
                                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                        preserves all values, and generates an error if a disallowed value is
                                        specified.
                                      * While dataSource only allows local objects, dataSourceRef allows objects
                                        in any namespaces.
                                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                    properties:
                                      apiGroup:
                                        description: |-
                                          APIGroup is the group for the resource being referenced.
                                          If APIGroup is not specified, the specified Kind must be in the core API group.
                                          For any other third-party types, APIGroup is required.
                                        type: string
                                      kind:
                                        description: Kind is the type of resource being referenced
                                        type: string
                                      name:
                                        description: Name is the name of resource being referenced
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace is the namespace of resource being referenced
                                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  resources:
                                    description: |-
                                      resources represents the minimum resources the volume should have.
                                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                      that are lower than previous value but must still be higher than capacity recorded in the
                                      status field of the claim.
                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                    properties:
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: |-
                                          Limits describes the maximum amount of compute resources allowed.
                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: |-
                                          Requests describes the minimum amount of compute resources required.
                                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                        type: object
                                    type: object
                                  selector:
                                    description: selector is a label query over volumes to consider for binding.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  storageClassName:
                                    description: |-
                                      storageClassName is the name of the StorageClass required by the claim.
                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                    type: string
                                  volumeAttributesClassName:
                                    description: |-
                                      volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                      If specified, the CSI driver will create or update the volume with the attributes defined
                                      in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                      it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                      will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                      If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                      will be set by the persistentvolume controller if it exists.
                                      If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                      set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                      exists.
                                      More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                      (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                    type: string
                                  volumeMode:
                                    description: |-
                                      volumeMode defines what type of volume is required by the claim.
                                      Value of Filesystem is implied when not included in claim spec.
                                    type: string
                                  volumeName:
                                    description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                    type: string
                                type: object
                            required:
                              - spec
                            type: object
                        type: object
                      fc:
                        description: fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          lun:
                            description: 'lun is Optional: FC target lun number'
                            format: int32
                            type: integer
                          readOnly:
                            description: |-
                              readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          targetWWNs:
                            description: 'targetWWNs is Optional: FC target worldwide names (WWNs)'
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          wwids:
                            description: |-
                              wwids Optional: FC volume world wide identifiers (wwids)
                              Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      flexVolume:
                        description: |-
                          flexVolume represents a generic volume resource that is
                          provisioned/attached using an exec based plugin.
                        properties:
                          driver:
                            description: driver is the name of the driver to use for this volume.
                            type: string
                          fsType:
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                            type: string
                          options:
                            additionalProperties:
                              type: string
                            description: 'options is Optional: this field holds extra command options if any.'
                            type: object
                          readOnly:
                            description: |-
                              readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: |-
                              secretRef is Optional: secretRef is reference to the secret object containing
                              sensitive information to pass to the plugin scripts. This may be
                              empty if no secret object is specified. If the secret object
                              contains more than one secret, all secrets are passed to the plugin
                              scripts.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                          - driver
                        type: object
                      flocker:
                        description: flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
                        properties:
                          datasetName:
                            description: |-
                              datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                              should be considered as deprecated
                            type: string
                          datasetUUID:
                            description: datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                            type: string
                        type: object
                      gcePersistentDisk:
                        description: |-
                          gcePersistentDisk represents a GCE Disk resource that is attached to a
                          kubelet's host machine and then exposed to the pod.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                        properties:
                          fsType:
                            description: |-
                              fsType is filesystem type of the volume that you want to mount.
                              Tip: Ensure that the filesystem type is supported by the host operating system.
                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            type: string
                          partition:
                            description: |-
                              partition is the partition in the volume that you want to mount.
                              If omitted, the default is to mount by volume name.
                              Examples: For volume /dev/sda1, you specify the partition as "1".
                              Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            format: int32
                            type: integer
                          pdName:
                            description: |-
                              pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the ReadOnly setting in VolumeMounts.
                              Defaults to false.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                            type: boolean
                        required:
                          - pdName
                        type: object
                      gitRepo:
                        description: |-
                          gitRepo represents a git repository at a particular revision.
                          DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                          into the Pod's container.
                        properties:
                          directory:
                            description: |-
                              directory is the target directory name.
                              Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                              git repository.  Otherwise, if specified, the volume will contain the git repository in
                              the subdirectory with the given name.
                            type: string
                          repository:
                            description: repository is the URL
                            type: string
                          revision:
                            description: revision is the commit hash for the specified revision.
                            type: string
                        required:
                          - repository
                        type: object
                      glusterfs:
                        description: |-
                          glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                          More info: https://examples.k8s.io/volumes/glusterfs/README.md
                        properties:
                          endpoints:
                            description: |-
                              endpoints is the endpoint name that details Glusterfs topology.
                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                            type: string
                          path:
                            description: |-
                              path is the Glusterfs volume path.
                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                              Defaults to false.
                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                            type: boolean
                        required:
                          - endpoints
                          - path
                        type: object
                      hostPath:
                        description: |-
                          hostPath represents a pre-existing file or directory on the host
                          machine that is directly exposed to the container. This is generally
                          used for system agents or other privileged things that are allowed
                          to see the host machine. Most containers will NOT need this.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        properties:
                          path:
                            description: |-
                              path of the directory on the host.
                              If the path is a symlink, it will follow the link to the real path.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            type: string
                          type:
                            description: |-
                              type for HostPath Volume
                              Defaults to ""
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            type: string
                        required:
                          - path
                        type: object
                      image:
                        description: |-
                          image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                          The volume is resolved at pod startup depending on which PullPolicy value is provided:

                          - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                          - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                          - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                          The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                          A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                          The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                          The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                          The volume will be mounted read-only (ro) and non-executable files (noexec).
                          Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).
                          The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                        properties:
                          pullPolicy:
                            description: |-
                              Policy for pulling OCI objects. Possible values are:
                              Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                              Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                              IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                              Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                            type: string
                          reference:
                            description: |-
                              Required: Image or artifact reference to be used.
                              Behaves in the same way as pod.spec.containers[*].image.
                              Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                              More info: https://kubernetes.io/docs/concepts/containers/images
                              This field is optional to allow higher level config management to default or override
                              container images in workload controllers like Deployments and StatefulSets.
                            type: string
                        type: object
                      iscsi:
                        description: |-
                          iscsi represents an ISCSI Disk resource that is attached to a
                          kubelet's host machine and then exposed to the pod.
                          More info: https://examples.k8s.io/volumes/iscsi/README.md
                        properties:
                          chapAuthDiscovery:
                            description: chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                            type: boolean
                          chapAuthSession:
                            description: chapAuthSession defines whether support iSCSI Session CHAP authentication
                            type: boolean
                          fsType:
                            description: |-
                              fsType is the filesystem type of the volume that you want to mount.
                              Tip: Ensure that the filesystem type is supported by the host operating system.
                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                            type: string
                          initiatorName:
                            description: |-
                              initiatorName is the custom iSCSI Initiator Name.
                              If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                              <target portal>:<volume name> will be created for the connection.
                            type: string
                          iqn:
                            description: iqn is the target iSCSI Qualified Name.
                            type: string
                          iscsiInterface:
                            default: default
                            description: |-
                              iscsiInterface is the interface Name that uses an iSCSI transport.
                              Defaults to 'default' (tcp).
                            type: string
                          lun:
                            description: lun represents iSCSI Target Lun number.
                            format: int32
                            type: integer
                          portals:
                            description: |-
                              portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                              is other than default (typically TCP ports 860 and 3260).
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          readOnly:
                            description: |-
                              readOnly here will force the ReadOnly setting in VolumeMounts.
                              Defaults to false.
                            type: boolean
                          secretRef:
                            description: secretRef is the CHAP Secret for iSCSI target and initiator authentication
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          targetPortal:
                            description: |-
                              targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                              is other than default (typically TCP ports 860 and 3260).
                            type: string
                        required:
                          - iqn
                          - lun
                          - targetPortal
                        type: object
                      name:
                        description: |-
                          name of the volume.
                          Must be a DNS_LABEL and unique within the pod.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      nfs:
                        description: |-
                          nfs represents an NFS mount on the host that shares a pod's lifetime
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                        properties:
                          path:
                            description: |-
                              path that is exported by the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the NFS export to be mounted with read-only permissions.
                              Defaults to false.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: boolean
                          server:
                            description: |-
                              server is the hostname or IP address of the NFS server.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                            type: string
                        required:
                          - path
                          - server
                        type: object
                      persistentVolumeClaim:
                        description: |-
                          persistentVolumeClaimVolumeSource represents a reference to a
                          PersistentVolumeClaim in the same namespace.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                        properties:
                          claimName:
                            description: |-
                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            type: string
                          readOnly:
                            description: |-
                              readOnly Will force the ReadOnly setting in VolumeMounts.
                              Default false.
                            type: boolean
                        required:
                          - claimName
                        type: object
                      photonPersistentDisk:
                        description: photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          pdID:
                            description: pdID is the ID that identifies Photon Controller persistent disk
                            type: string
                        required:
                          - pdID
                        type: object
                      portworxVolume:
                        description: portworxVolume represents a portworx volume attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: |-
                              fSType represents the filesystem type to mount
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: |-
                              readOnly defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          volumeID:
                            description: volumeID uniquely identifies a Portworx volume
                            type: string
                        required:
                          - volumeID
                        type: object
                      projected:
                        description: projected items for all in one resources secrets, configmaps, and downward API
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode are the mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            format: int32
                            type: integer
                          sources:
                            description: |-
                              sources is the list of volume projections. Each entry in this list
                              handles one source.
                            items:
                              description: |-
                                Projection that may be projected along with other supported volume types.
                                Exactly one of these fields must be set.
                              properties:
                                clusterTrustBundle:
                                  description: |-
                                    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                    of ClusterTrustBundle objects in an auto-updating file.

                                    Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                    ClusterTrustBundle objects can either be selected by name, or by the
                                    combination of signer name and a label selector.

                                    Kubelet performs aggressive normalization of the PEM contents written
                                    into the pod filesystem.  Esoteric PEM features such as inter-block
                                    comments and block headers are stripped.  Certificates are deduplicated.
                                    The ordering of certificates within the file is arbitrary, and Kubelet
                                    may change the order over time.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        Select all ClusterTrustBundles that match this label selector.  Only has
                                        effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                        interpreted as "match nothing".  If set but empty, interpreted as "match
                                        everything".
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    name:
                                      description: |-
                                        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                        with signerName and labelSelector.
                                      type: string
                                    optional:
                                      description: |-
                                        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                        aren't available.  If using name, then the named ClusterTrustBundle is
                                        allowed not to exist.  If using signerName, then the combination of
                                        signerName and labelSelector is allowed to match zero
                                        ClusterTrustBundles.
                                      type: boolean
                                    path:
                                      description: Relative path from the volume root to write the bundle.
                                      type: string
                                    signerName:
                                      description: |-
                                        Select all ClusterTrustBundles that match this signer name.
                                        Mutually-exclusive with name.  The contents of all selected
                                        ClusterTrustBundles will be unified and deduplicated.
                                      type: string
                                  required:
                                    - path
                                  type: object
                                configMap:
                                  description: configMap information about the configMap data to project
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        ConfigMap will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the ConfigMap,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap or its keys must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                downwardAPI:
                                  description: downwardAPI information about the downwardAPI data to project
                                  properties:
                                    items:
                                      description: Items is a list of DownwardAPIVolume file
                                      items:
                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to select in the specified API version.
                                                type: string
                                            required:
                                              - fieldPath
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          mode:
                                            description: |-
                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: |-
                                              Selects a resource of the container: only resources limits and requests
                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                            properties:
                                              containerName:
                                                description: 'Container name: required for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to select'
                                                type: string
                                            required:
                                              - resource
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                secret:
                                  description: secret information about the secret data to project
                                  properties:
                                    items:
                                      description: |-
                                        items if unspecified, each key-value pair in the Data field of the referenced
                                        Secret will be projected into the volume as a file whose name is the
                                        key and content is the value. If specified, the listed keys will be
                                        projected into the specified paths, and unlisted keys will not be
                                        present. If a key is specified which is not present in the Secret,
                                        the volume setup will error unless it is marked optional. Paths must be
                                        relative and may not contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: |-
                                              mode is Optional: mode bits used to set permissions on this file.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              If not specified, the volume defaultMode will be used.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          path:
                                            description: |-
                                              path is the relative path of the file to map the key to.
                                              May not be an absolute path.
                                              May not contain the path element '..'.
                                              May not start with the string '..'.
                                            type: string
                                        required:
                                          - key
                                          - path
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: optional field specify whether the Secret or its key must be defined
                                      type: boolean
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serviceAccountToken:
                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                  properties:
                                    audience:
                                      description: |-
                                        audience is the intended audience of the token. A recipient of a token
                                        must identify itself with an identifier specified in the audience of the
                                        token, and otherwise should reject the token. The audience defaults to the
                                        identifier of the apiserver.
                                      type: string
                                    expirationSeconds:
                                      description: |-
                                        expirationSeconds is the requested duration of validity of the service
                                        account token. As the token approaches expiration, the kubelet volume
                                        plugin will proactively rotate the service account token. The kubelet will
                                        start trying to rotate the token if the token is older than 80 percent of
                                        its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                        and must be at least 10 minutes.
                                      format: int64
                                      type: integer
                                    path:
                                      description: |-
                                        path is the path relative to the mount point of the file to project the
                                        token into.
                                      type: string
                                  required:
                                    - path
                                  type: object
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      quobyte:
                        description: quobyte represents a Quobyte mount on the host that shares a pod's lifetime
                        properties:
                          group:
                            description: |-
                              group to map volume access to
                              Default is no group
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                              Defaults to false.
                            type: boolean
                          registry:
                            description: |-
                              registry represents a single or multiple Quobyte Registry services
                              specified as a string as host:port pair (multiple entries are separated with commas)
                              which acts as the central registry for volumes
                            type: string
                          tenant:
                            description: |-
                              tenant owning the given Quobyte volume in the Backend
                              Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                            type: string
                          user:
                            description: |-
                              user to map volume access to
                              Defaults to serivceaccount user
                            type: string
                          volume:
                            description: volume is a string that references an already created Quobyte volume by name.
                            type: string
                        required:
                          - registry
                          - volume
                        type: object
                      rbd:
                        description: |-
                          rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                          More info: https://examples.k8s.io/volumes/rbd/README.md
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type of the volume that you want to mount.
                              Tip: Ensure that the filesystem type is supported by the host operating system.
                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                            type: string
                          image:
                            description: |-
                              image is the rados image name.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            type: string
                          keyring:
                            default: /etc/ceph/keyring
                            description: |-
                              keyring is the path to key ring for RBDUser.
                              Default is /etc/ceph/keyring.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            type: string
                          monitors:
                            description: |-
                              monitors is a collection of Ceph monitors.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          pool:
                            default: rbd
                            description: |-
                              pool is the rados pool name.
                              Default is rbd.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            type: string
                          readOnly:
                            description: |-
                              readOnly here will force the ReadOnly setting in VolumeMounts.
                              Defaults to false.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            type: boolean
                          secretRef:
                            description: |-
                              secretRef is name of the authentication secret for RBDUser. If provided
                              overrides keyring.
                              Default is nil.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          user:
                            default: admin
                            description: |-
                              user is the rados user name.
                              Default is admin.
                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                            type: string
                        required:
                          - image
                          - monitors
                        type: object
                      scaleIO:
                        description: scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            default: xfs
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs".
                              Default is "xfs".
                            type: string
                          gateway:
                            description: gateway is the host address of the ScaleIO API Gateway.
                            type: string
                          protectionDomain:
                            description: protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                            type: string
                          readOnly:
                            description: |-
                              readOnly Defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: |-
                              secretRef references to the secret for ScaleIO user and other
                              sensitive information. If this is not provided, Login operation will fail.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          sslEnabled:
                            description: sslEnabled Flag enable/disable SSL communication with Gateway, default false
                            type: boolean
                          storageMode:
                            default: ThinProvisioned
                            description: |-
                              storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                              Default is ThinProvisioned.
                            type: string
                          storagePool:
                            description: storagePool is the ScaleIO Storage Pool associated with the protection domain.
                            type: string
                          system:
                            description: system is the name of the storage system as configured in ScaleIO.
                            type: string
                          volumeName:
                            description: |-
                              volumeName is the name of a volume already created in the ScaleIO system
                              that is associated with this volume source.
                            type: string
                        required:
                          - gateway
                          - secretRef
                          - system
                        type: object
                      secret:
                        description: |-
                          secret represents a secret that should populate this volume.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                        properties:
                          defaultMode:
                            description: |-
                              defaultMode is Optional: mode bits used to set permissions on created files by default.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values
                              for mode bits. Defaults to 0644.
                              Directories within the path are not affected by this setting.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                            format: int32
                            type: integer
                          items:
                            description: |-
                              items If unspecified, each key-value pair in the Data field of the referenced
                              Secret will be projected into the volume as a file whose name is the
                              key and content is the value. If specified, the listed keys will be
                              projected into the specified paths, and unlisted keys will not be
                              present. If a key is specified which is not present in the Secret,
                              the volume setup will error unless it is marked optional. Paths must be
                              relative and may not contain the '..' path or start with '..'.
                            items:
                              description: Maps a string key to a path within a volume.
                              properties:
                                key:
                                  description: key is the key to project.
                                  type: string
                                mode:
                                  description: |-
                                    mode is Optional: mode bits used to set permissions on this file.
                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                    If not specified, the volume defaultMode will be used.
                                    This might be in conflict with other options that affect the file
                                    mode, like fsGroup, and the result can be other mode bits set.
                                  format: int32
                                  type: integer
                                path:
                                  description: |-
                                    path is the relative path of the file to map the key to.
                                    May not be an absolute path.
                                    May not contain the path element '..'.
                                    May not start with the string '..'.
                                  type: string
                              required:
                                - key
                                - path
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          optional:
                            description: optional field specify whether the Secret or its keys must be defined
                            type: boolean
                          secretName:
                            description: |-
                              secretName is the name of the secret in the pod's namespace to use.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                            type: string
                        type: object
                      storageos:
                        description: storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                        properties:
                          fsType:
                            description: |-
                              fsType is the filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          readOnly:
                            description: |-
                              readOnly defaults to false (read/write). ReadOnly here will force
                              the ReadOnly setting in VolumeMounts.
                            type: boolean
                          secretRef:
                            description: |-
                              secretRef specifies the secret to use for obtaining the StorageOS API
                              credentials.  If not specified, default values will be attempted.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          volumeName:
                            description: |-
                              volumeName is the human-readable name of the StorageOS volume.  Volume
                              names are only unique within a namespace.
                            type: string
                          volumeNamespace:
                            description: |-
                              volumeNamespace specifies the scope of the volume within StorageOS.  If no
                              namespace is specified then the Pod's namespace will be used.  This allows the
                              Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                              Set VolumeName to any name to override the default behaviour.
                              Set to "default" if you are not using namespaces within StorageOS.
                              Namespaces that do not pre-exist within StorageOS will be created.
                            type: string
                        type: object
                      vsphereVolume:
                        description: vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
                        properties:
                          fsType:
                            description: |-
                              fsType is filesystem type to mount.
                              Must be a filesystem type supported by the host operating system.
                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                            type: string
                          storagePolicyID:
                            description: storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                            type: string
                          storagePolicyName:
                            description: storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                            type: string
                          volumePath:
                            description: volumePath is the path that identifies vSphere volume vmdk
                            type: string
                        required:
                          - volumePath
                        type: object
                    required:
                      - name
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: cronoperations.ops.crossplane.io
spec:
  conversion:
    strategy: None
  group: ops.crossplane.io
  names:
    categories:
      - crossplane
    kind: CronOperation
    listKind: CronOperationList
    plural: cronoperations
    shortNames:
      - cronops
    singular: cronoperation
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: SCHEDULE
          type: string
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Scheduling')].status
          name: SCHEDULING
          type: string
        - jsonPath: .status.lastScheduleTime
          name: LAST SCHEDULE
          type: date
        - jsonPath: .status.lastSuccessfulTime
          name: LAST SUCCESS
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: A CronOperation creates Operations on a cron schedule.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CronOperationSpec specifies the desired state of a CronOperation.
              properties:
                concurrencyPolicy:
                  default: Allow
                  description: |-
                    ConcurrencyPolicy specifies how to treat concurrent executions of an
                    operation.
                  enum:
                    - Allow
                    - Forbid
                    - Replace
                  type: string
                failedHistoryLimit:
                  default: 1
                  description: FailedHistoryLimit is the number of failed Operations to retain.
                  format: int32
                  type: integer
                operationTemplate:
                  description: OperationTemplate is the template for the Operation to be created.
                  properties:
                    metadata:
                      description: Standard object metadata.
                      type: object
                    spec:
                      description: Spec is the specification of the Operation to be created.
                      properties:
                        mode:
                          default: Pipeline
                          description: |-
                            Mode controls what type or "mode" of operation will be used.

                            "Pipeline" indicates that an Operation specifies a pipeline of
                            functions, each of which is responsible for implementing its logic.
                          enum:
                            - Pipeline
                          type: string
                        pipeline:
                          description: |-
                            Pipeline is a list of operation function steps that will be used when
                            this operation runs.
                          items:
                            description: A PipelineStep in an operation function pipeline.
                            properties:
                              credentials:
                                description: Credentials are optional credentials that the operation function needs.
                                items:
                                  description: |-
                                    FunctionCredentials are optional credentials that a function
                                    needs to run.
                                  properties:
                                    name:
                                      description: Name of this set of credentials.
                                      type: string
                                    secretRef:
                                      description: |-
                                        A SecretRef is a reference to a secret containing credentials that should
                                        be supplied to the function.
                                      properties:
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                        - name
                                        - namespace
                                      type: object
                                    source:
                                      description: Source of the function credentials.
                                      enum:
                                        - None
                                        - Secret
                                      type: string
                                  required:
                                    - name
                                    - source
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              functionRef:
                                description: |-
                                  FunctionRef is a reference to the function this step should
                                  execute.
                                properties:
                                  name:
                                    description: Name of the referenced function.
                                    type: string
                                required:
                                  - name
                                type: object
                              input:
                                description: |-
                                  Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                                  with an apiVersion and kind) that will be passed to the unction as
                                  the 'input' of its RunFunctionRequest.
                                type: object
                                x-kubernetes-embedded-resource: true
                                x-kubernetes-preserve-unknown-fields: true
                              requirements:
                                description: |-
                                  Requirements are resource requirements that will be satisfied before
                                  this pipeline step is called for the first time. This allows
                                  pre-populating required resources without requiring a function to
                                  request them first.
                                properties:
                                  requiredResources:
                                    description: |-
                                      RequiredResources that will be fetched before this pipeline step
                                      is called for the first time.
                                    items:
                                      description: |-
                                        RequiredResourceSelector selects resources that should be fetched before
                                        a pipeline step runs.
                                      properties:
                                        apiVersion:
                                          description: APIVersion of resources to select.
                                          type: string
                                        kind:
                                          description: Kind of resources to select.
                                          type: string
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            MatchLabels matches resources by label selector. Only one of Name or
                                            MatchLabels may be specified.
                                          type: object
                                        name:
                                          description: |-
                                            Name matches a single resource by name. Only one of Name or
                                            MatchLabels may be specified.
                                          type: string
                                        namespace:
                                          description: Namespace to search for resources. Optional for cluster-scoped resources.
                                          type: string
                                        requirementName:
                                          description: |-
                                            RequirementName uniquely identifies this group of resources.
                                            This name will be used as the key in RunFunctionRequest.required_resources.
                                          type: string
                                      required:
                                        - apiVersion
                                        - kind
                                        - requirementName
                                      type: object
                                      x-kubernetes-validations:
                                        - message: Either name or matchLabels must be specified, but not both
                                          rule: (has(self.name) && !has(self.matchLabels)) || (!has(self.name) && has(self.matchLabels))
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - requirementName
                                    x-kubernetes-list-type: map
                                type: object
                              step:
                                description: Step name. Must be unique within its Pipeline.
                                type: string
                            required:
                              - functionRef
                              - step
                            type: object
                          maxItems: 99
                          minItems: 1
                          type: array
                          x-kubernetes-list-map-keys:
                            - step
                          x-kubernetes-list-type: map
                        retryLimit:
                          description: |-
                            RetryLimit configures how many times the operation may fail. When the
                            failure limit is exceeded, the operation will not be retried.
                          format: int64
                          type: integer
                      required:
                        - mode
                        - pipeline
                      type: object
                  required:
                    - spec
                  type: object
                schedule:
                  description: Schedule is the cron schedule for the operation.
                  type: string
                startingDeadlineSeconds:
                  description: |-
                    StartingDeadlineSeconds is the deadline in seconds for starting the
                    operation if it misses its scheduled time for any reason.
                  format: int64
                  type: integer
                successfulHistoryLimit:
                  default: 3
                  description: SuccessfulHistoryLimit is the number of successful Operations to retain.
                  format: int32
                  type: integer
              required:
                - operationTemplate
                - schedule
              type: object
            status:
              description: CronOperationStatus represents the observed state of a CronOperation.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastScheduleTime:
                  description: LastScheduleTime is the last time the CronOperation was scheduled.
                  format: date-time
                  type: string
                lastSuccessfulTime:
                  description: |-
                    LastSuccessfulTime is the last time the CronOperation was successfully
                    completed.
                  format: date-time
                  type: string
                runningOperationRefs:
                  description: RunningOperationRefs is a list of currently running Operations.
                  items:
                    description: A RunningOperationRef is a reference to a running operation.
                    properties:
                      name:
                        description: Name of the active operation.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: deploymentruntimeconfigs.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
    kind: DeploymentRuntimeConfig
    listKind: DeploymentRuntimeConfigList
    plural: deploymentruntimeconfigs
    singular: deploymentruntimeconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            The DeploymentRuntimeConfig provides settings for the Kubernetes Deployment
            of a Provider or composition function package.

            Read the Crossplane documentation for
            [more information about DeploymentRuntimeConfigs](https://docs.crossplane.io/latest/concepts/providers/#runtime-configuration).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                DeploymentRuntimeConfigSpec specifies the configuration for a packaged controller.
                Values provided will override package manager defaults. Labels and
                annotations are passed to both the controller Deployment and ServiceAccount.
              properties:
                deploymentTemplate:
                  description: DeploymentTemplate is the template for the Deployment object.
                  properties:
                    metadata:
                      description: Metadata contains the configurable metadata fields for the Deployment.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that
                            may be set by external tools to store and retrieve arbitrary metadata.
                            They are not queryable and should be preserved when modifying objects.
                            More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. Labels will be merged with internal labels
                            used by crossplane, and labels with a crossplane.io key might be
                            overwritten.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                        name:
                          description: Name is the name of the object.
                          type: string
                      type: object
                    spec:
                      description: Spec contains the configurable spec fields for the Deployment object.
                      properties:
                        minReadySeconds:
                          description: |-
                            Minimum number of seconds for which a newly created pod should be ready
                            without any of its container crashing, for it to be considered available.
                            Defaults to 0 (pod will be considered available as soon as it is ready)
                          format: int32
                          type: integer
                        paused:
                          description: Indicates that the deployment is paused.
                          type: boolean
                        progressDeadlineSeconds:
                          description: |-
                            The maximum time in seconds for a deployment to make progress before it
                            is considered to be failed. The deployment controller will continue to
                            process failed deployments and a condition with a ProgressDeadlineExceeded
                            reason will be surfaced in the deployment status. Note that progress will
                            not be estimated during the time a deployment is paused. Defaults to 600s.
                          format: int32
                          type: integer
                        replicas:
                          description: |-
                            Number of desired pods. This is a pointer to distinguish between explicit
                            zero and not specified. Defaults to 1.
                          format: int32
                          type: integer
                        revisionHistoryLimit:
                          description: |-
                            The number of old ReplicaSets to retain to allow rollback.
                            This is a pointer to distinguish between explicit zero and not specified.
                            Defaults to 10.
                          format: int32
                          type: integer
                        selector:
                          description: |-
                            Label selector for pods. Existing ReplicaSets whose pods are
                            selected by this will be the ones affected by this deployment.
                            It must match the pod template's labels.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        strategy:
                          description: The deployment strategy to use to replace existing pods with new ones.
                          properties:
                            rollingUpdate:
                              description: |-
                                Rolling update config params. Present only if DeploymentStrategyType =
                                RollingUpdate.
                              properties:
                                maxSurge:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: |-
                                    The maximum number of pods that can be scheduled above the desired number of
                                    pods.
                                    Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                    This can not be 0 if MaxUnavailable is 0.
                                    Absolute number is calculated from percentage by rounding up.
                                    Defaults to 25%.
                                    Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                                    the rolling update starts, such that the total number of old and new pods do not exceed
                                    130% of desired pods. Once old pods have been killed,
                                    new ReplicaSet can be scaled up further, ensuring that total number of pods running
                                    at any time during the update is at most 130% of desired pods.
                                  x-kubernetes-int-or-string: true
                                maxUnavailable:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: |-
                                    The maximum number of pods that can be unavailable during the update.
                                    Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                                    Absolute number is calculated from percentage by rounding down.
                                    This can not be 0 if MaxSurge is 0.
                                    Defaults to 25%.
                                    Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                                    immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                                    can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                                    that the total number of pods available at all times during the update is at
                                    least 70% of desired pods.
                                  x-kubernetes-int-or-string: true
                              type: object
                            type:
                              description: Type of deployment. Can be "Recreate" or "RollingUpdate". Default is RollingUpdate.
                              type: string
                          type: object
                        template:
                          description: |-
                            Template describes the pods that will be created.
                            The only allowed template.spec.restartPolicy value is "Always".
                          properties:
                            metadata:
                              description: |-
                                Standard object's metadata.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                finalizers:
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            spec:
                              description: |-
                                Specification of the desired behavior of the pod.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                              properties:
                                activeDeadlineSeconds:
                                  description: |-
                                    Optional duration in seconds the pod may be active on the node relative to
                                    StartTime before the system will actively try to mark it failed and kill associated containers.
                                    Value must be a positive integer.
                                  format: int64
                                  type: integer
                                affinity:
                                  description: If specified, the pod's scheduling constraints
                                  properties:
                                    nodeAffinity:
                                      description: Describes node affinity scheduling rules for the pod.
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node matches the corresponding matchExpressions; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: |-
                                              An empty preferred scheduling term matches all objects with implicit weight 0
                                              (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term, associated with the corresponding weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector requirements by node's labels.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchFields:
                                                    description: A list of node selector requirements by node's fields.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              weight:
                                                description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - preference
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to an update), the system
                                            may or may not try to eventually evict the pod from its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node selector terms. The terms are ORed.
                                              items:
                                                description: |-
                                                  A null or empty node selector term matches no objects. The requirements of
                                                  them are ANDed.
                                                  The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector requirements by node's labels.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchFields:
                                                    description: A list of node selector requirements by node's fields.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - nodeSelectorTerms
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    podAffinity:
                                      description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity term, associated with the corresponding weight.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              weight:
                                                description: |-
                                                  weight associated with matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - podAffinityTerm
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to a pod label update), the
                                            system may or may not try to eventually evict the pod from its node.
                                            When there are multiple elements, the lists of nodes corresponding to each
                                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                          items:
                                            description: |-
                                              Defines a set of pods (namely those matching the labelSelector
                                              relative to the given namespace(s)) that this pod should be
                                              co-located (affinity) or not co-located (anti-affinity) with,
                                              where co-located is defined as running on a node whose value of
                                              the label with key <topologyKey> matches that of any node on which
                                              a pod of the set of pods is running
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    podAntiAffinity:
                                      description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the anti-affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling anti-affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity term, associated with the corresponding weight.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              weight:
                                                description: |-
                                                  weight associated with matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - podAffinityTerm
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the anti-affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the anti-affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to a pod label update), the
                                            system may or may not try to eventually evict the pod from its node.
                                            When there are multiple elements, the lists of nodes corresponding to each
                                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                          items:
                                            description: |-
                                              Defines a set of pods (namely those matching the labelSelector
                                              relative to the given namespace(s)) that this pod should be
                                              co-located (affinity) or not co-located (anti-affinity) with,
                                              where co-located is defined as running on a node whose value of
                                              the label with key <topologyKey> matches that of any node on which
                                              a pod of the set of pods is running
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                  type: object
                                automountServiceAccountToken:
                                  description: AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
                                  type: boolean
                                containers:
                                  description: |-
                                    List of containers belonging to the pod.
                                    Containers cannot currently be added or removed.
                                    There must be at least one container in a Pod.
                                    Cannot be updated.
                                  items:
                                    description: A single application container that you want to run within a pod.
                                    properties:
                                      args:
                                        description: |-
                                          Arguments to the entrypoint.
                                          The container image's CMD is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      command:
                                        description: |-
                                          Entrypoint array. Not executed within a shell.
                                          The container image's ENTRYPOINT is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      env:
                                        description: |-
                                          List of environment variables to set in the container.
                                          Cannot be updated.
                                        items:
                                          description: EnvVar represents an environment variable present in a Container.
                                          properties:
                                            name:
                                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            value:
                                              description: |-
                                                Variable references $(VAR_NAME) are expanded
                                                using the previously defined environment variables in the container and
                                                any service environment variables. If a variable cannot be resolved,
                                                the reference in the input string will be unchanged. Double $$ are reduced
                                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                                Escaped references will never be expanded, regardless of whether the variable
                                                exists or not.
                                                Defaults to "".
                                              type: string
                                            valueFrom:
                                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                                              properties:
                                                configMapKeyRef:
                                                  description: Selects a key of a ConfigMap.
                                                  properties:
                                                    key:
                                                      description: The key to select.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the ConfigMap or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                fieldRef:
                                                  description: |-
                                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                secretKeyRef:
                                                  description: Selects a key of a secret in the pod's namespace
                                                  properties:
                                                    key:
                                                      description: The key of the secret to select from.  Must be a valid secret key.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the Secret or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              type: object
                                          required:
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      envFrom:
                                        description: |-
                                          List of sources to populate environment variables in the container.
                                          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                          will be reported as an event when the container is starting. When a key exists in multiple
                                          sources, the value associated with the last source will take precedence.
                                          Values defined by an Env with a duplicate key will take precedence.
                                          Cannot be updated.
                                        items:
                                          description: EnvFromSource represents the source of a set of ConfigMaps or Secrets
                                          properties:
                                            configMapRef:
                                              description: The ConfigMap to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the ConfigMap must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            prefix:
                                              description: Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            secretRef:
                                              description: The Secret to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      image:
                                        description: |-
                                          Container image name.
                                          More info: https://kubernetes.io/docs/concepts/containers/images
                                          This field is optional to allow higher level config management to default or override
                                          container images in workload controllers like Deployments and StatefulSets.
                                        type: string
                                      imagePullPolicy:
                                        description: |-
                                          Image pull policy.
                                          One of Always, Never, IfNotPresent.
                                          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                        type: string
                                      lifecycle:
                                        description: |-
                                          Actions that the management system should take in response to container lifecycle events.
                                          Cannot be updated.
                                        properties:
                                          postStart:
                                            description: |-
                                              PostStart is called immediately after a container is created. If the handler fails,
                                              the container is terminated and restarted according to its restart policy.
                                              Other management of the container blocks until the hook completes.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          preStop:
                                            description: |-
                                              PreStop is called immediately before a container is terminated due to an
                                              API request or management event such as liveness/startup probe failure,
                                              preemption, resource contention, etc. The handler is not called if the
                                              container crashes or exits. The Pod's termination grace period countdown begins before the
                                              PreStop hook is executed. Regardless of the outcome of the handler, the
                                              container will eventually terminate within the Pod's termination grace
                                              period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                              or until the termination grace period is reached.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          stopSignal:
                                            description: |-
                                              StopSignal defines which signal will be sent to a container when it is being stopped.
                                              If not specified, the default is defined by the container runtime in use.
                                              StopSignal can only be set for Pods with a non-empty .spec.os.name
                                            type: string
                                        type: object
                                      livenessProbe:
                                        description: |-
                                          Periodic probe of container liveness.
                                          Container will be restarted if the probe fails.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      name:
                                        description: |-
                                          Name of the container specified as a DNS_LABEL.
                                          Each container in a pod must have a unique name (DNS_LABEL).
                                          Cannot be updated.
                                        type: string
                                      ports:
                                        description: |-
                                          List of ports to expose from the container. Not specifying a port here
                                          DOES NOT prevent that port from being exposed. Any port which is
                                          listening on the default "0.0.0.0" address inside a container will be
                                          accessible from the network.
                                          Modifying this array with strategic merge patch may corrupt the data.
                                          For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                          Cannot be updated.
                                        items:
                                          description: ContainerPort represents a network port in a single container.
                                          properties:
                                            containerPort:
                                              description: |-
                                                Number of port to expose on the pod's IP address.
                                                This must be a valid port number, 0 < x < 65536.
                                              format: int32
                                              type: integer
                                            hostIP:
                                              description: What host IP to bind the external port to.
                                              type: string
                                            hostPort:
                                              description: |-
                                                Number of port to expose on the host.
                                                If specified, this must be a valid port number, 0 < x < 65536.
                                                If HostNetwork is specified, this must match ContainerPort.
                                                Most containers do not need this.
                                              format: int32
                                              type: integer
                                            name:
                                              description: |-
                                                If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                                named port in a pod must have a unique name. Name for the port that can be
                                                referred to by services.
                                              type: string
                                            protocol:
                                              default: TCP
                                              description: |-
                                                Protocol for port. Must be UDP, TCP, or SCTP.
                                                Defaults to "TCP".
                                              type: string
                                          required:
                                            - containerPort
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - containerPort
                                          - protocol
                                        x-kubernetes-list-type: map
                                      readinessProbe:
                                        description: |-
                                          Periodic probe of container service readiness.
                                          Container will be removed from service endpoints if the probe fails.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      resizePolicy:
                                        description: Resources resize policy for the container.
                                        items:
                                          description: ContainerResizePolicy represents resource resize policy for the container.
                                          properties:
                                            resourceName:
                                              description: |-
                                                Name of the resource to which this resource resize policy applies.
                                                Supported values: cpu, memory.
                                              type: string
                                            restartPolicy:
                                              description: |-
                                                Restart policy to apply when specified resource is resized.
                                                If not specified, it defaults to NotRequired.
                                              type: string
                                          required:
                                            - resourceName
                                            - restartPolicy
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      resources:
                                        description: |-
                                          Compute Resources required by this container.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                        properties:
                                          claims:
                                            description: |-
                                              Claims lists the names of resources, defined in spec.resourceClaims,
                                              that are used by this container.

                                              This is an alpha field and requires enabling the
                                              DynamicResourceAllocation feature gate.

                                              This field is immutable. It can only be set for containers.
                                            items:
                                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                                    the Pod where this field is used. It makes that resource available
                                                    inside a container.
                                                  type: string
                                                request:
                                                  description: |-
                                                    Request is the name chosen for a request in the referenced claim.
                                                    If empty, everything from the claim is made available, otherwise
                                                    only the result of this request.
                                                  type: string
                                              required:
                                                - name
                                              type: object
                                            type: array
                                            x-kubernetes-list-map-keys:
                                              - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Limits describes the maximum amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Requests describes the minimum amount of compute resources required.
                                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                        type: object
                                      restartPolicy:
                                        description: |-
                                          RestartPolicy defines the restart behavior of individual containers in a pod.
                                          This field may only be set for init containers, and the only allowed value is "Always".
                                          For non-init containers or when this field is not specified,
                                          the restart behavior is defined by the Pod's restart policy and the container type.
                                          Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                          this init container will be continually restarted on
                                          exit until all regular containers have terminated. Once all regular
                                          containers have completed, all init containers with restartPolicy "Always"
                                          will be shut down. This lifecycle differs from normal init containers and
                                          is often referred to as a "sidecar" container. Although this init
                                          container still starts in the init container sequence, it does not wait
                                          for the container to complete before proceeding to the next init
                                          container. Instead, the next init container starts immediately after this
                                          init container is started, or after any startupProbe has successfully
                                          completed.
                                        type: string
                                      securityContext:
                                        description: |-
                                          SecurityContext defines the security options the container should be run with.
                                          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                        properties:
                                          allowPrivilegeEscalation:
                                            description: |-
                                              AllowPrivilegeEscalation controls whether a process can gain more
                                              privileges than its parent process. This bool directly controls if
                                              the no_new_privs flag will be set on the container process.
                                              AllowPrivilegeEscalation is true always when the container is:
                                              1) run as Privileged
                                              2) has CAP_SYS_ADMIN
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          appArmorProfile:
                                            description: |-
                                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                              overrides the pod's appArmorProfile.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile loaded on the node that should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must match the loaded name of the profile.
                                                  Must be set if and only if type is "Localhost".
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of AppArmor profile will be applied.
                                                  Valid options are:
                                                    Localhost - a profile pre-loaded on the node.
                                                    RuntimeDefault - the container runtime's default profile.
                                                    Unconfined - no AppArmor enforcement.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          capabilities:
                                            description: |-
                                              The capabilities to add/drop when running containers.
                                              Defaults to the default set of capabilities granted by the container runtime.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              add:
                                                description: Added capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              drop:
                                                description: Removed capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          privileged:
                                            description: |-
                                              Run container in privileged mode.
                                              Processes in privileged containers are essentially equivalent to root on the host.
                                              Defaults to false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          procMount:
                                            description: |-
                                              procMount denotes the type of proc mount to use for the containers.
                                              The default value is Default which uses the container runtime defaults for
                                              readonly paths and masked paths.
                                              This requires the ProcMountType feature flag to be enabled.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: string
                                          readOnlyRootFilesystem:
                                            description: |-
                                              Whether this container has a read-only root filesystem.
                                              Default is false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          runAsGroup:
                                            description: |-
                                              The GID to run the entrypoint of the container process.
                                              Uses runtime default if unset.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          runAsNonRoot:
                                            description: |-
                                              Indicates that the container must run as a non-root user.
                                              If true, the Kubelet will validate the image at runtime to ensure that it
                                              does not run as UID 0 (root) and fail to start the container if it does.
                                              If unset or false, no such validation will be performed.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            type: boolean
                                          runAsUser:
                                            description: |-
                                              The UID to run the entrypoint of the container process.
                                              Defaults to user specified in image metadata if unspecified.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          seLinuxOptions:
                                            description: |-
                                              The SELinux context to be applied to the container.
                                              If unspecified, the container runtime will allocate a random SELinux context for each
                                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              level:
                                                description: Level is SELinux level label that applies to the container.
                                                type: string
                                              role:
                                                description: Role is a SELinux role label that applies to the container.
                                                type: string
                                              type:
                                                description: Type is a SELinux type label that applies to the container.
                                                type: string
                                              user:
                                                description: User is a SELinux user label that applies to the container.
                                                type: string
                                            type: object
                                          seccompProfile:
                                            description: |-
                                              The seccomp options to use by this container. If seccomp options are
                                              provided at both the pod & container level, the container options
                                              override the pod options.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of seccomp profile will be applied.
                                                  Valid options are:

                                                  Localhost - a profile defined in a file on the node should be used.
                                                  RuntimeDefault - the container runtime default profile should be used.
                                                  Unconfined - no profile should be applied.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          windowsOptions:
                                            description: |-
                                              The Windows specific settings applied to all containers.
                                              If unspecified, the options from the PodSecurityContext will be used.
                                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is linux.
                                            properties:
                                              gmsaCredentialSpec:
                                                description: |-
                                                  GMSACredentialSpec is where the GMSA admission webhook
                                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                                type: string
                                              gmsaCredentialSpecName:
                                                description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                                type: string
                                              hostProcess:
                                                description: |-
                                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                                  All of a Pod's containers must have the same effective HostProcess value
                                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                                type: boolean
                                              runAsUserName:
                                                description: |-
                                                  The UserName in Windows to run the entrypoint of the container process.
                                                  Defaults to the user specified in image metadata if unspecified.
                                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: string
                                            type: object
                                        type: object
                                      startupProbe:
                                        description: |-
                                          StartupProbe indicates that the Pod has successfully initialized.
                                          If specified, no other probes are executed until this completes successfully.
                                          If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                          This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                          when it might take a long time to load data or warm a cache, than during steady-state operation.
                                          This cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      stdin:
                                        description: |-
                                          Whether this container should allocate a buffer for stdin in the container runtime. If this
                                          is not set, reads from stdin in the container will always result in EOF.
                                          Default is false.
                                        type: boolean
                                      stdinOnce:
                                        description: |-
                                          Whether the container runtime should close the stdin channel after it has been opened by
                                          a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                          at which time stdin is closed and remains closed until the container is restarted. If this
                                          flag is false, a container processes that reads from stdin will never receive an EOF.
                                          Default is false
                                        type: boolean
                                      terminationMessagePath:
                                        description: |-
                                          Optional: Path at which the file to which the container's termination message
                                          will be written is mounted into the container's filesystem.
                                          Message written is intended to be brief final status, such as an assertion failure message.
                                          Will be truncated by the node if greater than 4096 bytes. The total message length across
                                          all containers will be limited to 12kb.
                                          Defaults to /dev/termination-log.
                                          Cannot be updated.
                                        type: string
                                      terminationMessagePolicy:
                                        description: |-
                                          Indicate how the termination message should be populated. File will use the contents of
                                          terminationMessagePath to populate the container status message on both success and failure.
                                          FallbackToLogsOnError will use the last chunk of container log output if the termination
                                          message file is empty and the container exited with an error.
                                          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                          Defaults to File.
                                          Cannot be updated.
                                        type: string
                                      tty:
                                        description: |-
                                          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                          Default is false.
                                        type: boolean
                                      volumeDevices:
                                        description: volumeDevices is the list of block devices to be used by the container.
                                        items:
                                          description: volumeDevice describes a mapping of a raw block device within a container.
                                          properties:
                                            devicePath:
                                              description: devicePath is the path inside of the container that the device will be mapped to.
                                              type: string
                                            name:
                                              description: name must match the name of a persistentVolumeClaim in the pod
                                              type: string
                                          required:
                                            - devicePath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - devicePath
                                        x-kubernetes-list-type: map
                                      volumeMounts:
                                        description: |-
                                          Pod volumes to mount into the container's filesystem.
                                          Cannot be updated.
                                        items:
                                          description: VolumeMount describes a mounting of a Volume within a container.
                                          properties:
                                            mountPath:
                                              description: |-
                                                Path within the container at which the volume should be mounted.  Must
                                                not contain ':'.
                                              type: string
                                            mountPropagation:
                                              description: |-
                                                mountPropagation determines how mounts are propagated from the host
                                                to container and the other way around.
                                                When not set, MountPropagationNone is used.
                                                This field is beta in 1.10.
                                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                                (which defaults to None).
                                              type: string
                                            name:
                                              description: This must match the Name of a Volume.
                                              type: string
                                            readOnly:
                                              description: |-
                                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                                Defaults to false.
                                              type: boolean
                                            recursiveReadOnly:
                                              description: |-
                                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                                recursively.

                                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                                recursively read-only, if it is supported by the container runtime.  If this
                                                field is set to Enabled, the mount is made recursively read-only if it is
                                                supported by the container runtime, otherwise the pod will not be started and
                                                an error will be generated to indicate the reason.

                                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                                None (or be unspecified, which defaults to None).

                                                If this field is not specified, it is treated as an equivalent of Disabled.
                                              type: string
                                            subPath:
                                              description: |-
                                                Path within the volume from which the container's volume should be mounted.
                                                Defaults to "" (volume's root).
                                              type: string
                                            subPathExpr:
                                              description: |-
                                                Expanded path within the volume from which the container's volume should be mounted.
                                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                                Defaults to "" (volume's root).
                                                SubPathExpr and SubPath are mutually exclusive.
                                              type: string
                                          required:
                                            - mountPath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - mountPath
                                        x-kubernetes-list-type: map
                                      workingDir:
                                        description: |-
                                          Container's working directory.
                                          If not specified, the container runtime's default will be used, which
                                          might be configured in the container image.
                                          Cannot be updated.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                dnsConfig:
                                  description: |-
                                    Specifies the DNS parameters of a pod.
                                    Parameters specified here will be merged to the generated DNS
                                    configuration based on DNSPolicy.
                                  properties:
                                    nameservers:
                                      description: |-
                                        A list of DNS name server IP addresses.
                                        This will be appended to the base nameservers generated from DNSPolicy.
                                        Duplicated nameservers will be removed.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    options:
                                      description: |-
                                        A list of DNS resolver options.
                                        This will be merged with the base options generated from DNSPolicy.
                                        Duplicated entries will be removed. Resolution options given in Options
                                        will override those that appear in the base DNSPolicy.
                                      items:
                                        description: PodDNSConfigOption defines DNS resolver options of a pod.
                                        properties:
                                          name:
                                            description: |-
                                              Name is this DNS resolver option's name.
                                              Required.
                                            type: string
                                          value:
                                            description: Value is this DNS resolver option's value.
                                            type: string
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    searches:
                                      description: |-
                                        A list of DNS search domains for host-name lookup.
                                        This will be appended to the base search paths generated from DNSPolicy.
                                        Duplicated search paths will be removed.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                dnsPolicy:
                                  description: |-
                                    Set DNS policy for the pod.
                                    Defaults to "ClusterFirst".
                                    Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                    DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                    To have DNS options set along with hostNetwork, you have to specify DNS policy
                                    explicitly to 'ClusterFirstWithHostNet'.
                                  type: string
                                enableServiceLinks:
                                  description: |-
                                    EnableServiceLinks indicates whether information about services should be injected into pod's
                                    environment variables, matching the syntax of Docker links.
                                    Optional: Defaults to true.
                                  type: boolean
                                ephemeralContainers:
                                  description: |-
                                    List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
                                    pod to perform user-initiated actions such as debugging. This list cannot be specified when
                                    creating a pod, and it cannot be modified by updating the pod spec. In order to add an
                                    ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
                                  items:
                                    description: |-
                                      An EphemeralContainer is a temporary container that you may add to an existing Pod for
                                      user-initiated activities such as debugging. Ephemeral containers have no resource or
                                      scheduling guarantees, and they will not be restarted when they exit or when a Pod is
                                      removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
                                      Pod to exceed its resource allocation.

                                      To add an ephemeral container, use the ephemeralcontainers subresource of an existing
                                      Pod. Ephemeral containers may not be removed or restarted.
                                    properties:
                                      args:
                                        description: |-
                                          Arguments to the entrypoint.
                                          The image's CMD is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      command:
                                        description: |-
                                          Entrypoint array. Not executed within a shell.
                                          The image's ENTRYPOINT is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      env:
                                        description: |-
                                          List of environment variables to set in the container.
                                          Cannot be updated.
                                        items:
                                          description: EnvVar represents an environment variable present in a Container.
                                          properties:
                                            name:
                                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            value:
                                              description: |-
                                                Variable references $(VAR_NAME) are expanded
                                                using the previously defined environment variables in the container and
                                                any service environment variables. If a variable cannot be resolved,
                                                the reference in the input string will be unchanged. Double $$ are reduced
                                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                                Escaped references will never be expanded, regardless of whether the variable
                                                exists or not.
                                                Defaults to "".
                                              type: string
                                            valueFrom:
                                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                                              properties:
                                                configMapKeyRef:
                                                  description: Selects a key of a ConfigMap.
                                                  properties:
                                                    key:
                                                      description: The key to select.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the ConfigMap or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                fieldRef:
                                                  description: |-
                                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                secretKeyRef:
                                                  description: Selects a key of a secret in the pod's namespace
                                                  properties:
                                                    key:
                                                      description: The key of the secret to select from.  Must be a valid secret key.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the Secret or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              type: object
                                          required:
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      envFrom:
                                        description: |-
                                          List of sources to populate environment variables in the container.
                                          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                          will be reported as an event when the container is starting. When a key exists in multiple
                                          sources, the value associated with the last source will take precedence.
                                          Values defined by an Env with a duplicate key will take precedence.
                                          Cannot be updated.
                                        items:
                                          description: EnvFromSource represents the source of a set of ConfigMaps or Secrets
                                          properties:
                                            configMapRef:
                                              description: The ConfigMap to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the ConfigMap must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            prefix:
                                              description: Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            secretRef:
                                              description: The Secret to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      image:
                                        description: |-
                                          Container image name.
                                          More info: https://kubernetes.io/docs/concepts/containers/images
                                        type: string
                                      imagePullPolicy:
                                        description: |-
                                          Image pull policy.
                                          One of Always, Never, IfNotPresent.
                                          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                        type: string
                                      lifecycle:
                                        description: Lifecycle is not allowed for ephemeral containers.
                                        properties:
                                          postStart:
                                            description: |-
                                              PostStart is called immediately after a container is created. If the handler fails,
                                              the container is terminated and restarted according to its restart policy.
                                              Other management of the container blocks until the hook completes.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          preStop:
                                            description: |-
                                              PreStop is called immediately before a container is terminated due to an
                                              API request or management event such as liveness/startup probe failure,
                                              preemption, resource contention, etc. The handler is not called if the
                                              container crashes or exits. The Pod's termination grace period countdown begins before the
                                              PreStop hook is executed. Regardless of the outcome of the handler, the
                                              container will eventually terminate within the Pod's termination grace
                                              period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                              or until the termination grace period is reached.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          stopSignal:
                                            description: |-
                                              StopSignal defines which signal will be sent to a container when it is being stopped.
                                              If not specified, the default is defined by the container runtime in use.
                                              StopSignal can only be set for Pods with a non-empty .spec.os.name
                                            type: string
                                        type: object
                                      livenessProbe:
                                        description: Probes are not allowed for ephemeral containers.
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      name:
                                        description: |-
                                          Name of the ephemeral container specified as a DNS_LABEL.
                                          This name must be unique among all containers, init containers and ephemeral containers.
                                        type: string
                                      ports:
                                        description: Ports are not allowed for ephemeral containers.
                                        items:
                                          description: ContainerPort represents a network port in a single container.
                                          properties:
                                            containerPort:
                                              description: |-
                                                Number of port to expose on the pod's IP address.
                                                This must be a valid port number, 0 < x < 65536.
                                              format: int32
                                              type: integer
                                            hostIP:
                                              description: What host IP to bind the external port to.
                                              type: string
                                            hostPort:
                                              description: |-
                                                Number of port to expose on the host.
                                                If specified, this must be a valid port number, 0 < x < 65536.
                                                If HostNetwork is specified, this must match ContainerPort.
                                                Most containers do not need this.
                                              format: int32
                                              type: integer
                                            name:
                                              description: |-
                                                If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                                named port in a pod must have a unique name. Name for the port that can be
                                                referred to by services.
                                              type: string
                                            protocol:
                                              default: TCP
                                              description: |-
                                                Protocol for port. Must be UDP, TCP, or SCTP.
                                                Defaults to "TCP".
                                              type: string
                                          required:
                                            - containerPort
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - containerPort
                                          - protocol
                                        x-kubernetes-list-type: map
                                      readinessProbe:
                                        description: Probes are not allowed for ephemeral containers.
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      resizePolicy:
                                        description: Resources resize policy for the container.
                                        items:
                                          description: ContainerResizePolicy represents resource resize policy for the container.
                                          properties:
                                            resourceName:
                                              description: |-
                                                Name of the resource to which this resource resize policy applies.
                                                Supported values: cpu, memory.
                                              type: string
                                            restartPolicy:
                                              description: |-
                                                Restart policy to apply when specified resource is resized.
                                                If not specified, it defaults to NotRequired.
                                              type: string
                                          required:
                                            - resourceName
                                            - restartPolicy
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      resources:
                                        description: |-
                                          Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources
                                          already allocated to the pod.
                                        properties:
                                          claims:
                                            description: |-
                                              Claims lists the names of resources, defined in spec.resourceClaims,
                                              that are used by this container.

                                              This is an alpha field and requires enabling the
                                              DynamicResourceAllocation feature gate.

                                              This field is immutable. It can only be set for containers.
                                            items:
                                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                                    the Pod where this field is used. It makes that resource available
                                                    inside a container.
                                                  type: string
                                                request:
                                                  description: |-
                                                    Request is the name chosen for a request in the referenced claim.
                                                    If empty, everything from the claim is made available, otherwise
                                                    only the result of this request.
                                                  type: string
                                              required:
                                                - name
                                              type: object
                                            type: array
                                            x-kubernetes-list-map-keys:
                                              - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Limits describes the maximum amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Requests describes the minimum amount of compute resources required.
                                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                        type: object
                                      restartPolicy:
                                        description: |-
                                          Restart policy for the container to manage the restart behavior of each
                                          container within a pod.
                                          This may only be set for init containers. You cannot set this field on
                                          ephemeral containers.
                                        type: string
                                      securityContext:
                                        description: |-
                                          Optional: SecurityContext defines the security options the ephemeral container should be run with.
                                          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                        properties:
                                          allowPrivilegeEscalation:
                                            description: |-
                                              AllowPrivilegeEscalation controls whether a process can gain more
                                              privileges than its parent process. This bool directly controls if
                                              the no_new_privs flag will be set on the container process.
                                              AllowPrivilegeEscalation is true always when the container is:
                                              1) run as Privileged
                                              2) has CAP_SYS_ADMIN
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          appArmorProfile:
                                            description: |-
                                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                              overrides the pod's appArmorProfile.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile loaded on the node that should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must match the loaded name of the profile.
                                                  Must be set if and only if type is "Localhost".
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of AppArmor profile will be applied.
                                                  Valid options are:
                                                    Localhost - a profile pre-loaded on the node.
                                                    RuntimeDefault - the container runtime's default profile.
                                                    Unconfined - no AppArmor enforcement.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          capabilities:
                                            description: |-
                                              The capabilities to add/drop when running containers.
                                              Defaults to the default set of capabilities granted by the container runtime.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              add:
                                                description: Added capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              drop:
                                                description: Removed capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          privileged:
                                            description: |-
                                              Run container in privileged mode.
                                              Processes in privileged containers are essentially equivalent to root on the host.
                                              Defaults to false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          procMount:
                                            description: |-
                                              procMount denotes the type of proc mount to use for the containers.
                                              The default value is Default which uses the container runtime defaults for
                                              readonly paths and masked paths.
                                              This requires the ProcMountType feature flag to be enabled.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: string
                                          readOnlyRootFilesystem:
                                            description: |-
                                              Whether this container has a read-only root filesystem.
                                              Default is false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          runAsGroup:
                                            description: |-
                                              The GID to run the entrypoint of the container process.
                                              Uses runtime default if unset.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          runAsNonRoot:
                                            description: |-
                                              Indicates that the container must run as a non-root user.
                                              If true, the Kubelet will validate the image at runtime to ensure that it
                                              does not run as UID 0 (root) and fail to start the container if it does.
                                              If unset or false, no such validation will be performed.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            type: boolean
                                          runAsUser:
                                            description: |-
                                              The UID to run the entrypoint of the container process.
                                              Defaults to user specified in image metadata if unspecified.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          seLinuxOptions:
                                            description: |-
                                              The SELinux context to be applied to the container.
                                              If unspecified, the container runtime will allocate a random SELinux context for each
                                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              level:
                                                description: Level is SELinux level label that applies to the container.
                                                type: string
                                              role:
                                                description: Role is a SELinux role label that applies to the container.
                                                type: string
                                              type:
                                                description: Type is a SELinux type label that applies to the container.
                                                type: string
                                              user:
                                                description: User is a SELinux user label that applies to the container.
                                                type: string
                                            type: object
                                          seccompProfile:
                                            description: |-
                                              The seccomp options to use by this container. If seccomp options are
                                              provided at both the pod & container level, the container options
                                              override the pod options.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of seccomp profile will be applied.
                                                  Valid options are:

                                                  Localhost - a profile defined in a file on the node should be used.
                                                  RuntimeDefault - the container runtime default profile should be used.
                                                  Unconfined - no profile should be applied.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          windowsOptions:
                                            description: |-
                                              The Windows specific settings applied to all containers.
                                              If unspecified, the options from the PodSecurityContext will be used.
                                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is linux.
                                            properties:
                                              gmsaCredentialSpec:
                                                description: |-
                                                  GMSACredentialSpec is where the GMSA admission webhook
                                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                                type: string
                                              gmsaCredentialSpecName:
                                                description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                                type: string
                                              hostProcess:
                                                description: |-
                                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                                  All of a Pod's containers must have the same effective HostProcess value
                                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                                type: boolean
                                              runAsUserName:
                                                description: |-
                                                  The UserName in Windows to run the entrypoint of the container process.
                                                  Defaults to the user specified in image metadata if unspecified.
                                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: string
                                            type: object
                                        type: object
                                      startupProbe:
                                        description: Probes are not allowed for ephemeral containers.
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      stdin:
                                        description: |-
                                          Whether this container should allocate a buffer for stdin in the container runtime. If this
                                          is not set, reads from stdin in the container will always result in EOF.
                                          Default is false.
                                        type: boolean
                                      stdinOnce:
                                        description: |-
                                          Whether the container runtime should close the stdin channel after it has been opened by
                                          a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                          at which time stdin is closed and remains closed until the container is restarted. If this
                                          flag is false, a container processes that reads from stdin will never receive an EOF.
                                          Default is false
                                        type: boolean
                                      targetContainerName:
                                        description: |-
                                          If set, the name of the container from PodSpec that this ephemeral container targets.
                                          The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                                          If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                                          The container runtime must implement support for this feature. If the runtime does not
                                          support namespace targeting then the result of setting this field is undefined.
                                        type: string
                                      terminationMessagePath:
                                        description: |-
                                          Optional: Path at which the file to which the container's termination message
                                          will be written is mounted into the container's filesystem.
                                          Message written is intended to be brief final status, such as an assertion failure message.
                                          Will be truncated by the node if greater than 4096 bytes. The total message length across
                                          all containers will be limited to 12kb.
                                          Defaults to /dev/termination-log.
                                          Cannot be updated.
                                        type: string
                                      terminationMessagePolicy:
                                        description: |-
                                          Indicate how the termination message should be populated. File will use the contents of
                                          terminationMessagePath to populate the container status message on both success and failure.
                                          FallbackToLogsOnError will use the last chunk of container log output if the termination
                                          message file is empty and the container exited with an error.
                                          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                          Defaults to File.
                                          Cannot be updated.
                                        type: string
                                      tty:
                                        description: |-
                                          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                          Default is false.
                                        type: boolean
                                      volumeDevices:
                                        description: volumeDevices is the list of block devices to be used by the container.
                                        items:
                                          description: volumeDevice describes a mapping of a raw block device within a container.
                                          properties:
                                            devicePath:
                                              description: devicePath is the path inside of the container that the device will be mapped to.
                                              type: string
                                            name:
                                              description: name must match the name of a persistentVolumeClaim in the pod
                                              type: string
                                          required:
                                            - devicePath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - devicePath
                                        x-kubernetes-list-type: map
                                      volumeMounts:
                                        description: |-
                                          Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                                          Cannot be updated.
                                        items:
                                          description: VolumeMount describes a mounting of a Volume within a container.
                                          properties:
                                            mountPath:
                                              description: |-
                                                Path within the container at which the volume should be mounted.  Must
                                                not contain ':'.
                                              type: string
                                            mountPropagation:
                                              description: |-
                                                mountPropagation determines how mounts are propagated from the host
                                                to container and the other way around.
                                                When not set, MountPropagationNone is used.
                                                This field is beta in 1.10.
                                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                                (which defaults to None).
                                              type: string
                                            name:
                                              description: This must match the Name of a Volume.
                                              type: string
                                            readOnly:
                                              description: |-
                                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                                Defaults to false.
                                              type: boolean
                                            recursiveReadOnly:
                                              description: |-
                                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                                recursively.

                                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                                recursively read-only, if it is supported by the container runtime.  If this
                                                field is set to Enabled, the mount is made recursively read-only if it is
                                                supported by the container runtime, otherwise the pod will not be started and
                                                an error will be generated to indicate the reason.

                                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                                None (or be unspecified, which defaults to None).

                                                If this field is not specified, it is treated as an equivalent of Disabled.
                                              type: string
                                            subPath:
                                              description: |-
                                                Path within the volume from which the container's volume should be mounted.
                                                Defaults to "" (volume's root).
                                              type: string
                                            subPathExpr:
                                              description: |-
                                                Expanded path within the volume from which the container's volume should be mounted.
                                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                                Defaults to "" (volume's root).
                                                SubPathExpr and SubPath are mutually exclusive.
                                              type: string
                                          required:
                                            - mountPath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - mountPath
                                        x-kubernetes-list-type: map
                                      workingDir:
                                        description: |-
                                          Container's working directory.
                                          If not specified, the container runtime's default will be used, which
                                          might be configured in the container image.
                                          Cannot be updated.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                hostAliases:
                                  description: |-
                                    HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
                                    file if specified.
                                  items:
                                    description: |-
                                      HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                                      pod's hosts file.
                                    properties:
                                      hostnames:
                                        description: Hostnames for the above IP address.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      ip:
                                        description: IP address of the host file entry.
                                        type: string
                                    required:
                                      - ip
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - ip
                                  x-kubernetes-list-type: map
                                hostIPC:
                                  description: |-
                                    Use the host's ipc namespace.
                                    Optional: Default to false.
                                  type: boolean
                                hostNetwork:
                                  description: |-
                                    Host networking requested for this pod. Use the host's network namespace.
                                    If this option is set, the ports that will be used must be specified.
                                    Default to false.
                                  type: boolean
                                hostPID:
                                  description: |-
                                    Use the host's pid namespace.
                                    Optional: Default to false.
                                  type: boolean
                                hostUsers:
                                  description: |-
                                    Use the host's user namespace.
                                    Optional: Default to true.
                                    If set to true or not present, the pod will be run in the host user namespace, useful
                                    for when the pod needs a feature only available to the host user namespace, such as
                                    loading a kernel module with CAP_SYS_MODULE.
                                    When set to false, a new userns is created for the pod. Setting false is useful for
                                    mitigating container breakout vulnerabilities even allowing users to run their
                                    containers as root without actually having root privileges on the host.
                                    This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
                                  type: boolean
                                hostname:
                                  description: |-
                                    Specifies the hostname of the Pod
                                    If not specified, the pod's hostname will be set to a system-defined value.
                                  type: string
                                imagePullSecrets:
                                  description: |-
                                    ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
                                    If specified, these secrets will be passed to individual puller implementations for them to use.
                                    More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
                                  items:
                                    description: |-
                                      LocalObjectReference contains enough information to let you locate the
                                      referenced object inside the same namespace.
                                    properties:
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                initContainers:
                                  description: |-
                                    List of initialization containers belonging to the pod.
                                    Init containers are executed in order prior to containers being started. If any
                                    init container fails, the pod is considered to have failed and is handled according
                                    to its restartPolicy. The name for an init container or normal container must be
                                    unique among all containers.
                                    Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
                                    The resourceRequirements of an init container are taken into account during scheduling
                                    by finding the highest request/limit for each resource type, and then using the max of
                                    that value or the sum of the normal containers. Limits are applied to init containers
                                    in a similar fashion.
                                    Init containers cannot currently be added or removed.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                                  items:
                                    description: A single application container that you want to run within a pod.
                                    properties:
                                      args:
                                        description: |-
                                          Arguments to the entrypoint.
                                          The container image's CMD is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      command:
                                        description: |-
                                          Entrypoint array. Not executed within a shell.
                                          The container image's ENTRYPOINT is used if this is not provided.
                                          Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                                          cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                          produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                                          of whether the variable exists or not. Cannot be updated.
                                          More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      env:
                                        description: |-
                                          List of environment variables to set in the container.
                                          Cannot be updated.
                                        items:
                                          description: EnvVar represents an environment variable present in a Container.
                                          properties:
                                            name:
                                              description: Name of the environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            value:
                                              description: |-
                                                Variable references $(VAR_NAME) are expanded
                                                using the previously defined environment variables in the container and
                                                any service environment variables. If a variable cannot be resolved,
                                                the reference in the input string will be unchanged. Double $$ are reduced
                                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                                Escaped references will never be expanded, regardless of whether the variable
                                                exists or not.
                                                Defaults to "".
                                              type: string
                                            valueFrom:
                                              description: Source for the environment variable's value. Cannot be used if value is not empty.
                                              properties:
                                                configMapKeyRef:
                                                  description: Selects a key of a ConfigMap.
                                                  properties:
                                                    key:
                                                      description: The key to select.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the ConfigMap or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                fieldRef:
                                                  description: |-
                                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                secretKeyRef:
                                                  description: Selects a key of a secret in the pod's namespace
                                                  properties:
                                                    key:
                                                      description: The key of the secret to select from.  Must be a valid secret key.
                                                      type: string
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: Specify whether the Secret or its key must be defined
                                                      type: boolean
                                                  required:
                                                    - key
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              type: object
                                          required:
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      envFrom:
                                        description: |-
                                          List of sources to populate environment variables in the container.
                                          The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                                          will be reported as an event when the container is starting. When a key exists in multiple
                                          sources, the value associated with the last source will take precedence.
                                          Values defined by an Env with a duplicate key will take precedence.
                                          Cannot be updated.
                                        items:
                                          description: EnvFromSource represents the source of a set of ConfigMaps or Secrets
                                          properties:
                                            configMapRef:
                                              description: The ConfigMap to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the ConfigMap must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            prefix:
                                              description: Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
                                              type: string
                                            secretRef:
                                              description: The Secret to select from
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                                optional:
                                                  description: Specify whether the Secret must be defined
                                                  type: boolean
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      image:
                                        description: |-
                                          Container image name.
                                          More info: https://kubernetes.io/docs/concepts/containers/images
                                          This field is optional to allow higher level config management to default or override
                                          container images in workload controllers like Deployments and StatefulSets.
                                        type: string
                                      imagePullPolicy:
                                        description: |-
                                          Image pull policy.
                                          One of Always, Never, IfNotPresent.
                                          Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                        type: string
                                      lifecycle:
                                        description: |-
                                          Actions that the management system should take in response to container lifecycle events.
                                          Cannot be updated.
                                        properties:
                                          postStart:
                                            description: |-
                                              PostStart is called immediately after a container is created. If the handler fails,
                                              the container is terminated and restarted according to its restart policy.
                                              Other management of the container blocks until the hook completes.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          preStop:
                                            description: |-
                                              PreStop is called immediately before a container is terminated due to an
                                              API request or management event such as liveness/startup probe failure,
                                              preemption, resource contention, etc. The handler is not called if the
                                              container crashes or exits. The Pod's termination grace period countdown begins before the
                                              PreStop hook is executed. Regardless of the outcome of the handler, the
                                              container will eventually terminate within the Pod's termination grace
                                              period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                              or until the termination grace period is reached.
                                              More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                                            properties:
                                              exec:
                                                description: Exec specifies a command to execute in the container.
                                                properties:
                                                  command:
                                                    description: |-
                                                      Command is the command line to execute inside the container, the working directory for the
                                                      command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                      not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                      a shell, you need to explicitly call out to that shell.
                                                      Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              httpGet:
                                                description: HTTPGet specifies an HTTP GET request to perform.
                                                properties:
                                                  host:
                                                    description: |-
                                                      Host name to connect to, defaults to the pod IP. You probably want to set
                                                      "Host" in httpHeaders instead.
                                                    type: string
                                                  httpHeaders:
                                                    description: Custom headers to set in the request. HTTP allows repeated headers.
                                                    items:
                                                      description: HTTPHeader describes a custom header to be used in HTTP probes
                                                      properties:
                                                        name:
                                                          description: |-
                                                            The header field name.
                                                            This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                          type: string
                                                        value:
                                                          description: The header field value
                                                          type: string
                                                      required:
                                                        - name
                                                        - value
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  path:
                                                    description: Path to access on the HTTP server.
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Name or number of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                  scheme:
                                                    description: |-
                                                      Scheme to use for connecting to the host.
                                                      Defaults to HTTP.
                                                    type: string
                                                required:
                                                  - port
                                                type: object
                                              sleep:
                                                description: Sleep represents a duration that the container should sleep.
                                                properties:
                                                  seconds:
                                                    description: Seconds is the number of seconds to sleep.
                                                    format: int64
                                                    type: integer
                                                required:
                                                  - seconds
                                                type: object
                                              tcpSocket:
                                                description: |-
                                                  Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                                  for backward compatibility. There is no validation of this field and
                                                  lifecycle hooks will fail at runtime when it is specified.
                                                properties:
                                                  host:
                                                    description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                    type: string
                                                  port:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: |-
                                                      Number or name of the port to access on the container.
                                                      Number must be in the range 1 to 65535.
                                                      Name must be an IANA_SVC_NAME.
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - port
                                                type: object
                                            type: object
                                          stopSignal:
                                            description: |-
                                              StopSignal defines which signal will be sent to a container when it is being stopped.
                                              If not specified, the default is defined by the container runtime in use.
                                              StopSignal can only be set for Pods with a non-empty .spec.os.name
                                            type: string
                                        type: object
                                      livenessProbe:
                                        description: |-
                                          Periodic probe of container liveness.
                                          Container will be restarted if the probe fails.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      name:
                                        description: |-
                                          Name of the container specified as a DNS_LABEL.
                                          Each container in a pod must have a unique name (DNS_LABEL).
                                          Cannot be updated.
                                        type: string
                                      ports:
                                        description: |-
                                          List of ports to expose from the container. Not specifying a port here
                                          DOES NOT prevent that port from being exposed. Any port which is
                                          listening on the default "0.0.0.0" address inside a container will be
                                          accessible from the network.
                                          Modifying this array with strategic merge patch may corrupt the data.
                                          For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                          Cannot be updated.
                                        items:
                                          description: ContainerPort represents a network port in a single container.
                                          properties:
                                            containerPort:
                                              description: |-
                                                Number of port to expose on the pod's IP address.
                                                This must be a valid port number, 0 < x < 65536.
                                              format: int32
                                              type: integer
                                            hostIP:
                                              description: What host IP to bind the external port to.
                                              type: string
                                            hostPort:
                                              description: |-
                                                Number of port to expose on the host.
                                                If specified, this must be a valid port number, 0 < x < 65536.
                                                If HostNetwork is specified, this must match ContainerPort.
                                                Most containers do not need this.
                                              format: int32
                                              type: integer
                                            name:
                                              description: |-
                                                If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                                named port in a pod must have a unique name. Name for the port that can be
                                                referred to by services.
                                              type: string
                                            protocol:
                                              default: TCP
                                              description: |-
                                                Protocol for port. Must be UDP, TCP, or SCTP.
                                                Defaults to "TCP".
                                              type: string
                                          required:
                                            - containerPort
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - containerPort
                                          - protocol
                                        x-kubernetes-list-type: map
                                      readinessProbe:
                                        description: |-
                                          Periodic probe of container service readiness.
                                          Container will be removed from service endpoints if the probe fails.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      resizePolicy:
                                        description: Resources resize policy for the container.
                                        items:
                                          description: ContainerResizePolicy represents resource resize policy for the container.
                                          properties:
                                            resourceName:
                                              description: |-
                                                Name of the resource to which this resource resize policy applies.
                                                Supported values: cpu, memory.
                                              type: string
                                            restartPolicy:
                                              description: |-
                                                Restart policy to apply when specified resource is resized.
                                                If not specified, it defaults to NotRequired.
                                              type: string
                                          required:
                                            - resourceName
                                            - restartPolicy
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      resources:
                                        description: |-
                                          Compute Resources required by this container.
                                          Cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                        properties:
                                          claims:
                                            description: |-
                                              Claims lists the names of resources, defined in spec.resourceClaims,
                                              that are used by this container.

                                              This is an alpha field and requires enabling the
                                              DynamicResourceAllocation feature gate.

                                              This field is immutable. It can only be set for containers.
                                            items:
                                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                                    the Pod where this field is used. It makes that resource available
                                                    inside a container.
                                                  type: string
                                                request:
                                                  description: |-
                                                    Request is the name chosen for a request in the referenced claim.
                                                    If empty, everything from the claim is made available, otherwise
                                                    only the result of this request.
                                                  type: string
                                              required:
                                                - name
                                              type: object
                                            type: array
                                            x-kubernetes-list-map-keys:
                                              - name
                                            x-kubernetes-list-type: map
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Limits describes the maximum amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Requests describes the minimum amount of compute resources required.
                                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                        type: object
                                      restartPolicy:
                                        description: |-
                                          RestartPolicy defines the restart behavior of individual containers in a pod.
                                          This field may only be set for init containers, and the only allowed value is "Always".
                                          For non-init containers or when this field is not specified,
                                          the restart behavior is defined by the Pod's restart policy and the container type.
                                          Setting the RestartPolicy as "Always" for the init container will have the following effect:
                                          this init container will be continually restarted on
                                          exit until all regular containers have terminated. Once all regular
                                          containers have completed, all init containers with restartPolicy "Always"
                                          will be shut down. This lifecycle differs from normal init containers and
                                          is often referred to as a "sidecar" container. Although this init
                                          container still starts in the init container sequence, it does not wait
                                          for the container to complete before proceeding to the next init
                                          container. Instead, the next init container starts immediately after this
                                          init container is started, or after any startupProbe has successfully
                                          completed.
                                        type: string
                                      securityContext:
                                        description: |-
                                          SecurityContext defines the security options the container should be run with.
                                          If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                                        properties:
                                          allowPrivilegeEscalation:
                                            description: |-
                                              AllowPrivilegeEscalation controls whether a process can gain more
                                              privileges than its parent process. This bool directly controls if
                                              the no_new_privs flag will be set on the container process.
                                              AllowPrivilegeEscalation is true always when the container is:
                                              1) run as Privileged
                                              2) has CAP_SYS_ADMIN
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          appArmorProfile:
                                            description: |-
                                              appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                              overrides the pod's appArmorProfile.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile loaded on the node that should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must match the loaded name of the profile.
                                                  Must be set if and only if type is "Localhost".
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of AppArmor profile will be applied.
                                                  Valid options are:
                                                    Localhost - a profile pre-loaded on the node.
                                                    RuntimeDefault - the container runtime's default profile.
                                                    Unconfined - no AppArmor enforcement.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          capabilities:
                                            description: |-
                                              The capabilities to add/drop when running containers.
                                              Defaults to the default set of capabilities granted by the container runtime.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              add:
                                                description: Added capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              drop:
                                                description: Removed capabilities
                                                items:
                                                  description: Capability represent POSIX capabilities type
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          privileged:
                                            description: |-
                                              Run container in privileged mode.
                                              Processes in privileged containers are essentially equivalent to root on the host.
                                              Defaults to false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          procMount:
                                            description: |-
                                              procMount denotes the type of proc mount to use for the containers.
                                              The default value is Default which uses the container runtime defaults for
                                              readonly paths and masked paths.
                                              This requires the ProcMountType feature flag to be enabled.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: string
                                          readOnlyRootFilesystem:
                                            description: |-
                                              Whether this container has a read-only root filesystem.
                                              Default is false.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            type: boolean
                                          runAsGroup:
                                            description: |-
                                              The GID to run the entrypoint of the container process.
                                              Uses runtime default if unset.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          runAsNonRoot:
                                            description: |-
                                              Indicates that the container must run as a non-root user.
                                              If true, the Kubelet will validate the image at runtime to ensure that it
                                              does not run as UID 0 (root) and fail to start the container if it does.
                                              If unset or false, no such validation will be performed.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                            type: boolean
                                          runAsUser:
                                            description: |-
                                              The UID to run the entrypoint of the container process.
                                              Defaults to user specified in image metadata if unspecified.
                                              May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            format: int64
                                            type: integer
                                          seLinuxOptions:
                                            description: |-
                                              The SELinux context to be applied to the container.
                                              If unspecified, the container runtime will allocate a random SELinux context for each
                                              container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                              PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              level:
                                                description: Level is SELinux level label that applies to the container.
                                                type: string
                                              role:
                                                description: Role is a SELinux role label that applies to the container.
                                                type: string
                                              type:
                                                description: Type is a SELinux type label that applies to the container.
                                                type: string
                                              user:
                                                description: User is a SELinux user label that applies to the container.
                                                type: string
                                            type: object
                                          seccompProfile:
                                            description: |-
                                              The seccomp options to use by this container. If seccomp options are
                                              provided at both the pod & container level, the container options
                                              override the pod options.
                                              Note that this field cannot be set when spec.os.name is windows.
                                            properties:
                                              localhostProfile:
                                                description: |-
                                                  localhostProfile indicates a profile defined in a file on the node should be used.
                                                  The profile must be preconfigured on the node to work.
                                                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                  Must be set if type is "Localhost". Must NOT be set for any other type.
                                                type: string
                                              type:
                                                description: |-
                                                  type indicates which kind of seccomp profile will be applied.
                                                  Valid options are:

                                                  Localhost - a profile defined in a file on the node should be used.
                                                  RuntimeDefault - the container runtime default profile should be used.
                                                  Unconfined - no profile should be applied.
                                                type: string
                                            required:
                                              - type
                                            type: object
                                          windowsOptions:
                                            description: |-
                                              The Windows specific settings applied to all containers.
                                              If unspecified, the options from the PodSecurityContext will be used.
                                              If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                              Note that this field cannot be set when spec.os.name is linux.
                                            properties:
                                              gmsaCredentialSpec:
                                                description: |-
                                                  GMSACredentialSpec is where the GMSA admission webhook
                                                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                                  GMSA credential spec named by the GMSACredentialSpecName field.
                                                type: string
                                              gmsaCredentialSpecName:
                                                description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                                type: string
                                              hostProcess:
                                                description: |-
                                                  HostProcess determines if a container should be run as a 'Host Process' container.
                                                  All of a Pod's containers must have the same effective HostProcess value
                                                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                                                type: boolean
                                              runAsUserName:
                                                description: |-
                                                  The UserName in Windows to run the entrypoint of the container process.
                                                  Defaults to the user specified in image metadata if unspecified.
                                                  May also be set in PodSecurityContext. If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: string
                                            type: object
                                        type: object
                                      startupProbe:
                                        description: |-
                                          StartupProbe indicates that the Pod has successfully initialized.
                                          If specified, no other probes are executed until this completes successfully.
                                          If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                                          This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                                          when it might take a long time to load data or warm a cache, than during steady-state operation.
                                          This cannot be updated.
                                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                        properties:
                                          exec:
                                            description: Exec specifies a command to execute in the container.
                                            properties:
                                              command:
                                                description: |-
                                                  Command is the command line to execute inside the container, the working directory for the
                                                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                  a shell, you need to explicitly call out to that shell.
                                                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            type: object
                                          failureThreshold:
                                            description: |-
                                              Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                              Defaults to 3. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          grpc:
                                            description: GRPC specifies a GRPC HealthCheckRequest.
                                            properties:
                                              port:
                                                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                                                format: int32
                                                type: integer
                                              service:
                                                default: ""
                                                description: |-
                                                  Service is the name of the service to place in the gRPC HealthCheckRequest
                                                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                                  If this is not specified, the default behavior is defined by gRPC.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          httpGet:
                                            description: HTTPGet specifies an HTTP GET request to perform.
                                            properties:
                                              host:
                                                description: |-
                                                  Host name to connect to, defaults to the pod IP. You probably want to set
                                                  "Host" in httpHeaders instead.
                                                type: string
                                              httpHeaders:
                                                description: Custom headers to set in the request. HTTP allows repeated headers.
                                                items:
                                                  description: HTTPHeader describes a custom header to be used in HTTP probes
                                                  properties:
                                                    name:
                                                      description: |-
                                                        The header field name.
                                                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                      type: string
                                                    value:
                                                      description: The header field value
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              path:
                                                description: Path to access on the HTTP server.
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Name or number of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                              scheme:
                                                description: |-
                                                  Scheme to use for connecting to the host.
                                                  Defaults to HTTP.
                                                type: string
                                            required:
                                              - port
                                            type: object
                                          initialDelaySeconds:
                                            description: |-
                                              Number of seconds after the container has started before liveness probes are initiated.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                          periodSeconds:
                                            description: |-
                                              How often (in seconds) to perform the probe.
                                              Default to 10 seconds. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          successThreshold:
                                            description: |-
                                              Minimum consecutive successes for the probe to be considered successful after having failed.
                                              Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                                            format: int32
                                            type: integer
                                          tcpSocket:
                                            description: TCPSocket specifies a connection to a TCP port.
                                            properties:
                                              host:
                                                description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                type: string
                                              port:
                                                anyOf:
                                                  - type: integer
                                                  - type: string
                                                description: |-
                                                  Number or name of the port to access on the container.
                                                  Number must be in the range 1 to 65535.
                                                  Name must be an IANA_SVC_NAME.
                                                x-kubernetes-int-or-string: true
                                            required:
                                              - port
                                            type: object
                                          terminationGracePeriodSeconds:
                                            description: |-
                                              Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                              The grace period is the duration in seconds after the processes running in the pod are sent
                                              a termination signal and the time when the processes are forcibly halted with a kill signal.
                                              Set this value longer than the expected cleanup time for your process.
                                              If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                              value overrides the value provided by the pod spec.
                                              Value must be non-negative integer. The value zero indicates stop immediately via
                                              the kill signal (no opportunity to shut down).
                                              This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                              Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                                            format: int64
                                            type: integer
                                          timeoutSeconds:
                                            description: |-
                                              Number of seconds after which the probe times out.
                                              Defaults to 1 second. Minimum value is 1.
                                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                            format: int32
                                            type: integer
                                        type: object
                                      stdin:
                                        description: |-
                                          Whether this container should allocate a buffer for stdin in the container runtime. If this
                                          is not set, reads from stdin in the container will always result in EOF.
                                          Default is false.
                                        type: boolean
                                      stdinOnce:
                                        description: |-
                                          Whether the container runtime should close the stdin channel after it has been opened by
                                          a single attach. When stdin is true the stdin stream will remain open across multiple attach
                                          sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                                          first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                                          at which time stdin is closed and remains closed until the container is restarted. If this
                                          flag is false, a container processes that reads from stdin will never receive an EOF.
                                          Default is false
                                        type: boolean
                                      terminationMessagePath:
                                        description: |-
                                          Optional: Path at which the file to which the container's termination message
                                          will be written is mounted into the container's filesystem.
                                          Message written is intended to be brief final status, such as an assertion failure message.
                                          Will be truncated by the node if greater than 4096 bytes. The total message length across
                                          all containers will be limited to 12kb.
                                          Defaults to /dev/termination-log.
                                          Cannot be updated.
                                        type: string
                                      terminationMessagePolicy:
                                        description: |-
                                          Indicate how the termination message should be populated. File will use the contents of
                                          terminationMessagePath to populate the container status message on both success and failure.
                                          FallbackToLogsOnError will use the last chunk of container log output if the termination
                                          message file is empty and the container exited with an error.
                                          The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                                          Defaults to File.
                                          Cannot be updated.
                                        type: string
                                      tty:
                                        description: |-
                                          Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                                          Default is false.
                                        type: boolean
                                      volumeDevices:
                                        description: volumeDevices is the list of block devices to be used by the container.
                                        items:
                                          description: volumeDevice describes a mapping of a raw block device within a container.
                                          properties:
                                            devicePath:
                                              description: devicePath is the path inside of the container that the device will be mapped to.
                                              type: string
                                            name:
                                              description: name must match the name of a persistentVolumeClaim in the pod
                                              type: string
                                          required:
                                            - devicePath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - devicePath
                                        x-kubernetes-list-type: map
                                      volumeMounts:
                                        description: |-
                                          Pod volumes to mount into the container's filesystem.
                                          Cannot be updated.
                                        items:
                                          description: VolumeMount describes a mounting of a Volume within a container.
                                          properties:
                                            mountPath:
                                              description: |-
                                                Path within the container at which the volume should be mounted.  Must
                                                not contain ':'.
                                              type: string
                                            mountPropagation:
                                              description: |-
                                                mountPropagation determines how mounts are propagated from the host
                                                to container and the other way around.
                                                When not set, MountPropagationNone is used.
                                                This field is beta in 1.10.
                                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                                (which defaults to None).
                                              type: string
                                            name:
                                              description: This must match the Name of a Volume.
                                              type: string
                                            readOnly:
                                              description: |-
                                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                                Defaults to false.
                                              type: boolean
                                            recursiveReadOnly:
                                              description: |-
                                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                                recursively.

                                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                                recursively read-only, if it is supported by the container runtime.  If this
                                                field is set to Enabled, the mount is made recursively read-only if it is
                                                supported by the container runtime, otherwise the pod will not be started and
                                                an error will be generated to indicate the reason.

                                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                                None (or be unspecified, which defaults to None).

                                                If this field is not specified, it is treated as an equivalent of Disabled.
                                              type: string
                                            subPath:
                                              description: |-
                                                Path within the volume from which the container's volume should be mounted.
                                                Defaults to "" (volume's root).
                                              type: string
                                            subPathExpr:
                                              description: |-
                                                Expanded path within the volume from which the container's volume should be mounted.
                                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                                Defaults to "" (volume's root).
                                                SubPathExpr and SubPath are mutually exclusive.
                                              type: string
                                          required:
                                            - mountPath
                                            - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - mountPath
                                        x-kubernetes-list-type: map
                                      workingDir:
                                        description: |-
                                          Container's working directory.
                                          If not specified, the container runtime's default will be used, which
                                          might be configured in the container image.
                                          Cannot be updated.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                nodeName:
                                  description: |-
                                    NodeName indicates in which node this pod is scheduled.
                                    If empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.
                                    Once this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.
                                    This field should not be used to express a desire for the pod to be scheduled on a specific node.
                                    https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename
                                  type: string
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    NodeSelector is a selector which must be true for the pod to fit on a node.
                                    Selector which must match a node's labels for the pod to be scheduled on that node.
                                    More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                  type: object
                                  x-kubernetes-map-type: atomic
                                os:
                                  description: |-
                                    Specifies the OS of the containers in the pod.
                                    Some pod and container fields are restricted if this is set.

                                    If the OS field is set to linux, the following fields must be unset:
                                    -securityContext.windowsOptions

                                    If the OS field is set to windows, following fields must be unset:
                                    - spec.hostPID
                                    - spec.hostIPC
                                    - spec.hostUsers
                                    - spec.securityContext.appArmorProfile
                                    - spec.securityContext.seLinuxOptions
                                    - spec.securityContext.seccompProfile
                                    - spec.securityContext.fsGroup
                                    - spec.securityContext.fsGroupChangePolicy
                                    - spec.securityContext.sysctls
                                    - spec.shareProcessNamespace
                                    - spec.securityContext.runAsUser
                                    - spec.securityContext.runAsGroup
                                    - spec.securityContext.supplementalGroups
                                    - spec.securityContext.supplementalGroupsPolicy
                                    - spec.containers[*].securityContext.appArmorProfile
                                    - spec.containers[*].securityContext.seLinuxOptions
                                    - spec.containers[*].securityContext.seccompProfile
                                    - spec.containers[*].securityContext.capabilities
                                    - spec.containers[*].securityContext.readOnlyRootFilesystem
                                    - spec.containers[*].securityContext.privileged
                                    - spec.containers[*].securityContext.allowPrivilegeEscalation
                                    - spec.containers[*].securityContext.procMount
                                    - spec.containers[*].securityContext.runAsUser
                                    - spec.containers[*].securityContext.runAsGroup
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the operating system. The currently supported values are linux and windows.
                                        Additional value may be defined in future and can be one of:
                                        https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                        Clients should expect to handle additional values and treat unrecognized values in this field as os: null
                                      type: string
                                  required:
                                    - name
                                  type: object
                                overhead:
                                  additionalProperties:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
                                    This field will be autopopulated at admission time by the RuntimeClass admission controller. If
                                    the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
                                    The RuntimeClass admission controller will reject Pod create requests which have the overhead already
                                    set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
                                    defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
                                    More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
                                  type: object
                                preemptionPolicy:
                                  description: |-
                                    PreemptionPolicy is the Policy for preempting pods with lower priority.
                                    One of Never, PreemptLowerPriority.
                                    Defaults to PreemptLowerPriority if unset.
                                  type: string
                                priority:
                                  description: |-
                                    The priority value. Various system components use this field to find the
                                    priority of the pod. When Priority Admission Controller is enabled, it
                                    prevents users from setting this field. The admission controller populates
                                    this field from PriorityClassName.
                                    The higher the value, the higher the priority.
                                  format: int32
                                  type: integer
                                priorityClassName:
                                  description: |-
                                    If specified, indicates the pod's priority. "system-node-critical" and
                                    "system-cluster-critical" are two special keywords which indicate the
                                    highest priorities with the former being the highest priority. Any other
                                    name must be defined by creating a PriorityClass object with that name.
                                    If not specified, the pod priority will be default or zero if there is no
                                    default.
                                  type: string
                                readinessGates:
                                  description: |-
                                    If specified, all readiness gates will be evaluated for pod readiness.
                                    A pod is ready when all its containers are ready AND
                                    all conditions specified in the readiness gates have status equal to "True"
                                    More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
                                  items:
                                    description: PodReadinessGate contains the reference to a pod condition
                                    properties:
                                      conditionType:
                                        description: ConditionType refers to a condition in the pod's condition list with matching type.
                                        type: string
                                    required:
                                      - conditionType
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                resourceClaims:
                                  description: |-
                                    ResourceClaims defines which ResourceClaims must be allocated
                                    and reserved before the Pod is allowed to start. The resources
                                    will be made available to those containers which consume them
                                    by name.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable.
                                  items:
                                    description: |-
                                      PodResourceClaim references exactly one ResourceClaim, either directly
                                      or by naming a ResourceClaimTemplate which is then turned into a ResourceClaim
                                      for the pod.

                                      It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
                                      Containers that need access to the ResourceClaim reference it with this name.
                                    properties:
                                      name:
                                        description: |-
                                          Name uniquely identifies this resource claim inside the pod.
                                          This must be a DNS_LABEL.
                                        type: string
                                      resourceClaimName:
                                        description: |-
                                          ResourceClaimName is the name of a ResourceClaim object in the same
                                          namespace as this pod.

                                          Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                          be set.
                                        type: string
                                      resourceClaimTemplateName:
                                        description: |-
                                          ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                                          object in the same namespace as this pod.

                                          The template will be used to create a new ResourceClaim, which will
                                          be bound to this pod. When this pod is deleted, the ResourceClaim
                                          will also be deleted. The pod name and resource name, along with a
                                          generated component, will be used to form a unique name for the
                                          ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                                          This field is immutable and no changes will be made to the
                                          corresponding ResourceClaim by the control plane after creating the
                                          ResourceClaim.

                                          Exactly one of ResourceClaimName and ResourceClaimTemplateName must
                                          be set.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                resources:
                                  description: |-
                                    Resources is the total amount of CPU and Memory resources required by all
                                    containers in the pod. It supports specifying Requests and Limits for
                                    "cpu" and "memory" resource names only. ResourceClaims are not supported.

                                    This field enables fine-grained control over resource allocation for the
                                    entire pod, allowing resource sharing among containers in a pod.

                                    This is an alpha field and requires enabling the PodLevelResources feature
                                    gate.
                                  properties:
                                    claims:
                                      description: |-
                                        Claims lists the names of resources, defined in spec.resourceClaims,
                                        that are used by this container.

                                        This is an alpha field and requires enabling the
                                        DynamicResourceAllocation feature gate.

                                        This field is immutable. It can only be set for containers.
                                      items:
                                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                                        properties:
                                          name:
                                            description: |-
                                              Name must match the name of one entry in pod.spec.resourceClaims of
                                              the Pod where this field is used. It makes that resource available
                                              inside a container.
                                            type: string
                                          request:
                                            description: |-
                                              Request is the name chosen for a request in the referenced claim.
                                              If empty, everything from the claim is made available, otherwise
                                              only the result of this request.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - name
                                      x-kubernetes-list-type: map
                                    limits:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Limits describes the maximum amount of compute resources allowed.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                    requests:
                                      additionalProperties:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      description: |-
                                        Requests describes the minimum amount of compute resources required.
                                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                      type: object
                                  type: object
                                restartPolicy:
                                  description: |-
                                    Restart policy for all containers within the pod.
                                    One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
                                    Default to Always.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
                                  type: string
                                runtimeClassName:
                                  description: |-
                                    RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
                                    to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
                                    If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
                                    empty definition that uses the default runtime handler.
                                    More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
                                  type: string
                                schedulerName:
                                  description: |-
                                    If specified, the pod will be dispatched by specified scheduler.
                                    If not specified, the pod will be dispatched by default scheduler.
                                  type: string
                                schedulingGates:
                                  description: |-
                                    SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
                                    If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
                                    scheduler will not attempt to schedule the pod.

                                    SchedulingGates can only be set at pod creation time, and be removed only afterwards.
                                  items:
                                    description: PodSchedulingGate is associated to a Pod to guard its scheduling.
                                    properties:
                                      name:
                                        description: |-
                                          Name of the scheduling gate.
                                          Each scheduling gate must have a unique name field.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                securityContext:
                                  description: |-
                                    SecurityContext holds pod-level security attributes and common container settings.
                                    Optional: Defaults to empty.  See type description for default values of each field.
                                  properties:
                                    appArmorProfile:
                                      description: |-
                                        appArmorProfile is the AppArmor options to use by the containers in this pod.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile loaded on the node that should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must match the loaded name of the profile.
                                            Must be set if and only if type is "Localhost".
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of AppArmor profile will be applied.
                                            Valid options are:
                                              Localhost - a profile pre-loaded on the node.
                                              RuntimeDefault - the container runtime's default profile.
                                              Unconfined - no AppArmor enforcement.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    fsGroup:
                                      description: |-
                                        A special supplemental group that applies to all containers in a pod.
                                        Some volume types allow the Kubelet to change the ownership of that volume
                                        to be owned by the pod:

                                        1. The owning GID will be the FSGroup
                                        2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                        3. The permission bits are OR'd with rw-rw----

                                        If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    fsGroupChangePolicy:
                                      description: |-
                                        fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                        before being exposed inside Pod. This field will only apply to
                                        volume types which support fsGroup based ownership(and permissions).
                                        It will have no effect on ephemeral volume types such as: secret, configmaps
                                        and emptydir.
                                        Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    runAsGroup:
                                      description: |-
                                        The GID to run the entrypoint of the container process.
                                        Uses runtime default if unset.
                                        May also be set in SecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence
                                        for that container.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    runAsNonRoot:
                                      description: |-
                                        Indicates that the container must run as a non-root user.
                                        If true, the Kubelet will validate the image at runtime to ensure that it
                                        does not run as UID 0 (root) and fail to start the container if it does.
                                        If unset or false, no such validation will be performed.
                                        May also be set in SecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: boolean
                                    runAsUser:
                                      description: |-
                                        The UID to run the entrypoint of the container process.
                                        Defaults to user specified in image metadata if unspecified.
                                        May also be set in SecurityContext.  If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence
                                        for that container.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      format: int64
                                      type: integer
                                    seLinuxChangePolicy:
                                      description: |-
                                        seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.
                                        It has no effect on nodes that do not support SELinux or to volumes does not support SELinux.
                                        Valid values are "MountOption" and "Recursive".

                                        "Recursive" means relabeling of all files on all Pod volumes by the container runtime.
                                        This may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.

                                        "MountOption" mounts all eligible Pod volumes with `-o context` mount option.
                                        This requires all Pods that share the same volume to use the same SELinux label.
                                        It is not possible to share the same volume among privileged and unprivileged Pods.
                                        Eligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes
                                        whose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their
                                        CSIDriver instance. Other volumes are always re-labelled recursively.
                                        "MountOption" value is allowed only when SELinuxMount feature gate is enabled.

                                        If not specified and SELinuxMount feature gate is enabled, "MountOption" is used.
                                        If not specified and SELinuxMount feature gate is disabled, "MountOption" is used for ReadWriteOncePod volumes
                                        and "Recursive" for all other volumes.

                                        This field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.

                                        All Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    seLinuxOptions:
                                      description: |-
                                        The SELinux context to be applied to all containers.
                                        If unspecified, the container runtime will allocate a random SELinux context for each
                                        container.  May also be set in SecurityContext.  If set in
                                        both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                        takes precedence for that container.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        level:
                                          description: Level is SELinux level label that applies to the container.
                                          type: string
                                        role:
                                          description: Role is a SELinux role label that applies to the container.
                                          type: string
                                        type:
                                          description: Type is a SELinux type label that applies to the container.
                                          type: string
                                        user:
                                          description: User is a SELinux user label that applies to the container.
                                          type: string
                                      type: object
                                    seccompProfile:
                                      description: |-
                                        The seccomp options to use by the containers in this pod.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      properties:
                                        localhostProfile:
                                          description: |-
                                            localhostProfile indicates a profile defined in a file on the node should be used.
                                            The profile must be preconfigured on the node to work.
                                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                            Must be set if type is "Localhost". Must NOT be set for any other type.
                                          type: string
                                        type:
                                          description: |-
                                            type indicates which kind of seccomp profile will be applied.
                                            Valid options are:

                                            Localhost - a profile defined in a file on the node should be used.
                                            RuntimeDefault - the container runtime default profile should be used.
                                            Unconfined - no profile should be applied.
                                          type: string
                                      required:
                                        - type
                                      type: object
                                    supplementalGroups:
                                      description: |-
                                        A list of groups applied to the first process run in each container, in
                                        addition to the container's primary GID and fsGroup (if specified).  If
                                        the SupplementalGroupsPolicy feature is enabled, the
                                        supplementalGroupsPolicy field determines whether these are in addition
                                        to or instead of any group memberships defined in the container image.
                                        If unspecified, no additional groups are added, though group memberships
                                        defined in the container image may still be used, depending on the
                                        supplementalGroupsPolicy field.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      items:
                                        format: int64
                                        type: integer
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    supplementalGroupsPolicy:
                                      description: |-
                                        Defines how supplemental groups of the first container processes are calculated.
                                        Valid values are "Merge" and "Strict". If not specified, "Merge" is used.
                                        (Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled
                                        and the container runtime must implement support for this feature.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      type: string
                                    sysctls:
                                      description: |-
                                        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                        sysctls (by the container runtime) might fail to launch.
                                        Note that this field cannot be set when spec.os.name is windows.
                                      items:
                                        description: Sysctl defines a kernel parameter to be set
                                        properties:
                                          name:
                                            description: Name of a property to set
                                            type: string
                                          value:
                                            description: Value of a property to set
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    windowsOptions:
                                      description: |-
                                        The Windows specific settings applied to all containers.
                                        If unspecified, the options within a container's SecurityContext will be used.
                                        If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        Note that this field cannot be set when spec.os.name is linux.
                                      properties:
                                        gmsaCredentialSpec:
                                          description: |-
                                            GMSACredentialSpec is where the GMSA admission webhook
                                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                            GMSA credential spec named by the GMSACredentialSpecName field.
                                          type: string
                                        gmsaCredentialSpecName:
                                          description: GMSACredentialSpecName is the name of the GMSA credential spec to use.
                                          type: string
                                        hostProcess:
                                          description: |-
                                            HostProcess determines if a container should be run as a 'Host Process' container.
                                            All of a Pod's containers must have the same effective HostProcess value
                                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                                          type: boolean
                                        runAsUserName:
                                          description: |-
                                            The UserName in Windows to run the entrypoint of the container process.
                                            Defaults to the user specified in image metadata if unspecified.
                                            May also be set in PodSecurityContext. If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: string
                                      type: object
                                  type: object
                                serviceAccount:
                                  description: |-
                                    DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.
                                    Deprecated: Use serviceAccountName instead.
                                  type: string
                                serviceAccountName:
                                  description: |-
                                    ServiceAccountName is the name of the ServiceAccount to use to run this pod.
                                    More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                  type: string
                                setHostnameAsFQDN:
                                  description: |-
                                    If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
                                    In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
                                    In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
                                    If a pod does not have FQDN, this has no effect.
                                    Default to false.
                                  type: boolean
                                shareProcessNamespace:
                                  description: |-
                                    Share a single process namespace between all of the containers in a pod.
                                    When this is set containers will be able to view and signal processes from other containers
                                    in the same pod, and the first process in each container will not be assigned PID 1.
                                    HostPID and ShareProcessNamespace cannot both be set.
                                    Optional: Default to false.
                                  type: boolean
                                subdomain:
                                  description: |-
                                    If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                    If not specified, the pod will not have a domainname at all.
                                  type: string
                                terminationGracePeriodSeconds:
                                  description: |-
                                    Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
                                    Value must be non-negative integer. The value zero indicates stop immediately via
                                    the kill signal (no opportunity to shut down).
                                    If this value is nil, the default grace period will be used instead.
                                    The grace period is the duration in seconds after the processes running in the pod are sent
                                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                                    Set this value longer than the expected cleanup time for your process.
                                    Defaults to 30 seconds.
                                  format: int64
                                  type: integer
                                tolerations:
                                  description: If specified, the pod's tolerations.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologySpreadConstraints:
                                  description: |-
                                    TopologySpreadConstraints describes how a group of pods ought to spread across topology
                                    domains. Scheduler will schedule pods in a way which abides by the constraints.
                                    All topologySpreadConstraints are ANDed.
                                  items:
                                    description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          LabelSelector is used to find matching pods.
                                          Pods that match this label selector are counted to determine the number of pods
                                          in their corresponding topology domain.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select the pods over which
                                          spreading will be calculated. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are ANDed with labelSelector
                                          to select the group of existing pods over which spreading will be calculated
                                          for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          Keys that don't exist in the incoming pod labels will
                                          be ignored. A null or empty list means only match against labelSelector.

                                          This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      maxSkew:
                                        description: |-
                                          MaxSkew describes the degree to which pods may be unevenly distributed.
                                          When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                          between the number of matching pods in the target topology and the global minimum.
                                          The global minimum is the minimum number of matching pods in an eligible domain
                                          or zero if the number of eligible domains is less than MinDomains.
                                          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                          labelSelector spread as 2/2/1:
                                          In this case, the global minimum is 1.
                                          | zone1 | zone2 | zone3 |
                                          |  P P  |  P P  |   P   |
                                          - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                          scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                          violate MaxSkew(1).
                                          - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                          When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                          to topologies that satisfy it.
                                          It's a required field. Default value is 1 and 0 is not allowed.
                                        format: int32
                                        type: integer
                                      minDomains:
                                        description: |-
                                          MinDomains indicates a minimum number of eligible domains.
                                          When the number of eligible domains with matching topology keys is less than minDomains,
                                          Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                          And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                          this value has no effect on scheduling.
                                          As a result, when the number of eligible domains is less than minDomains,
                                          scheduler won't schedule more than maxSkew Pods to those domains.
                                          If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                          Valid values are integers greater than 0.
                                          When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                          For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                          labelSelector spread as 2/2/2:
                                          | zone1 | zone2 | zone3 |
                                          |  P P  |  P P  |  P P  |
                                          The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                          In this situation, new pod with the same labelSelector cannot be scheduled,
                                          because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                          it will violate MaxSkew.
                                        format: int32
                                        type: integer
                                      nodeAffinityPolicy:
                                        description: |-
                                          NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                          when calculating pod topology spread skew. Options are:
                                          - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                          - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                          If this value is nil, the behavior is equivalent to the Honor policy.
                                        type: string
                                      nodeTaintsPolicy:
                                        description: |-
                                          NodeTaintsPolicy indicates how we will treat node taints when calculating
                                          pod topology spread skew. Options are:
                                          - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                          has a toleration, are included.
                                          - Ignore: node taints are ignored. All nodes are included.

                                          If this value is nil, the behavior is equivalent to the Ignore policy.
                                        type: string
                                      topologyKey:
                                        description: |-
                                          TopologyKey is the key of node labels. Nodes that have a label with this key
                                          and identical values are considered to be in the same topology.
                                          We consider each <key, value> as a "bucket", and try to put balanced number
                                          of pods into each bucket.
                                          We define a domain as a particular instance of a topology.
                                          Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                          nodeAffinityPolicy and nodeTaintsPolicy.
                                          e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                          And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                          It's a required field.
                                        type: string
                                      whenUnsatisfiable:
                                        description: |-
                                          WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                          the spread constraint.
                                          - DoNotSchedule (default) tells the scheduler not to schedule it.
                                          - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                            but giving higher precedence to topologies that would help reduce the
                                            skew.
                                          A constraint is considered "Unsatisfiable" for an incoming pod
                                          if and only if every possible node assignment for that pod would violate
                                          "MaxSkew" on some topology.
                                          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                          labelSelector spread as 3/1/1:
                                          | zone1 | zone2 | zone3 |
                                          | P P P |   P   |   P   |
                                          If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                          to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                          MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                          won't make it *more* imbalanced.
                                          It's a required field.
                                        type: string
                                    required:
                                      - maxSkew
                                      - topologyKey
                                      - whenUnsatisfiable
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - topologyKey
                                    - whenUnsatisfiable
                                  x-kubernetes-list-type: map
                                volumes:
                                  description: |-
                                    List of volumes that can be mounted by containers belonging to the pod.
                                    More info: https://kubernetes.io/docs/concepts/storage/volumes
                                  items:
                                    description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
                                    properties:
                                      awsElasticBlockStore:
                                        description: |-
                                          awsElasticBlockStore represents an AWS Disk resource that is attached to a
                                          kubelet's host machine and then exposed to the pod.
                                          Deprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree
                                          awsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type of the volume that you want to mount.
                                              Tip: Ensure that the filesystem type is supported by the host operating system.
                                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            type: string
                                          partition:
                                            description: |-
                                              partition is the partition in the volume that you want to mount.
                                              If omitted, the default is to mount by volume name.
                                              Examples: For volume /dev/sda1, you specify the partition as "1".
                                              Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                            format: int32
                                            type: integer
                                          readOnly:
                                            description: |-
                                              readOnly value true will force the readOnly setting in VolumeMounts.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            type: boolean
                                          volumeID:
                                            description: |-
                                              volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                            type: string
                                        required:
                                          - volumeID
                                        type: object
                                      azureDisk:
                                        description: |-
                                          azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                                          Deprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type
                                          are redirected to the disk.csi.azure.com CSI driver.
                                        properties:
                                          cachingMode:
                                            description: 'cachingMode is the Host Caching mode: None, Read Only, Read Write.'
                                            type: string
                                          diskName:
                                            description: diskName is the Name of the data disk in the blob storage
                                            type: string
                                          diskURI:
                                            description: diskURI is the URI of data disk in the blob storage
                                            type: string
                                          fsType:
                                            default: ext4
                                            description: |-
                                              fsType is Filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          kind:
                                            description: 'kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                                            type: string
                                          readOnly:
                                            default: false
                                            description: |-
                                              readOnly Defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                        required:
                                          - diskName
                                          - diskURI
                                        type: object
                                      azureFile:
                                        description: |-
                                          azureFile represents an Azure File Service mount on the host and bind mount to the pod.
                                          Deprecated: AzureFile is deprecated. All operations for the in-tree azureFile type
                                          are redirected to the file.csi.azure.com CSI driver.
                                        properties:
                                          readOnly:
                                            description: |-
                                              readOnly defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          secretName:
                                            description: secretName is the  name of secret that contains Azure Storage Account Name and Key
                                            type: string
                                          shareName:
                                            description: shareName is the azure share Name
                                            type: string
                                        required:
                                          - secretName
                                          - shareName
                                        type: object
                                      cephfs:
                                        description: |-
                                          cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.
                                          Deprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.
                                        properties:
                                          monitors:
                                            description: |-
                                              monitors is Required: Monitors is a collection of Ceph monitors
                                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          path:
                                            description: 'path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /'
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                            type: boolean
                                          secretFile:
                                            description: |-
                                              secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                            type: string
                                          secretRef:
                                            description: |-
                                              secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          user:
                                            description: |-
                                              user is optional: User is the rados user name, default is admin
                                              More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                                            type: string
                                        required:
                                          - monitors
                                        type: object
                                      cinder:
                                        description: |-
                                          cinder represents a cinder volume attached and mounted on kubelets host machine.
                                          Deprecated: Cinder is deprecated. All operations for the in-tree cinder type
                                          are redirected to the cinder.csi.openstack.org CSI driver.
                                          More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                            type: boolean
                                          secretRef:
                                            description: |-
                                              secretRef is optional: points to a secret object containing parameters used to connect
                                              to OpenStack.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          volumeID:
                                            description: |-
                                              volumeID used to identify the volume in cinder.
                                              More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                                            type: string
                                        required:
                                          - volumeID
                                        type: object
                                      configMap:
                                        description: configMap represents a configMap that should populate this volume
                                        properties:
                                          defaultMode:
                                            description: |-
                                              defaultMode is optional: mode bits used to set permissions on created files by default.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              Defaults to 0644.
                                              Directories within the path are not affected by this setting.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          items:
                                            description: |-
                                              items if unspecified, each key-value pair in the Data field of the referenced
                                              ConfigMap will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the ConfigMap,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                                - key
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: optional specify whether the ConfigMap or its keys must be defined
                                            type: boolean
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      csi:
                                        description: csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.
                                        properties:
                                          driver:
                                            description: |-
                                              driver is the name of the CSI driver that handles this volume.
                                              Consult with your admin for the correct name as registered in the cluster.
                                            type: string
                                          fsType:
                                            description: |-
                                              fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                              If not provided, the empty value is passed to the associated CSI driver
                                              which will determine the default filesystem to apply.
                                            type: string
                                          nodePublishSecretRef:
                                            description: |-
                                              nodePublishSecretRef is a reference to the secret object containing
                                              sensitive information to pass to the CSI driver to complete the CSI
                                              NodePublishVolume and NodeUnpublishVolume calls.
                                              This field is optional, and  may be empty if no secret is required. If the
                                              secret object contains more than one secret, all secret references are passed.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          readOnly:
                                            description: |-
                                              readOnly specifies a read-only configuration for the volume.
                                              Defaults to false (read/write).
                                            type: boolean
                                          volumeAttributes:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              volumeAttributes stores driver-specific properties that are passed to the CSI
                                              driver. Consult your driver's documentation for supported values.
                                            type: object
                                        required:
                                          - driver
                                        type: object
                                      downwardAPI:
                                        description: downwardAPI represents downward API about the pod that should populate this volume
                                        properties:
                                          defaultMode:
                                            description: |-
                                              Optional: mode bits to use on created files by default. Must be a
                                              Optional: mode bits used to set permissions on created files by default.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              Defaults to 0644.
                                              Directories within the path are not affected by this setting.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          items:
                                            description: Items is a list of downward API volume file
                                            items:
                                              description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                mode:
                                                  description: |-
                                                    Optional: mode bits used to set permissions on this file, must be an octal value
                                                    between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              required:
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                      emptyDir:
                                        description: |-
                                          emptyDir represents a temporary directory that shares a pod's lifetime.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                        properties:
                                          medium:
                                            description: |-
                                              medium represents what type of storage medium should back this directory.
                                              The default is "" which means to use the node's default medium.
                                              Must be an empty string (default) or Memory.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                            type: string
                                          sizeLimit:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: |-
                                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                              The size limit is also applicable for memory medium.
                                              The maximum usage on memory medium EmptyDir would be the minimum value between
                                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                              The default is nil which means that the limit is undefined.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        type: object
                                      ephemeral:
                                        description: |-
                                          ephemeral represents a volume that is handled by a cluster storage driver.
                                          The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                                          and deleted when the pod is removed.

                                          Use this if:
                                          a) the volume is only needed while the pod runs,
                                          b) features of normal volumes like restoring from snapshot or capacity
                                             tracking are needed,
                                          c) the storage driver is specified through a storage class, and
                                          d) the storage driver supports dynamic volume provisioning through
                                             a PersistentVolumeClaim (see EphemeralVolumeSource for more
                                             information on the connection between this volume type
                                             and PersistentVolumeClaim).

                                          Use PersistentVolumeClaim or one of the vendor-specific
                                          APIs for volumes that persist for longer than the lifecycle
                                          of an individual pod.

                                          Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                                          be used that way - see the documentation of the driver for
                                          more information.

                                          A pod can use both types of ephemeral volumes and
                                          persistent volumes at the same time.
                                        properties:
                                          volumeClaimTemplate:
                                            description: |-
                                              Will be used to create a stand-alone PVC to provision the volume.
                                              The pod in which this EphemeralVolumeSource is embedded will be the
                                              owner of the PVC, i.e. the PVC will be deleted together with the
                                              pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                              `<volume name>` is the name from the `PodSpec.Volumes` array
                                              entry. Pod validation will reject the pod if the concatenated name
                                              is not valid for a PVC (for example, too long).

                                              An existing PVC with that name that is not owned by the pod
                                              will *not* be used for the pod to avoid using an unrelated
                                              volume by mistake. Starting the pod is then blocked until
                                              the unrelated PVC is removed. If such a pre-created PVC is
                                              meant to be used by the pod, the PVC has to updated with an
                                              owner reference to the pod once the pod exists. Normally
                                              this should not be necessary, but it may be useful when
                                              manually reconstructing a broken cluster.

                                              This field is read-only and no changes will be made by Kubernetes
                                              to the PVC after it has been created.

                                              Required, must not be nil.
                                            properties:
                                              metadata:
                                                description: |-
                                                  May contain labels and annotations that will be copied into the PVC
                                                  when creating it. No other fields are allowed and will be rejected during
                                                  validation.
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  finalizers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  labels:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                type: object
                                              spec:
                                                description: |-
                                                  The specification for the PersistentVolumeClaim. The entire content is
                                                  copied unchanged into the PVC that gets created from this
                                                  template. The same fields as in a PersistentVolumeClaim
                                                  are also valid here.
                                                properties:
                                                  accessModes:
                                                    description: |-
                                                      accessModes contains the desired access modes the volume should have.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  dataSource:
                                                    description: |-
                                                      dataSource field can be used to specify either:
                                                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                      * An existing PVC (PersistentVolumeClaim)
                                                      If the provisioner or an external controller can support the specified data source,
                                                      it will create a new volume based on the contents of the specified data source.
                                                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                                    properties:
                                                      apiGroup:
                                                        description: |-
                                                          APIGroup is the group for the resource being referenced.
                                                          If APIGroup is not specified, the specified Kind must be in the core API group.
                                                          For any other third-party types, APIGroup is required.
                                                        type: string
                                                      kind:
                                                        description: Kind is the type of resource being referenced
                                                        type: string
                                                      name:
                                                        description: Name is the name of resource being referenced
                                                        type: string
                                                    required:
                                                      - kind
                                                      - name
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  dataSourceRef:
                                                    description: |-
                                                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                      volume is desired. This may be any object from a non-empty API group (non
                                                      core object) or a PersistentVolumeClaim object.
                                                      When this field is specified, volume binding will only succeed if the type of
                                                      the specified object matches some installed volume populator or dynamic
                                                      provisioner.
                                                      This field will replace the functionality of the dataSource field and as such
                                                      if both fields are non-empty, they must have the same value. For backwards
                                                      compatibility, when namespace isn't specified in dataSourceRef,
                                                      both fields (dataSource and dataSourceRef) will be set to the same
                                                      value automatically if one of them is empty and the other is non-empty.
                                                      When namespace is specified in dataSourceRef,
                                                      dataSource isn't set to the same value and must be empty.
                                                      There are three important differences between dataSource and dataSourceRef:
                                                      * While dataSource only allows two specific types of objects, dataSourceRef
                                                        allows any non-core object, as well as PersistentVolumeClaim objects.
                                                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                        preserves all values, and generates an error if a disallowed value is
                                                        specified.
                                                      * While dataSource only allows local objects, dataSourceRef allows objects
                                                        in any namespaces.
                                                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                    properties:
                                                      apiGroup:
                                                        description: |-
                                                          APIGroup is the group for the resource being referenced.
                                                          If APIGroup is not specified, the specified Kind must be in the core API group.
                                                          For any other third-party types, APIGroup is required.
                                                        type: string
                                                      kind:
                                                        description: Kind is the type of resource being referenced
                                                        type: string
                                                      name:
                                                        description: Name is the name of resource being referenced
                                                        type: string
                                                      namespace:
                                                        description: |-
                                                          Namespace is the namespace of resource being referenced
                                                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                        type: string
                                                    required:
                                                      - kind
                                                      - name
                                                    type: object
                                                  resources:
                                                    description: |-
                                                      resources represents the minimum resources the volume should have.
                                                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                      that are lower than previous value but must still be higher than capacity recorded in the
                                                      status field of the claim.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                    properties:
                                                      limits:
                                                        additionalProperties:
                                                          anyOf:
                                                            - type: integer
                                                            - type: string
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        description: |-
                                                          Limits describes the maximum amount of compute resources allowed.
                                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                        type: object
                                                      requests:
                                                        additionalProperties:
                                                          anyOf:
                                                            - type: integer
                                                            - type: string
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        description: |-
                                                          Requests describes the minimum amount of compute resources required.
                                                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                        type: object
                                                    type: object
                                                  selector:
                                                    description: selector is a label query over volumes to consider for binding.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  storageClassName:
                                                    description: |-
                                                      storageClassName is the name of the StorageClass required by the claim.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                    type: string
                                                  volumeAttributesClassName:
                                                    description: |-
                                                      volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                      If specified, the CSI driver will create or update the volume with the attributes defined
                                                      in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                      it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                      will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                      If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                      will be set by the persistentvolume controller if it exists.
                                                      If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                      set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                      exists.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                      (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                                    type: string
                                                  volumeMode:
                                                    description: |-
                                                      volumeMode defines what type of volume is required by the claim.
                                                      Value of Filesystem is implied when not included in claim spec.
                                                    type: string
                                                  volumeName:
                                                    description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                                    type: string
                                                type: object
                                            required:
                                              - spec
                                            type: object
                                        type: object
                                      fc:
                                        description: fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          lun:
                                            description: 'lun is Optional: FC target lun number'
                                            format: int32
                                            type: integer
                                          readOnly:
                                            description: |-
                                              readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          targetWWNs:
                                            description: 'targetWWNs is Optional: FC target worldwide names (WWNs)'
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          wwids:
                                            description: |-
                                              wwids Optional: FC volume world wide identifiers (wwids)
                                              Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                      flexVolume:
                                        description: |-
                                          flexVolume represents a generic volume resource that is
                                          provisioned/attached using an exec based plugin.
                                          Deprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.
                                        properties:
                                          driver:
                                            description: driver is the name of the driver to use for this volume.
                                            type: string
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                                            type: string
                                          options:
                                            additionalProperties:
                                              type: string
                                            description: 'options is Optional: this field holds extra command options if any.'
                                            type: object
                                          readOnly:
                                            description: |-
                                              readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          secretRef:
                                            description: |-
                                              secretRef is Optional: secretRef is reference to the secret object containing
                                              sensitive information to pass to the plugin scripts. This may be
                                              empty if no secret object is specified. If the secret object
                                              contains more than one secret, all secrets are passed to the plugin
                                              scripts.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                          - driver
                                        type: object
                                      flocker:
                                        description: |-
                                          flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.
                                          Deprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.
                                        properties:
                                          datasetName:
                                            description: |-
                                              datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                              should be considered as deprecated
                                            type: string
                                          datasetUUID:
                                            description: datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                                            type: string
                                        type: object
                                      gcePersistentDisk:
                                        description: |-
                                          gcePersistentDisk represents a GCE Disk resource that is attached to a
                                          kubelet's host machine and then exposed to the pod.
                                          Deprecated: GCEPersistentDisk is deprecated. All operations for the in-tree
                                          gcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is filesystem type of the volume that you want to mount.
                                              Tip: Ensure that the filesystem type is supported by the host operating system.
                                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            type: string
                                          partition:
                                            description: |-
                                              partition is the partition in the volume that you want to mount.
                                              If omitted, the default is to mount by volume name.
                                              Examples: For volume /dev/sda1, you specify the partition as "1".
                                              Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            format: int32
                                            type: integer
                                          pdName:
                                            description: |-
                                              pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly here will force the ReadOnly setting in VolumeMounts.
                                              Defaults to false.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                            type: boolean
                                        required:
                                          - pdName
                                        type: object
                                      gitRepo:
                                        description: |-
                                          gitRepo represents a git repository at a particular revision.
                                          Deprecated: GitRepo is deprecated. To provision a container with a git repo, mount an
                                          EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                                          into the Pod's container.
                                        properties:
                                          directory:
                                            description: |-
                                              directory is the target directory name.
                                              Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                              git repository.  Otherwise, if specified, the volume will contain the git repository in
                                              the subdirectory with the given name.
                                            type: string
                                          repository:
                                            description: repository is the URL
                                            type: string
                                          revision:
                                            description: revision is the commit hash for the specified revision.
                                            type: string
                                        required:
                                          - repository
                                        type: object
                                      glusterfs:
                                        description: |-
                                          glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                                          Deprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.
                                          More info: https://examples.k8s.io/volumes/glusterfs/README.md
                                        properties:
                                          endpoints:
                                            description: |-
                                              endpoints is the endpoint name that details Glusterfs topology.
                                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                            type: string
                                          path:
                                            description: |-
                                              path is the Glusterfs volume path.
                                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                              Defaults to false.
                                              More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                                            type: boolean
                                        required:
                                          - endpoints
                                          - path
                                        type: object
                                      hostPath:
                                        description: |-
                                          hostPath represents a pre-existing file or directory on the host
                                          machine that is directly exposed to the container. This is generally
                                          used for system agents or other privileged things that are allowed
                                          to see the host machine. Most containers will NOT need this.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                        properties:
                                          path:
                                            description: |-
                                              path of the directory on the host.
                                              If the path is a symlink, it will follow the link to the real path.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                            type: string
                                          type:
                                            description: |-
                                              type for HostPath Volume
                                              Defaults to ""
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      image:
                                        description: |-
                                          image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.
                                          The volume is resolved at pod startup depending on which PullPolicy value is provided:

                                          - Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                          - Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                          - IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.

                                          The volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.
                                          A failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.
                                          The types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.
                                          The OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.
                                          The volume will be mounted read-only (ro) and non-executable files (noexec).
                                          Sub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33.
                                          The field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.
                                        properties:
                                          pullPolicy:
                                            description: |-
                                              Policy for pulling OCI objects. Possible values are:
                                              Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.
                                              Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.
                                              IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.
                                              Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                            type: string
                                          reference:
                                            description: |-
                                              Required: Image or artifact reference to be used.
                                              Behaves in the same way as pod.spec.containers[*].image.
                                              Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.
                                              More info: https://kubernetes.io/docs/concepts/containers/images
                                              This field is optional to allow higher level config management to default or override
                                              container images in workload controllers like Deployments and StatefulSets.
                                            type: string
                                        type: object
                                      iscsi:
                                        description: |-
                                          iscsi represents an ISCSI Disk resource that is attached to a
                                          kubelet's host machine and then exposed to the pod.
                                          More info: https://examples.k8s.io/volumes/iscsi/README.md
                                        properties:
                                          chapAuthDiscovery:
                                            description: chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                                            type: boolean
                                          chapAuthSession:
                                            description: chapAuthSession defines whether support iSCSI Session CHAP authentication
                                            type: boolean
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type of the volume that you want to mount.
                                              Tip: Ensure that the filesystem type is supported by the host operating system.
                                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                            type: string
                                          initiatorName:
                                            description: |-
                                              initiatorName is the custom iSCSI Initiator Name.
                                              If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                              <target portal>:<volume name> will be created for the connection.
                                            type: string
                                          iqn:
                                            description: iqn is the target iSCSI Qualified Name.
                                            type: string
                                          iscsiInterface:
                                            default: default
                                            description: |-
                                              iscsiInterface is the interface Name that uses an iSCSI transport.
                                              Defaults to 'default' (tcp).
                                            type: string
                                          lun:
                                            description: lun represents iSCSI Target Lun number.
                                            format: int32
                                            type: integer
                                          portals:
                                            description: |-
                                              portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                              is other than default (typically TCP ports 860 and 3260).
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          readOnly:
                                            description: |-
                                              readOnly here will force the ReadOnly setting in VolumeMounts.
                                              Defaults to false.
                                            type: boolean
                                          secretRef:
                                            description: secretRef is the CHAP Secret for iSCSI target and initiator authentication
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          targetPortal:
                                            description: |-
                                              targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                              is other than default (typically TCP ports 860 and 3260).
                                            type: string
                                        required:
                                          - iqn
                                          - lun
                                          - targetPortal
                                        type: object
                                      name:
                                        description: |-
                                          name of the volume.
                                          Must be a DNS_LABEL and unique within the pod.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      nfs:
                                        description: |-
                                          nfs represents an NFS mount on the host that shares a pod's lifetime
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                        properties:
                                          path:
                                            description: |-
                                              path that is exported by the NFS server.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly here will force the NFS export to be mounted with read-only permissions.
                                              Defaults to false.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                            type: boolean
                                          server:
                                            description: |-
                                              server is the hostname or IP address of the NFS server.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                                            type: string
                                        required:
                                          - path
                                          - server
                                        type: object
                                      persistentVolumeClaim:
                                        description: |-
                                          persistentVolumeClaimVolumeSource represents a reference to a
                                          PersistentVolumeClaim in the same namespace.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                        properties:
                                          claimName:
                                            description: |-
                                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly Will force the ReadOnly setting in VolumeMounts.
                                              Default false.
                                            type: boolean
                                        required:
                                          - claimName
                                        type: object
                                      photonPersistentDisk:
                                        description: |-
                                          photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.
                                          Deprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          pdID:
                                            description: pdID is the ID that identifies Photon Controller persistent disk
                                            type: string
                                        required:
                                          - pdID
                                        type: object
                                      portworxVolume:
                                        description: |-
                                          portworxVolume represents a portworx volume attached and mounted on kubelets host machine.
                                          Deprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type
                                          are redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate
                                          is on.
                                        properties:
                                          fsType:
                                            description: |-
                                              fSType represents the filesystem type to mount
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          volumeID:
                                            description: volumeID uniquely identifies a Portworx volume
                                            type: string
                                        required:
                                          - volumeID
                                        type: object
                                      projected:
                                        description: projected items for all in one resources secrets, configmaps, and downward API
                                        properties:
                                          defaultMode:
                                            description: |-
                                              defaultMode are the mode bits used to set permissions on created files by default.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                              Directories within the path are not affected by this setting.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          sources:
                                            description: |-
                                              sources is the list of volume projections. Each entry in this list
                                              handles one source.
                                            items:
                                              description: |-
                                                Projection that may be projected along with other supported volume types.
                                                Exactly one of these fields must be set.
                                              properties:
                                                clusterTrustBundle:
                                                  description: |-
                                                    ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                                    of ClusterTrustBundle objects in an auto-updating file.

                                                    Alpha, gated by the ClusterTrustBundleProjection feature gate.

                                                    ClusterTrustBundle objects can either be selected by name, or by the
                                                    combination of signer name and a label selector.

                                                    Kubelet performs aggressive normalization of the PEM contents written
                                                    into the pod filesystem.  Esoteric PEM features such as inter-block
                                                    comments and block headers are stripped.  Certificates are deduplicated.
                                                    The ordering of certificates within the file is arbitrary, and Kubelet
                                                    may change the order over time.
                                                  properties:
                                                    labelSelector:
                                                      description: |-
                                                        Select all ClusterTrustBundles that match this label selector.  Only has
                                                        effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                                        interpreted as "match nothing".  If set but empty, interpreted as "match
                                                        everything".
                                                      properties:
                                                        matchExpressions:
                                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                          items:
                                                            description: |-
                                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                                              relates the key and values.
                                                            properties:
                                                              key:
                                                                description: key is the label key that the selector applies to.
                                                                type: string
                                                              operator:
                                                                description: |-
                                                                  operator represents a key's relationship to a set of values.
                                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                type: string
                                                              values:
                                                                description: |-
                                                                  values is an array of string values. If the operator is In or NotIn,
                                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                  the values array must be empty. This array is replaced during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                            required:
                                                              - key
                                                              - operator
                                                            type: object
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        matchLabels:
                                                          additionalProperties:
                                                            type: string
                                                          description: |-
                                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                          type: object
                                                      type: object
                                                      x-kubernetes-map-type: atomic
                                                    name:
                                                      description: |-
                                                        Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                                        with signerName and labelSelector.
                                                      type: string
                                                    optional:
                                                      description: |-
                                                        If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                                        aren't available.  If using name, then the named ClusterTrustBundle is
                                                        allowed not to exist.  If using signerName, then the combination of
                                                        signerName and labelSelector is allowed to match zero
                                                        ClusterTrustBundles.
                                                      type: boolean
                                                    path:
                                                      description: Relative path from the volume root to write the bundle.
                                                      type: string
                                                    signerName:
                                                      description: |-
                                                        Select all ClusterTrustBundles that match this signer name.
                                                        Mutually-exclusive with name.  The contents of all selected
                                                        ClusterTrustBundles will be unified and deduplicated.
                                                      type: string
                                                  required:
                                                    - path
                                                  type: object
                                                configMap:
                                                  description: configMap information about the configMap data to project
                                                  properties:
                                                    items:
                                                      description: |-
                                                        items if unspecified, each key-value pair in the Data field of the referenced
                                                        ConfigMap will be projected into the volume as a file whose name is the
                                                        key and content is the value. If specified, the listed keys will be
                                                        projected into the specified paths, and unlisted keys will not be
                                                        present. If a key is specified which is not present in the ConfigMap,
                                                        the volume setup will error unless it is marked optional. Paths must be
                                                        relative and may not contain the '..' path or start with '..'.
                                                      items:
                                                        description: Maps a string key to a path within a volume.
                                                        properties:
                                                          key:
                                                            description: key is the key to project.
                                                            type: string
                                                          mode:
                                                            description: |-
                                                              mode is Optional: mode bits used to set permissions on this file.
                                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                              If not specified, the volume defaultMode will be used.
                                                              This might be in conflict with other options that affect the file
                                                              mode, like fsGroup, and the result can be other mode bits set.
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: |-
                                                              path is the relative path of the file to map the key to.
                                                              May not be an absolute path.
                                                              May not contain the path element '..'.
                                                              May not start with the string '..'.
                                                            type: string
                                                        required:
                                                          - key
                                                          - path
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: optional specify whether the ConfigMap or its keys must be defined
                                                      type: boolean
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                downwardAPI:
                                                  description: downwardAPI information about the downwardAPI data to project
                                                  properties:
                                                    items:
                                                      description: Items is a list of DownwardAPIVolume file
                                                      items:
                                                        description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                                        properties:
                                                          fieldRef:
                                                            description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                                            properties:
                                                              apiVersion:
                                                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                                type: string
                                                              fieldPath:
                                                                description: Path of the field to select in the specified API version.
                                                                type: string
                                                            required:
                                                              - fieldPath
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          mode:
                                                            description: |-
                                                              Optional: mode bits used to set permissions on this file, must be an octal value
                                                              between 0000 and 0777 or a decimal value between 0 and 511.
                                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                              If not specified, the volume defaultMode will be used.
                                                              This might be in conflict with other options that affect the file
                                                              mode, like fsGroup, and the result can be other mode bits set.
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                            type: string
                                                          resourceFieldRef:
                                                            description: |-
                                                              Selects a resource of the container: only resources limits and requests
                                                              (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                            properties:
                                                              containerName:
                                                                description: 'Container name: required for volumes, optional for env vars'
                                                                type: string
                                                              divisor:
                                                                anyOf:
                                                                  - type: integer
                                                                  - type: string
                                                                description: Specifies the output format of the exposed resources, defaults to "1"
                                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                x-kubernetes-int-or-string: true
                                                              resource:
                                                                description: 'Required: resource to select'
                                                                type: string
                                                            required:
                                                              - resource
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                        required:
                                                          - path
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  type: object
                                                secret:
                                                  description: secret information about the secret data to project
                                                  properties:
                                                    items:
                                                      description: |-
                                                        items if unspecified, each key-value pair in the Data field of the referenced
                                                        Secret will be projected into the volume as a file whose name is the
                                                        key and content is the value. If specified, the listed keys will be
                                                        projected into the specified paths, and unlisted keys will not be
                                                        present. If a key is specified which is not present in the Secret,
                                                        the volume setup will error unless it is marked optional. Paths must be
                                                        relative and may not contain the '..' path or start with '..'.
                                                      items:
                                                        description: Maps a string key to a path within a volume.
                                                        properties:
                                                          key:
                                                            description: key is the key to project.
                                                            type: string
                                                          mode:
                                                            description: |-
                                                              mode is Optional: mode bits used to set permissions on this file.
                                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                              If not specified, the volume defaultMode will be used.
                                                              This might be in conflict with other options that affect the file
                                                              mode, like fsGroup, and the result can be other mode bits set.
                                                            format: int32
                                                            type: integer
                                                          path:
                                                            description: |-
                                                              path is the relative path of the file to map the key to.
                                                              May not be an absolute path.
                                                              May not contain the path element '..'.
                                                              May not start with the string '..'.
                                                            type: string
                                                        required:
                                                          - key
                                                          - path
                                                        type: object
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                    name:
                                                      default: ""
                                                      description: |-
                                                        Name of the referent.
                                                        This field is effectively required, but due to backwards compatibility is
                                                        allowed to be empty. Instances of this type with an empty value here are
                                                        almost certainly wrong.
                                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      type: string
                                                    optional:
                                                      description: optional field specify whether the Secret or its key must be defined
                                                      type: boolean
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                serviceAccountToken:
                                                  description: serviceAccountToken is information about the serviceAccountToken data to project
                                                  properties:
                                                    audience:
                                                      description: |-
                                                        audience is the intended audience of the token. A recipient of a token
                                                        must identify itself with an identifier specified in the audience of the
                                                        token, and otherwise should reject the token. The audience defaults to the
                                                        identifier of the apiserver.
                                                      type: string
                                                    expirationSeconds:
                                                      description: |-
                                                        expirationSeconds is the requested duration of validity of the service
                                                        account token. As the token approaches expiration, the kubelet volume
                                                        plugin will proactively rotate the service account token. The kubelet will
                                                        start trying to rotate the token if the token is older than 80 percent of
                                                        its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                                        and must be at least 10 minutes.
                                                      format: int64
                                                      type: integer
                                                    path:
                                                      description: |-
                                                        path is the path relative to the mount point of the file to project the
                                                        token into.
                                                      type: string
                                                  required:
                                                    - path
                                                  type: object
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        type: object
                                      quobyte:
                                        description: |-
                                          quobyte represents a Quobyte mount on the host that shares a pod's lifetime.
                                          Deprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.
                                        properties:
                                          group:
                                            description: |-
                                              group to map volume access to
                                              Default is no group
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                              Defaults to false.
                                            type: boolean
                                          registry:
                                            description: |-
                                              registry represents a single or multiple Quobyte Registry services
                                              specified as a string as host:port pair (multiple entries are separated with commas)
                                              which acts as the central registry for volumes
                                            type: string
                                          tenant:
                                            description: |-
                                              tenant owning the given Quobyte volume in the Backend
                                              Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                                            type: string
                                          user:
                                            description: |-
                                              user to map volume access to
                                              Defaults to serivceaccount user
                                            type: string
                                          volume:
                                            description: volume is a string that references an already created Quobyte volume by name.
                                            type: string
                                        required:
                                          - registry
                                          - volume
                                        type: object
                                      rbd:
                                        description: |-
                                          rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                                          Deprecated: RBD is deprecated and the in-tree rbd type is no longer supported.
                                          More info: https://examples.k8s.io/volumes/rbd/README.md
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type of the volume that you want to mount.
                                              Tip: Ensure that the filesystem type is supported by the host operating system.
                                              Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                            type: string
                                          image:
                                            description: |-
                                              image is the rados image name.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            type: string
                                          keyring:
                                            default: /etc/ceph/keyring
                                            description: |-
                                              keyring is the path to key ring for RBDUser.
                                              Default is /etc/ceph/keyring.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            type: string
                                          monitors:
                                            description: |-
                                              monitors is a collection of Ceph monitors.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          pool:
                                            default: rbd
                                            description: |-
                                              pool is the rados pool name.
                                              Default is rbd.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly here will force the ReadOnly setting in VolumeMounts.
                                              Defaults to false.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            type: boolean
                                          secretRef:
                                            description: |-
                                              secretRef is name of the authentication secret for RBDUser. If provided
                                              overrides keyring.
                                              Default is nil.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          user:
                                            default: admin
                                            description: |-
                                              user is the rados user name.
                                              Default is admin.
                                              More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                                            type: string
                                        required:
                                          - image
                                          - monitors
                                        type: object
                                      scaleIO:
                                        description: |-
                                          scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
                                          Deprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.
                                        properties:
                                          fsType:
                                            default: xfs
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs".
                                              Default is "xfs".
                                            type: string
                                          gateway:
                                            description: gateway is the host address of the ScaleIO API Gateway.
                                            type: string
                                          protectionDomain:
                                            description: protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly Defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          secretRef:
                                            description: |-
                                              secretRef references to the secret for ScaleIO user and other
                                              sensitive information. If this is not provided, Login operation will fail.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          sslEnabled:
                                            description: sslEnabled Flag enable/disable SSL communication with Gateway, default false
                                            type: boolean
                                          storageMode:
                                            default: ThinProvisioned
                                            description: |-
                                              storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                              Default is ThinProvisioned.
                                            type: string
                                          storagePool:
                                            description: storagePool is the ScaleIO Storage Pool associated with the protection domain.
                                            type: string
                                          system:
                                            description: system is the name of the storage system as configured in ScaleIO.
                                            type: string
                                          volumeName:
                                            description: |-
                                              volumeName is the name of a volume already created in the ScaleIO system
                                              that is associated with this volume source.
                                            type: string
                                        required:
                                          - gateway
                                          - secretRef
                                          - system
                                        type: object
                                      secret:
                                        description: |-
                                          secret represents a secret that should populate this volume.
                                          More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                        properties:
                                          defaultMode:
                                            description: |-
                                              defaultMode is Optional: mode bits used to set permissions on created files by default.
                                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal values, JSON requires decimal values
                                              for mode bits. Defaults to 0644.
                                              Directories within the path are not affected by this setting.
                                              This might be in conflict with other options that affect the file
                                              mode, like fsGroup, and the result can be other mode bits set.
                                            format: int32
                                            type: integer
                                          items:
                                            description: |-
                                              items If unspecified, each key-value pair in the Data field of the referenced
                                              Secret will be projected into the volume as a file whose name is the
                                              key and content is the value. If specified, the listed keys will be
                                              projected into the specified paths, and unlisted keys will not be
                                              present. If a key is specified which is not present in the Secret,
                                              the volume setup will error unless it is marked optional. Paths must be
                                              relative and may not contain the '..' path or start with '..'.
                                            items:
                                              description: Maps a string key to a path within a volume.
                                              properties:
                                                key:
                                                  description: key is the key to project.
                                                  type: string
                                                mode:
                                                  description: |-
                                                    mode is Optional: mode bits used to set permissions on this file.
                                                    Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: |-
                                                    path is the relative path of the file to map the key to.
                                                    May not be an absolute path.
                                                    May not contain the path element '..'.
                                                    May not start with the string '..'.
                                                  type: string
                                              required:
                                                - key
                                                - path
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          optional:
                                            description: optional field specify whether the Secret or its keys must be defined
                                            type: boolean
                                          secretName:
                                            description: |-
                                              secretName is the name of the secret in the pod's namespace to use.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                            type: string
                                        type: object
                                      storageos:
                                        description: |-
                                          storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
                                          Deprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is the filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          readOnly:
                                            description: |-
                                              readOnly defaults to false (read/write). ReadOnly here will force
                                              the ReadOnly setting in VolumeMounts.
                                            type: boolean
                                          secretRef:
                                            description: |-
                                              secretRef specifies the secret to use for obtaining the StorageOS API
                                              credentials.  If not specified, default values will be attempted.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          volumeName:
                                            description: |-
                                              volumeName is the human-readable name of the StorageOS volume.  Volume
                                              names are only unique within a namespace.
                                            type: string
                                          volumeNamespace:
                                            description: |-
                                              volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                              namespace is specified then the Pod's namespace will be used.  This allows the
                                              Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                              Set VolumeName to any name to override the default behaviour.
                                              Set to "default" if you are not using namespaces within StorageOS.
                                              Namespaces that do not pre-exist within StorageOS will be created.
                                            type: string
                                        type: object
                                      vsphereVolume:
                                        description: |-
                                          vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.
                                          Deprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type
                                          are redirected to the csi.vsphere.vmware.com CSI driver.
                                        properties:
                                          fsType:
                                            description: |-
                                              fsType is filesystem type to mount.
                                              Must be a filesystem type supported by the host operating system.
                                              Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                            type: string
                                          storagePolicyID:
                                            description: storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                                            type: string
                                          storagePolicyName:
                                            description: storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                                            type: string
                                          volumePath:
                                            description: volumePath is the path that identifies vSphere volume vmdk
                                            type: string
                                        required:
                                          - volumePath
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                              required:
                                - containers
                              type: object
                          type: object
                      required:
                        - selector
                        - template
                      type: object
                  type: object
                serviceAccountTemplate:
                  description: ServiceAccountTemplate is the template for the ServiceAccount object.
                  properties:
                    metadata:
                      description: Metadata contains the configurable metadata fields for the ServiceAccount.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that
                            may be set by external tools to store and retrieve arbitrary metadata.
                            They are not queryable and should be preserved when modifying objects.
                            More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. Labels will be merged with internal labels
                            used by crossplane, and labels with a crossplane.io key might be
                            overwritten.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                        name:
                          description: Name is the name of the object.
                          type: string
                      type: object
                  type: object
                serviceTemplate:
                  description: ServiceTemplate is the template for the Service object.
                  properties:
                    metadata:
                      description: Metadata contains the configurable metadata fields for the Service.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that
                            may be set by external tools to store and retrieve arbitrary metadata.
                            They are not queryable and should be preserved when modifying objects.
                            More info: http:https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. Labels will be merged with internal labels
                            used by crossplane, and labels with a crossplane.io key might be
                            overwritten.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                        name:
                          description: Name is the name of the object.
                          type: string
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: environmentconfigs.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: EnvironmentConfig
    listKind: EnvironmentConfigList
    plural: environmentconfigs
    shortNames:
      - envcfg
    singular: environmentconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            An EnvironmentConfig contains user-defined unstructured values for
            use in a Composition.

            Read the Crossplane documentation for
            [more information about EnvironmentConfigs](https://docs.crossplane.io/latest/concepts/environment-configs).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            data:
              additionalProperties:
                x-kubernetes-preserve-unknown-fields: true
              description: |-
                The data of this EnvironmentConfig.
                This may contain any kind of structure that can be serialized into JSON.
              type: object
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: functionrevisions.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkgrev
    kind: FunctionRevision
    listKind: FunctionRevisionList
    plural: functionrevisions
    singular: functionrevision
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='RevisionHealthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .status.conditions[?(@.type=='RuntimeHealthy')].status
          name: RUNTIME
          type: string
        - jsonPath: .spec.image
          name: IMAGE
          type: string
        - jsonPath: .spec.desiredState
          name: STATE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.revision
          name: REVISION
          priority: 1
          type: string
        - jsonPath: .status.foundDependencies
          name: DEP-FOUND
          priority: 1
          type: string
        - jsonPath: .status.installedDependencies
          name: DEP-INSTALLED
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A FunctionRevision represents a revision of a Function. Crossplane
            creates new revisions when there are changes to the Function.

            Crossplane creates and manages FunctionRevisions. Don't directly edit
            FunctionRevisions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: FunctionRevisionSpec specifies configuration for a FunctionRevision.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                desiredState:
                  description: DesiredState of the PackageRevision. Can be either Active or Inactive.
                  type: string
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                image:
                  description: Package image used by install Pod to extract package contents.
                  type: string
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package. It is also
                    applied to any images pulled for the package, such as a provider's
                    controller image.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be
                    used to fetch packages from private registries. They are also applied to
                    any images pulled for the package, such as a provider's controller image.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revision:
                  description: |-
                    Revision number. Indicates when the revision will be garbage collected
                    based on the parent's RevisionHistoryLimit.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              required:
                - desiredState
                - image
                - revision
              type: object
            status:
              description: FunctionRevisionStatus represents the observed state of a FunctionRevision.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this revision, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                capabilities:
                  description: |-
                    Capabilities of this package. Capabilities are opaque strings that
                    may be meaningful to package consumers.
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                endpoint:
                  description: |-
                    Endpoint is the gRPC endpoint where Crossplane will send
                    RunFunctionRequests.
                  type: string
                foundDependencies:
                  description: Dependency information.
                  format: int64
                  type: integer
                installedDependencies:
                  format: int64
                  type: integer
                invalidDependencies:
                  format: int64
                  type: integer
                objectRefs:
                  description: References to objects owned by PackageRevision.
                  items:
                    description: |-
                      A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                      commonly used to reference cluster-scoped objects or objects where the
                      namespace is already known.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced object.
                        type: string
                      kind:
                        description: Kind of the referenced object.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      uid:
                        description: UID of the referenced object.
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  type: array
                resolvedImage:
                  description: |-
                    ResolvedPackage is the name of the package that was installed. It may be
                    different from spec.image if the package path was rewritten using an
                    image config.
                  type: string
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='RevisionHealthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .status.conditions[?(@.type=='RuntimeHealthy')].status
          name: RUNTIME
          type: string
        - jsonPath: .spec.image
          name: IMAGE
          type: string
        - jsonPath: .spec.desiredState
          name: STATE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.revision
          name: REVISION
          priority: 1
          type: string
        - jsonPath: .status.foundDependencies
          name: DEP-FOUND
          priority: 1
          type: string
        - jsonPath: .status.installedDependencies
          name: DEP-INSTALLED
          priority: 1
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            A FunctionRevision represents a revision of a Function. Crossplane
            creates new revisions when there are changes to the Function.

            Crossplane creates and manages FunctionRevisions. Don't directly edit
            FunctionRevisions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: FunctionRevisionSpec specifies configuration for a FunctionRevision.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                desiredState:
                  description: DesiredState of the PackageRevision. Can be either Active or Inactive.
                  type: string
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                image:
                  description: Package image used by install Pod to extract package contents.
                  type: string
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package. It is also
                    applied to any images pulled for the package, such as a provider's
                    controller image.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be
                    used to fetch packages from private registries. They are also applied to
                    any images pulled for the package, such as a provider's controller image.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revision:
                  description: |-
                    Revision number. Indicates when the revision will be garbage collected
                    based on the parent's RevisionHistoryLimit.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              required:
                - desiredState
                - image
                - revision
              type: object
            status:
              description: FunctionRevisionStatus represents the observed state of a FunctionRevision.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this revision, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                capabilities:
                  description: |-
                    Capabilities of this package. Capabilities are opaque strings that
                    may be meaningful to package consumers.
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                endpoint:
                  description: |-
                    Endpoint is the gRPC endpoint where Crossplane will send
                    RunFunctionRequests.
                  type: string
                foundDependencies:
                  description: Dependency information.
                  format: int64
                  type: integer
                installedDependencies:
                  format: int64
                  type: integer
                invalidDependencies:
                  format: int64
                  type: integer
                objectRefs:
                  description: References to objects owned by PackageRevision.
                  items:
                    description: |-
                      A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                      commonly used to reference cluster-scoped objects or objects where the
                      namespace is already known.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced object.
                        type: string
                      kind:
                        description: Kind of the referenced object.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      uid:
                        description: UID of the referenced object.
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  type: array
                resolvedImage:
                  description: |-
                    ResolvedPackage is the name of the package that was installed. It may be
                    different from spec.image if the package path was rewritten using an
                    image config.
                  type: string
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: functions.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkg
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Installed')].status
          name: INSTALLED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Healthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .spec.package
          name: PACKAGE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A Function installs an OCI compatible Crossplane package, extending
            Crossplane with support for a new kind of composition function.

            Read the Crossplane documentation for
            [more information about Functions](https://docs.crossplane.io/latest/concepts/composition-functions).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: FunctionSpec specifies the configuration of a Function.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                package:
                  description: |-
                    Package is the name of the package that is being requested.
                    must be a fully qualified image name, including the registry,
                    repository, and tag. for example, "registry.example.com/repo/package:tag".
                  type: string
                  x-kubernetes-validations:
                    - message: must be a fully qualified image name, including the registry, repository, and tag or digest. For example, 'registry.example.com/repo/package:tag' or 'registry.example.com/repo/package[:tag]@sha256:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'.
                      rule: self.matches('^[^\\.\\/]+(\\.[^\\.\\/]+)+(\\/[^\\/:@]+)+(:[^:@]+(@sha256.+)?|@sha256.+)$')
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be used
                    to fetch packages from private registries.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revisionActivationPolicy:
                  default: Automatic
                  description: |-
                    RevisionActivationPolicy specifies how the package controller should
                    update from one revision to the next. Options are Automatic or Manual.
                    Default is Automatic.
                  type: string
                revisionHistoryLimit:
                  default: 1
                  description: |-
                    RevisionHistoryLimit dictates how the package controller cleans up old
                    inactive package revisions.
                    Defaults to 1. Can be disabled by explicitly setting to 0.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
              required:
                - package
              type: object
            status:
              description: FunctionStatus represents the observed state of a Function.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this package, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                currentIdentifier:
                  description: |-
                    CurrentIdentifier is the most recent package source that was used to
                    produce a revision. The package manager uses this field to determine
                    whether to check for package updates for a given source when
                    packagePullPolicy is set to IfNotPresent. Manually removing this field
                    will cause the package manager to check that the current revision is
                    correct for the given package source.
                  type: string
                currentRevision:
                  description: |-
                    CurrentRevision is the name of the current package revision. It will
                    reflect the most up to date revision, whether it has been activated or
                    not.
                  type: string
                resolvedPackage:
                  description: |-
                    ResolvedPackage is the name of the package that was used for version
                    resolution. It may be different from spec.package if the package path was
                    rewritten using an image config.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Installed')].status
          name: INSTALLED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Healthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .spec.package
          name: PACKAGE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            A Function installs an OCI compatible Crossplane package, extending
            Crossplane with support for a new kind of composition function.

            Read the Crossplane documentation for
            [more information about Functions](https://docs.crossplane.io/latest/concepts/composition-functions).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: FunctionSpec specifies the configuration of a Function.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                package:
                  description: |-
                    Package is the name of the package that is being requested.
                    must be a fully qualified image name, including the registry,
                    repository, and tag. for example, "registry.example.com/repo/package:tag".
                  type: string
                  x-kubernetes-validations:
                    - message: must be a fully qualified image name, including the registry, repository, and tag or digest. For example, 'registry.example.com/repo/package:tag' or 'registry.example.com/repo/package[:tag]@sha256:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'.
                      rule: self.matches('^[^\\.\\/]+(\\.[^\\.\\/]+)+(\\/[^\\/:@]+)+(:[^:@]+(@sha256.+)?|@sha256.+)$')
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be used
                    to fetch packages from private registries.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revisionActivationPolicy:
                  default: Automatic
                  description: |-
                    RevisionActivationPolicy specifies how the package controller should
                    update from one revision to the next. Options are Automatic or Manual.
                    Default is Automatic.
                  type: string
                revisionHistoryLimit:
                  default: 1
                  description: |-
                    RevisionHistoryLimit dictates how the package controller cleans up old
                    inactive package revisions.
                    Defaults to 1. Can be disabled by explicitly setting to 0.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
              required:
                - package
              type: object
            status:
              description: FunctionStatus represents the observed state of a Function.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this package, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                currentIdentifier:
                  description: |-
                    CurrentIdentifier is the most recent package source that was used to
                    produce a revision. The package manager uses this field to determine
                    whether to check for package updates for a given source when
                    packagePullPolicy is set to IfNotPresent. Manually removing this field
                    will cause the package manager to check that the current revision is
                    correct for the given package source.
                  type: string
                currentRevision:
                  description: |-
                    CurrentRevision is the name of the current package revision. It will
                    reflect the most up to date revision, whether it has been activated or
                    not.
                  type: string
                resolvedPackage:
                  description: |-
                    ResolvedPackage is the name of the package that was used for version
                    resolution. It may be different from spec.package if the package path was
                    rewritten using an image config.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: gitrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    shortNames:
      - gitrepo
    singular: gitrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                GitRepositorySpec specifies the required configuration to produce an
                Artifact for a Git repository.
              properties:
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: |-
                    Include specifies a list of GitRepository resources which Artifacts
                    should be included in the Artifact produced for this GitRepository.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: |-
                    Interval at which the GitRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                provider:
                  description: |-
                    Provider used for authentication, can be 'azure', 'github', 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - azure
                    - github
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Git server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                recurseSubmodules:
                  description: |-
                    RecurseSubmodules enables the initialization of all submodules within
                    the GitRepository as cloned from the URL, using their default settings.
                  type: boolean
                ref:
                  description: |-
                    Reference specifies the Git reference to resolve and monitor for
                    changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: Branch to check out, defaults to 'master' if no other field is defined.
                      type: string
                    commit:
                      description: |-
                        Commit SHA to check out, takes precedence over all reference fields.

                        This can be combined with Branch to shallow clone the branch, in which
                        the commit is expected to exist.
                      type: string
                    name:
                      description: |-
                        Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                        It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                        Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials for
                    the GitRepository.
                    For HTTPS repositories the Secret must contain 'username' and 'password'
                    fields for basic auth or 'bearerToken' field for token auth.
                    For SSH repositories the Secret must contain 'identity'
                    and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                sparseCheckout:
                  description: |-
                    SparseCheckout specifies a list of directories to checkout when cloning
                    the repository. If specified, only these directories are included in the
                    Artifact produced for this GitRepository.
                  items:
                    type: string
                  type: array
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: |-
                    Verification specifies the configuration to verify the Git commit
                    signature(s).
                  properties:
                    mode:
                      default: HEAD
                      description: |-
                        Mode specifies which Git object(s) should be verified.

                        The variants "head" and "HEAD" both imply the same thing, i.e. verify
                        the commit that the HEAD of the Git repository points to. The variant
                        "head" solely exists to ensure backwards compatibility.
                      enum:
                        - head
                        - HEAD
                        - Tag
                        - TagAndHEAD
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing the public keys of trusted Git
                        authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                includedArtifacts:
                  description: |-
                    IncludedArtifacts contains a list of the last successfully included
                    Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      digest:
                        description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                        pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of the
                          Artifact.
                        format: date-time
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: Metadata holds upstream information such as OCI annotations.
                        type: object
                      path:
                        description: |-
                          Path is the relative file path of the Artifact. It can be used to locate
                          the file in the root of the Artifact storage on the local file system of
                          the controller managing the Source.
                        type: string
                      revision:
                        description: |-
                          Revision is a human-readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: |-
                          URL is the HTTP address of the Artifact as exposed by the controller
                          managing the Source. It can be used to retrieve the Artifact for
                          consumption, e.g. by another controller applying the Artifact contents.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - revision
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the GitRepository
                    object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedInclude:
                  description: |-
                    ObservedInclude is the observed list of GitRepository resources used to
                    produce the current Artifact.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                observedRecurseSubmodules:
                  description: |-
                    ObservedRecurseSubmodules is the observed resource submodules
                    configuration used to produce the current Artifact.
                  type: boolean
                observedSparseCheckout:
                  description: |-
                    ObservedSparseCheckout is the observed list of directories used to
                    produce the current Artifact.
                  items:
                    type: string
                  type: array
                sourceVerificationMode:
                  description: |-
                    SourceVerificationMode is the last used verification mode indicating
                    which Git object(s) have been verified.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 GitRepository is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: |-
                    Determines which git client library to use.
                    Defaults to go-git, valid values are ('go-git', 'libgit2').
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  items:
                    description: GitRepositoryInclude defines a source with a from and to path.
                    properties:
                      fromPath:
                        description: The path to copy contents from, defaults to the root directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: The path to copy contents to, defaults to the name of the source ref.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: |-
                    When enabled, after the clone is created, initializes all submodules within,
                    using their default settings.
                    This option is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: |-
                    The Git reference to checkout and monitor for changes, defaults to
                    master branch.
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: The Git commit SHA to checkout, if specified Tag filters will be ignored.
                      type: string
                    semver:
                      description: The Git tag semver expression, takes precedence over Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    The secret name containing the Git credentials.
                    For HTTPS repositories the secret must contain username and password
                    fields.
                    For SSH repositories the secret must contain identity and known_hosts
                    fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote Git operations like cloning, defaults to 60s.
                  type: string
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points to.
                  properties:
                    mode:
                      description: Mode describes what git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: The secret name containing the public keys of all trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus defines the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts represents the included artifacts from the last successful repository sync.
                  items:
                    description: Artifact represents the output of a source synchronisation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of this
                          artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: |-
                          Revision is a human readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                          chart version, etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the download link for the artifact output of the last repository
                    sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 GitRepository is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                GitRepositorySpec specifies the required configuration to produce an
                Artifact for a Git repository.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: |-
                    GitImplementation specifies which Git client library implementation to
                    use. Defaults to 'go-git', valid values are ('go-git', 'libgit2').
                    Deprecated: gitImplementation is deprecated now that 'go-git' is the
                    only supported implementation.
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: |-
                    Include specifies a list of GitRepository resources which Artifacts
                    should be included in the Artifact produced for this GitRepository.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: Interval at which to check the GitRepository for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                recurseSubmodules:
                  description: |-
                    RecurseSubmodules enables the initialization of all submodules within
                    the GitRepository as cloned from the URL, using their default settings.
                  type: boolean
                ref:
                  description: |-
                    Reference specifies the Git reference to resolve and monitor for
                    changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: Branch to check out, defaults to 'master' if no other field is defined.
                      type: string
                    commit:
                      description: |-
                        Commit SHA to check out, takes precedence over all reference fields.

                        This can be combined with Branch to shallow clone the branch, in which
                        the commit is expected to exist.
                      type: string
                    name:
                      description: |-
                        Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                        It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                        Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials for
                    the GitRepository.
                    For HTTPS repositories the Secret must contain 'username' and 'password'
                    fields for basic auth or 'bearerToken' field for token auth.
                    For SSH repositories the Secret must contain 'identity'
                    and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: |-
                    Verification specifies the configuration to verify the Git commit
                    signature(s).
                  properties:
                    mode:
                      description: Mode specifies what Git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing the public keys of trusted Git
                        authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                    - secretRef
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: |-
                    ContentConfigChecksum is a checksum of all the configurations related to
                    the content of the source artifact:
                     - .spec.ignore
                     - .spec.recurseSubmodules
                     - .spec.included and the checksum of the included artifacts
                    observed in .status.observedGeneration version of the object. This can
                    be used to determine if the content of the included repository has
                    changed.
                    It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.

                    Deprecated: Replaced with explicit fields for observed artifact content
                    config in the status.
                  type: string
                includedArtifacts:
                  description: |-
                    IncludedArtifacts contains a list of the last successfully included
                    Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      digest:
                        description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                        pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of the
                          Artifact.
                        format: date-time
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: Metadata holds upstream information such as OCI annotations.
                        type: object
                      path:
                        description: |-
                          Path is the relative file path of the Artifact. It can be used to locate
                          the file in the root of the Artifact storage on the local file system of
                          the controller managing the Source.
                        type: string
                      revision:
                        description: |-
                          Revision is a human-readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: |-
                          URL is the HTTP address of the Artifact as exposed by the controller
                          managing the Source. It can be used to retrieve the Artifact for
                          consumption, e.g. by another controller applying the Artifact contents.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - revision
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the GitRepository
                    object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedInclude:
                  description: |-
                    ObservedInclude is the observed list of GitRepository resources used to
                    to produce the current Artifact.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                observedRecurseSubmodules:
                  description: |-
                    ObservedRecurseSubmodules is the observed resource submodules
                    configuration used to produce the current Artifact.
                  type: boolean
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    GitRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: helmcharts.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmChart
    listKind: HelmChartList
    plural: helmcharts
    shortNames:
      - hc
    singular: helmchart
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                chart:
                  description: |-
                    Chart is the name or path the Helm chart is available at in the
                    SourceRef.
                  type: string
                ignoreMissingValuesFiles:
                  description: |-
                    IgnoreMissingValuesFiles controls whether to silently ignore missing values
                    files rather than failing.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmChart SourceRef is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    ReconcileStrategy determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    source.
                  type: boolean
                valuesFiles:
                  description: |-
                    ValuesFiles is an alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be a
                    relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file
                    overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                    This field is only supported when using HelmRepository source with spec.type 'oci'.
                    Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                version:
                  default: '*'
                  description: |-
                    Version is the chart version semver expression, ignored for charts from
                    GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedChartName:
                  description: |-
                    ObservedChartName is the last observed chart name as specified by the
                    resolved chart reference.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmChart
                    object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: |-
                    ObservedSourceArtifactRevision is the last observed Artifact.Revision
                    of the HelmChartSpec.SourceRef.
                  type: string
                observedValuesFiles:
                  description: |-
                    ObservedValuesFiles are the observed value files of the last successful
                    reconciliation.
                    It matches the chart in the last successfully reconciled artifact.
                  items:
                    type: string
                  type: array
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 HelmChart is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec defines the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: The name or path the Helm chart is available at in the SourceRef.
                  type: string
                interval:
                  description: The interval at which to check the Source for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    Determines what enables the creation of a new artifact. Valid values are
                    ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: The reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                valuesFile:
                  description: |-
                    Alternative values file to use as the default chart values, expected to
                    be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                    for backwards compatibility the file defined here is merged before the
                    ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: |-
                    Alternative list of values files to use as the chart values (values.yaml
                    is not included by default), expected to be a relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file overriding
                    the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: |-
                    The chart version semver expression, ignored for charts from GitRepository
                    and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus defines the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful chart sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last chart pulled.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 HelmChart is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: |-
                    Chart is the name or path the Helm chart is available at in the
                    SourceRef.
                  type: string
                ignoreMissingValuesFiles:
                  description: |-
                    IgnoreMissingValuesFiles controls whether to silently ignore missing values
                    files rather than failing.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmChart SourceRef is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    ReconcileStrategy determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    source.
                  type: boolean
                valuesFile:
                  description: |-
                    ValuesFile is an alternative values file to use as the default chart
                    values, expected to be a relative path in the SourceRef. Deprecated in
                    favor of ValuesFiles, for backwards compatibility the file specified here
                    is merged before the ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: |-
                    ValuesFiles is an alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be a
                    relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file
                    overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                    This field is only supported when using HelmRepository source with spec.type 'oci'.
                    Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                version:
                  default: '*'
                  description: |-
                    Version is the chart version semver expression, ignored for charts from
                    GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedChartName:
                  description: |-
                    ObservedChartName is the last observed chart name as specified by the
                    resolved chart reference.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmChart
                    object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: |-
                    ObservedSourceArtifactRevision is the last observed Artifact.Revision
                    of the HelmChartSpec.SourceRef.
                  type: string
                observedValuesFiles:
                  description: |-
                    ObservedValuesFiles are the observed value files of the last successful
                    reconciliation.
                    It matches the chart in the last successfully reconciled artifact.
                  items:
                    type: string
                  type: array
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: helm-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: helmreleases.helm.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: helm.toolkit.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
      - hr
    singular: helmrelease
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v2
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          maxLength: 2048
                          minLength: 1
                          type: string
                        ignoreMissingValuesFiles:
                          description: IgnoreMissingValuesFiles controls whether to silently ignore missing values files rather than failing.
                          type: boolean
                        interval:
                          description: |-
                            Interval at which to check the v1.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact,
                            are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                                - notation
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableSchemaValidation:
                      description: |-
                        DisableSchemaValidation prevents the Helm install action from validating
                        the values against the JSON Schema.
                      type: boolean
                    disableTakeOwnership:
                      description: |-
                        DisableTakeOwnership disables taking ownership of existing resources
                        during the Helm install action. Defaults to false.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '5'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  maxLength: 253
                  minLength: 1
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    filters:
                      description: Filters is a list of tests to run or exclude from running.
                      items:
                        description: Filter holds the configuration for individual Helm test filters.
                        properties:
                          exclude:
                            description: Exclude specifies whether the named test should be excluded.
                            type: boolean
                          name:
                            description: Name is the name of the test.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableSchemaValidation:
                      description: |-
                        DisableSchemaValidation prevents the Helm upgrade action from validating
                        the values against the JSON Schema.
                      type: boolean
                    disableTakeOwnership:
                      description: |-
                        DisableTakeOwnership disables taking ownership of existing resources
                        during the Helm upgrade action. Defaults to false.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - interval
              type: object
              x-kubernetes-validations:
                - message: either chart or chartRef must be set
                  rule: (has(self.chart) && !has(self.chartRef)) || (!has(self.chart) && has(self.chartRef))
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.
                  enum:
                    - install
                    - upgrade
                  type: string
                lastAttemptedRevision:
                  description: |-
                    LastAttemptedRevision is the Source revision of the last reconciliation
                    attempt. For OCIRepository  sources, the 12 first characters of the digest are
                    appended to the chart version e.g. "1.2.3+1234567890ab".
                  type: string
                lastAttemptedRevisionDigest:
                  description: |-
                    LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
                    This is only set for OCIRepository sources.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum for the values of the last
                    reconciliation attempt.
                    Deprecated: Use LastAttemptedConfigDigest instead.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastReleaseRevision:
                  description: |-
                    LastReleaseRevision is the revision of the last successful Helm release.
                    Deprecated: Use History instead.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.
                  maxLength: 63
                  minLength: 1
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v2beta1 HelmRelease is deprecated, upgrade to v2
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1beta2.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          type: string
                        interval:
                          description: |-
                            Interval at which to check the v1beta2.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1beta2.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFile:
                          description: |-
                            Alternative values file to use as the default chart values, expected to
                            be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                            for backwards compatibility the file defined here is merged before the
                            ValuesFiles items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1beta2.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.

                    Note: this field is provisional to the v2 API, and not actively used
                    by v2beta1 HelmReleases.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt-in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: |-
                    Interval at which to reconcile the Helm release.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '10'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                          patchesJson6902:
                            description: JSON 6902 patches, defined as inline YAML objects.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document with an array of operation objects.
                                  items:
                                    description: |-
                                      JSON6902 is a JSON6902 operation object.
                                      https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: |-
                                          From contains a JSON-pointer value that references a location within the target document where the operation is
                                          performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        type: string
                                      op:
                                        description: |-
                                          Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                          "test".
                                          https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                          - test
                                          - remove
                                          - add
                                          - replace
                                          - move
                                          - copy
                                        type: string
                                      path:
                                        description: |-
                                          Path contains the JSON-pointer value that references a location within the target document where the operation
                                          is performed. The meaning of the value depends on the value of Op.
                                        type: string
                                      value:
                                        description: |-
                                          Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                          account by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - op
                                      - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                                - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: Strategic merge patches, defined as inline YAML objects.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                          When set, must be a valid Data Key, consisting of alphanumeric characters,
                          '-', '_' or '.'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - chart
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully applied source.
                  type: string
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum of the values of the last
                    reconciliation attempt.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v2beta2 HelmRelease is deprecated, upgrade to v2
      name: v2beta2
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1beta2.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          maxLength: 2048
                          minLength: 1
                          type: string
                        ignoreMissingValuesFiles:
                          description: IgnoreMissingValuesFiles controls whether to silently ignore missing values files rather than failing.
                          type: boolean
                        interval:
                          description: |-
                            Interval at which to check the v1.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFile:
                          description: |-
                            Alternative values file to use as the default chart values, expected to
                            be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                            for backwards compatibility the file defined here is merged before the
                            ValuesFiles items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact,
                            are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                                - notation
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1beta2.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.

                    Note: this field is provisional to the v2 API, and not actively used
                    by v2beta2 HelmReleases.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '5'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                          patchesJson6902:
                            description: |-
                              JSON 6902 patches, defined as inline YAML objects.
                              Deprecated: use Patches instead.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document with an array of operation objects.
                                  items:
                                    description: |-
                                      JSON6902 is a JSON6902 operation object.
                                      https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: |-
                                          From contains a JSON-pointer value that references a location within the target document where the operation is
                                          performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        type: string
                                      op:
                                        description: |-
                                          Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                          "test".
                                          https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                          - test
                                          - remove
                                          - add
                                          - replace
                                          - move
                                          - copy
                                        type: string
                                      path:
                                        description: |-
                                          Path contains the JSON-pointer value that references a location within the target document where the operation
                                          is performed. The meaning of the value depends on the value of Op.
                                        type: string
                                      value:
                                        description: |-
                                          Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                          account by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - op
                                      - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                                - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: |-
                              Strategic merge patches, defined as inline YAML objects.
                              Deprecated: use Patches instead.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  maxLength: 253
                  minLength: 1
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    filters:
                      description: Filters is a list of tests to run or exclude from running.
                      items:
                        description: Filter holds the configuration for individual Helm test filters.
                        properties:
                          exclude:
                            description: Exclude specifies whether the named test should be excluded.
                            type: boolean
                          name:
                            description: Name is the name of the test.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - interval
              type: object
              x-kubernetes-validations:
                - message: either chart or chartRef must be set
                  rule: (has(self.chart) && !has(self.chartRef)) || (!has(self.chart) && has(self.chartRef))
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: |-
                    LastAppliedRevision is the revision of the last successfully applied
                    source.
                    Deprecated: the revision can now be found in the History.
                  type: string
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.
                  enum:
                    - install
                    - upgrade
                  type: string
                lastAttemptedRevision:
                  description: |-
                    LastAttemptedRevision is the Source revision of the last reconciliation
                    attempt. For OCIRepository  sources, the 12 first characters of the digest are
                    appended to the chart version e.g. "1.2.3+1234567890ab".
                  type: string
                lastAttemptedRevisionDigest:
                  description: |-
                    LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
                    This is only set for OCIRepository sources.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum for the values of the last
                    reconciliation attempt.
                    Deprecated: Use LastAttemptedConfigDigest instead.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastReleaseRevision:
                  description: |-
                    LastReleaseRevision is the revision of the last successful Helm release.
                    Deprecated: Use History instead.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.
                  maxLength: 63
                  minLength: 1
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: helmrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    shortNames:
      - helmrepo
    singular: helmrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                HelmRepositorySpec specifies the required configuration to produce an
                Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    It takes precedence over the values specified in the Secret referred
                    to by `.spec.secretRef`.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                insecure:
                  description: |-
                    Insecure allows connecting to a non-TLS HTTP container registry.
                    This field is only taken into account if the .spec.type field is set to 'oci'.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed
                    on to a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the
                    index differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result
                    in credentials getting stolen in a MITM-attack.
                  type: boolean
                provider:
                  default: generic
                  description: |-
                    Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    This field is optional, and only taken into account if the .spec.type field is set to 'oci'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the HelmRepository.
                    For HTTP/S basic auth the secret must contain 'username' and 'password'
                    fields.
                    Support for TLS auth using the 'certFile' and 'keyFile', and/or 'caFile'
                    keys is deprecated. Please use `.spec.certSecretRef` instead.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    HelmRepository.
                  type: boolean
                timeout:
                  description: |-
                    Timeout is used for the index fetch operation for an HTTPS helm repository,
                    and for remote OCI Repository operations like pulling for an OCI helm
                    chart by the associated HelmChart.
                    Its default value is 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: |-
                    Type of the HelmRepository.
                    When this field is set to  "oci", the URL field value must be prefixed with "oci://".
                  enum:
                    - default
                    - oci
                  type: string
                url:
                  description: |-
                    URL of the Helm repository, a valid URL contains at least a protocol and
                    host.
                  pattern: ^(http|https|oci)://.*$
                  type: string
              required:
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmRepository
                    object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 HelmRepository is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec defines the reference to a Helm repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                interval:
                  description: The interval at which to check the upstream for updates.
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed on to
                    a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the index
                    differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result in
                    credentials getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: |-
                    The name of the secret containing authentication credentials for the Helm
                    repository.
                    For HTTP/S basic auth the secret must contain username and
                    password fields.
                    For TLS the secret must contain a certFile and keyFile, and/or
                    caFile fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout of index downloading, defaults to 60s.
                  type: string
                url:
                  description: The Helm repository URL, a valid URL contains at least a protocol and host.
                  type: string
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus defines the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last index fetched.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 HelmRepository is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                HelmRepositorySpec specifies the required configuration to produce an
                Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    It takes precedence over the values specified in the Secret referred
                    to by `.spec.secretRef`.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                insecure:
                  description: |-
                    Insecure allows connecting to a non-TLS HTTP container registry.
                    This field is only taken into account if the .spec.type field is set to 'oci'.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed
                    on to a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the
                    index differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result
                    in credentials getting stolen in a MITM-attack.
                  type: boolean
                provider:
                  default: generic
                  description: |-
                    Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    This field is optional, and only taken into account if the .spec.type field is set to 'oci'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the HelmRepository.
                    For HTTP/S basic auth the secret must contain 'username' and 'password'
                    fields.
                    Support for TLS auth using the 'certFile' and 'keyFile', and/or 'caFile'
                    keys is deprecated. Please use `.spec.certSecretRef` instead.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    HelmRepository.
                  type: boolean
                timeout:
                  description: |-
                    Timeout is used for the index fetch operation for an HTTPS helm repository,
                    and for remote OCI Repository operations like pulling for an OCI helm
                    chart by the associated HelmChart.
                    Its default value is 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: |-
                    Type of the HelmRepository.
                    When this field is set to  "oci", the URL field value must be prefixed with "oci://".
                  enum:
                    - default
                    - oci
                  type: string
                url:
                  description: |-
                    URL of the Helm repository, a valid URL contains at least a protocol and
                    host.
                  pattern: ^(http|https|oci)://.*$
                  type: string
              required:
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmRepository
                    object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: imageconfigs.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
    kind: ImageConfig
    listKind: ImageConfigList
    plural: imageconfigs
    singular: imageconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: The ImageConfig resource is used to configure settings for package images.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageConfigSpec contains the configuration for matching images.
              properties:
                matchImages:
                  description: |-
                    MatchImages is a list of image matching rules. This ImageConfig will
                    match an image if any one of these rules is satisfied. In the case where
                    multiple ImageConfigs match an image for a given purpose the one with the
                    most specific match will be used. If multiple rules of equal specificity
                    match an arbitrary one will be selected.
                  items:
                    description: ImageMatch defines a rule for matching image.
                    properties:
                      prefix:
                        description: |-
                          Prefix is the prefix that should be matched. When multiple prefix rules
                          match an image path, the longest one takes precedence.
                        type: string
                      type:
                        default: Prefix
                        description: Type is the type of match.
                        enum:
                          - Prefix
                        type: string
                    required:
                      - prefix
                    type: object
                  type: array
                  x-kubernetes-validations:
                    - message: matchImages should have at least one element.
                      rule: size(self) > 0
                registry:
                  description: Registry is the configuration for the registry.
                  properties:
                    authentication:
                      description: Authentication is the authentication information for the registry.
                      properties:
                        pullSecretRef:
                          description: |-
                            PullSecretRef is a reference to a secret that contains the credentials for
                            the registry.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - pullSecretRef
                      type: object
                  type: object
                rewriteImage:
                  description: RewriteImage defines how a matched image's path should be rewritten.
                  properties:
                    prefix:
                      description: |-
                        Prefix is the prefix that will replace the portion of the image's path
                        matched by the prefix in the ImageMatch. If multiple prefixes matched,
                        the longest one will be replaced.
                      type: string
                  required:
                    - prefix
                  type: object
                verification:
                  description: Verification contains the configuration for verifying the image.
                  properties:
                    cosign:
                      description: Cosign is the configuration for verifying the image using cosign.
                      properties:
                        authorities:
                          description: Authorities defines the rules for discovering and validating signatures.
                          items:
                            description: CosignAuthority defines the rules for discovering and validating signatures.
                            properties:
                              attestations:
                                description: |-
                                  Attestations is a list of individual attestations for this authority,
                                  once the signature for this authority has been verified.
                                items:
                                  description: |-
                                    Attestation defines the type of attestation to validate and optionally
                                    apply a policy decision to it. Authority block is used to verify the
                                    specified attestation types, and if Policy is specified, then it's applied
                                    only after the validation of the Attestation signature has been verified.
                                  properties:
                                    name:
                                      description: Name of the attestation.
                                      type: string
                                    predicateType:
                                      description: |-
                                        PredicateType defines which predicate type to verify. Matches cosign
                                        verify-attestation options.
                                      type: string
                                  required:
                                    - name
                                    - predicateType
                                  type: object
                                type: array
                              key:
                                description: Key defines the type of key to validate the image.
                                properties:
                                  hashAlgorithm:
                                    default: sha256
                                    description: HashAlgorithm always defaults to sha256 if the algorithm hasn't been explicitly set
                                    type: string
                                  secretRef:
                                    description: SecretRef sets a reference to a secret with the key.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: Name of the secret.
                                        type: string
                                    required:
                                      - key
                                      - name
                                    type: object
                                required:
                                  - hashAlgorithm
                                  - secretRef
                                type: object
                              keyless:
                                description: |-
                                  Keyless sets the configuration to verify the authority against a Fulcio
                                  instance.
                                properties:
                                  identities:
                                    description: Identities sets a list of identities.
                                    items:
                                      description: |-
                                        Identity may contain the issuer and/or the subject found in the transparency
                                        log.
                                        Issuer/Subject uses a strict match, while IssuerRegExp and SubjectRegExp
                                        apply a regexp for matching.
                                      properties:
                                        issuer:
                                          description: Issuer defines the issuer for this identity.
                                          type: string
                                        issuerRegExp:
                                          description: |-
                                            IssuerRegExp specifies a regular expression to match the issuer for this identity.
                                            This has precedence over the Issuer field.
                                          type: string
                                        subject:
                                          description: Subject defines the subject for this identity.
                                          type: string
                                        subjectRegExp:
                                          description: |-
                                            SubjectRegExp specifies a regular expression to match the subject for this identity.
                                            This has precedence over the Subject field.
                                          type: string
                                      type: object
                                    type: array
                                  insecureIgnoreSCT:
                                    description: InsecureIgnoreSCT omits verifying if a certificate contains an embedded SCT
                                    type: boolean
                                required:
                                  - identities
                                type: object
                              name:
                                description: Name is the name for this authority.
                                type: string
                            required:
                              - name
                            type: object
                          type: array
                      required:
                        - authorities
                      type: object
                    provider:
                      description: Provider is the provider that should be used to verify the image.
                      enum:
                        - Cosign
                      type: string
                  required:
                    - provider
                  type: object
              required:
                - matchImages
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-reflector-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: imagepolicies.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImagePolicy
    listKind: ImagePolicyList
    plural: imagepolicies
    singular: imagepolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImagePolicySpec defines the parameters for calculating the
                ImagePolicy
              properties:
                filterTags:
                  description: |-
                    FilterTags enables filtering for only a subset of tags based on a set of
                    rules. If no rules are provided, all the tags from the repository will be
                    ordered and compared.
                  properties:
                    extract:
                      description: |-
                        Extract allows a capture group to be extracted from the specified regular
                        expression pattern, useful before tag evaluation.
                      type: string
                    pattern:
                      description: |-
                        Pattern specifies a regular expression pattern used to filter for image
                        tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: |-
                    ImageRepositoryRef points at the object specifying the image
                    being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                      type: string
                  required:
                    - name
                  type: object
                policy:
                  description: |-
                    Policy gives the particulars of the policy to be followed in
                    selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the letters of the
                            alphabet as tags, ascending order would select Z, and descending order
                            would select A.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the integer values
                            from 0 to 9 as tags, ascending order would select 9, and descending order
                            would select 0.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    semver:
                      description: |-
                        SemVer gives a semantic version range to check against the tags
                        available.
                      properties:
                        range:
                          description: |-
                            Range gives a semver range for the image tag; the highest
                            version within the range that's a tag yields the latest image.
                          type: string
                      required:
                        - range
                      type: object
                  type: object
              required:
                - imageRepositoryRef
                - policy
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                latestImage:
                  description: |-
                    LatestImage gives the first in the list of images scanned by
                    the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImagePolicySpec defines the parameters for calculating the
                ImagePolicy.
              properties:
                digestReflectionPolicy:
                  default: Never
                  description: |-
                    DigestReflectionPolicy governs the setting of the `.status.latestRef.digest` field.

                    Never: The digest field will always be set to the empty string.

                    IfNotPresent: The digest field will be set to the digest of the elected
                    latest image if the field is empty and the image did not change.

                    Always: The digest field will always be set to the digest of the elected
                    latest image.

                    Default: Never.
                  enum:
                    - Always
                    - IfNotPresent
                    - Never
                  type: string
                filterTags:
                  description: |-
                    FilterTags enables filtering for only a subset of tags based on a set of
                    rules. If no rules are provided, all the tags from the repository will be
                    ordered and compared.
                  properties:
                    extract:
                      description: |-
                        Extract allows a capture group to be extracted from the specified regular
                        expression pattern, useful before tag evaluation.
                      type: string
                    pattern:
                      description: |-
                        Pattern specifies a regular expression pattern used to filter for image
                        tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: |-
                    ImageRepositoryRef points at the object specifying the image
                    being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                      type: string
                  required:
                    - name
                  type: object
                interval:
                  description: |-
                    Interval is the length of time to wait between
                    refreshing the digest of the latest tag when the
                    reflection policy is set to "Always".

                    Defaults to 10m.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                policy:
                  description: |-
                    Policy gives the particulars of the policy to be followed in
                    selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the letters of the
                            alphabet as tags, ascending order would select Z, and descending order
                            would select A.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the integer values
                            from 0 to 9 as tags, ascending order would select 9, and descending order
                            would select 0.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    semver:
                      description: |-
                        SemVer gives a semantic version range to check against the tags
                        available.
                      properties:
                        range:
                          description: |-
                            Range gives a semver range for the image tag; the highest
                            version within the range that's a tag yields the latest image.
                          type: string
                      required:
                        - range
                      type: object
                  type: object
              required:
                - imageRepositoryRef
                - policy
              type: object
              x-kubernetes-validations:
                - message: spec.interval is only accepted when spec.digestReflectionPolicy is set to 'Always'
                  rule: '!has(self.interval) || (has(self.digestReflectionPolicy) && self.digestReflectionPolicy == ''Always'')'
                - message: spec.interval must be set when spec.digestReflectionPolicy is set to 'Always'
                  rule: has(self.interval) || !has(self.digestReflectionPolicy) || self.digestReflectionPolicy != 'Always'
            status:
              default:
                observedGeneration: -1
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                latestImage:
                  description: |-
                    LatestImage gives the first in the list of images scanned by
                    the image repository, when filtered and ordered according to
                    the policy.

                    Deprecated: Replaced by the composite "latestRef" field.
                  type: string
                latestRef:
                  description: |-
                    LatestRef gives the first in the list of images scanned by
                    the image repository, when filtered and ordered according
                    to the policy.
                  properties:
                    digest:
                      description: Digest is the image's digest.
                      type: string
                    name:
                      description: Name is the bare image's name.
                      type: string
                    tag:
                      description: Tag is the image's tag.
                      type: string
                  required:
                    - name
                    - tag
                  type: object
                observedGeneration:
                  format: int64
                  type: integer
                observedPreviousImage:
                  description: |-
                    ObservedPreviousImage is the observed previous LatestImage. It is used
                    to keep track of the previous and current images.

                    Deprecated: Replaced by the composite "observedPreviousRef" field.
                  type: string
                observedPreviousRef:
                  description: |-
                    ObservedPreviousRef is the observed previous LatestRef. It is used
                    to keep track of the previous and current images.
                  properties:
                    digest:
                      description: Digest is the image's digest.
                      type: string
                    name:
                      description: Name is the bare image's name.
                      type: string
                    tag:
                      description: Tag is the image's tag.
                      type: string
                  required:
                    - name
                    - tag
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-reflector-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: imagerepositories.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImageRepository
    listKind: ImageRepositoryList
    plural: imagerepositories
    singular: imagerepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.lastScanResult.scanTime
          name: Last scan
          type: string
        - jsonPath: .status.lastScanResult.tagCount
          name: Tags
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImageRepositorySpec defines the parameters for scanning an image
                repository, e.g., `fluxcd/flux`.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom defines an ACL for allowing cross-namespace references
                    to the ImageRepository object based on the caller's namespace labels.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a secret containing
                    either or both of

                     - a PEM-encoded client certificate (`certFile`) and private
                     key (`keyFile`);
                     - a PEM-encoded CA certificate (`caFile`)

                     and whichever are supplied, will be used for connecting to the
                     registry. The client cert and key are useful if you are
                     authenticating with a certificate; the CA cert is useful if
                     you are using a self-signed server certificate.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                exclusionList:
                  description: |-
                    ExclusionList is a list of regex strings used to exclude certain tags
                    from being stored in the database.
                  items:
                    type: string
                  type: array
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: |-
                    Interval is the length of time to wait between
                    scans of the image repository.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                secretRef:
                  description: |-
                    SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the
                    equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets.
                  maxLength: 253
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent image scans.
                    It does not apply to already started scans. Defaults to false.
                  type: boolean
                timeout:
                  description: |-
                    Timeout for image scanning.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - image
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: |-
                    CanonicalName is the name of the image repository with all the
                    implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                    - tagCount
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.lastScanResult.scanTime
          name: Last scan
          type: string
        - jsonPath: .status.lastScanResult.tagCount
          name: Tags
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImageRepositorySpec defines the parameters for scanning an image
                repository, e.g., `fluxcd/flux`.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom defines an ACL for allowing cross-namespace references
                    to the ImageRepository object based on the caller's namespace labels.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    Note: Support for the `caFile`, `certFile` and `keyFile` keys has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                exclusionList:
                  default:
                    - ^.*\.sig$
                  description: |-
                    ExclusionList is a list of regex strings used to exclude certain tags
                    from being stored in the database.
                  items:
                    type: string
                  maxItems: 25
                  type: array
                image:
                  description: Image is the name of the image repository
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: |-
                    Interval is the length of time to wait between
                    scans of the image repository.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                provider:
                  default: generic
                  description: |-
                    The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the container registry.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                secretRef:
                  description: |-
                    SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the
                    equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets.
                  maxLength: 253
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent image scans.
                    It does not apply to already started scans. Defaults to false.
                  type: boolean
                timeout:
                  description: |-
                    Timeout for image scanning.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - image
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: |-
                    CanonicalName is the name of the image repository with all the
                    implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    latestTags:
                      items:
                        type: string
                      type: array
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                    - tagCount
                  type: object
                observedExclusionList:
                  description: |-
                    ObservedExclusionList is a list of observed exclusion list. It reflects
                    the exclusion rules used for the observed scan result in
                    spec.lastScanResult.
                  items:
                    type: string
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-automation-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: imageupdateautomations.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImageUpdateAutomation
    listKind: ImageUpdateAutomationList
    plural: imageupdateautomations
    singular: imageupdateautomation
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.lastAutomationRunTime
          name: Last run
          type: string
      deprecated: true
      deprecationWarning: v1beta1 ImageUpdateAutomation is deprecated, upgrade to v1beta2
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of ImageUpdateAutomation
              properties:
                git:
                  description: |-
                    GitSpec contains all the git-specific definitions. This is
                    technically optional, but in practice mandatory until there are
                    other kinds of source allowed.
                  properties:
                    checkout:
                      description: |-
                        Checkout gives the parameters for cloning the git repository,
                        ready to make changes. If not present, the `spec.ref` field from the
                        referenced `GitRepository` or its default will be used.
                      properties:
                        ref:
                          description: |-
                            Reference gives a branch, tag or commit to clone from the Git
                            repository.
                          properties:
                            branch:
                              description: Branch to check out, defaults to 'master' if no other field is defined.
                              type: string
                            commit:
                              description: |-
                                Commit SHA to check out, takes precedence over all reference fields.

                                This can be combined with Branch to shallow clone the branch, in which
                                the commit is expected to exist.
                              type: string
                            name:
                              description: |-
                                Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                                It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                                Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                              type: string
                            semver:
                              description: SemVer tag expression to check out, takes precedence over Tag.
                              type: string
                            tag:
                              description: Tag to check out, takes precedence over Branch.
                              type: string
                          type: object
                      required:
                        - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: |-
                            Author gives the email and optionally the name to use as the
                            author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making a commit.
                              type: string
                          required:
                            - email
                          type: object
                        messageTemplate:
                          description: |-
                            MessageTemplate provides a template for the commit message,
                            into which will be interpolated the details of the change made.
                          type: string
                        signingKey:
                          description: SigningKey provides the option to sign commits with a GPG key
                          properties:
                            secretRef:
                              description: |-
                                SecretRef holds the name to a secret that contains a 'git.asc' key
                                corresponding to the ASCII Armored file containing the GPG signing
                                keypair as the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - secretRef
                          type: object
                      required:
                        - author
                      type: object
                    push:
                      description: |-
                        Push specifies how and where to push commits made by the
                        automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: |-
                            Branch specifies that commits should be pushed to the branch
                            named. The branch is created using `.spec.checkout.branch` as the
                            starting point, if it doesn't already exist.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: |-
                            Options specifies the push options that are sent to the Git
                            server when performing a push operation. For details, see:
                            https://git-scm.com/docs/git-push#Documentation/git-push.txt---push-optionltoptiongt
                          type: object
                        refspec:
                          description: |-
                            Refspec specifies the Git Refspec to use for a push operation.
                            If both Branch and Refspec are provided, then the commit is pushed
                            to the branch and also using the specified refspec.
                            For more details about Git Refspecs, see:
                            https://git-scm.com/book/en/v2/Git-Internals-The-Refspec
                          type: string
                      type: object
                  required:
                    - commit
                  type: object
                interval:
                  description: |-
                    Interval gives an lower bound for how often the automation
                    run should be attempted.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                sourceRef:
                  description: |-
                    SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent.
                      enum:
                        - GitRepository
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to not run this automation, until
                    it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: |-
                    Update gives the specification for how to update the files in
                    the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: |-
                        Path to the directory containing the manifests to be updated.
                        Defaults to 'None', which translates to the root path
                        of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                        - Setters
                      type: string
                  required:
                    - strategy
                  type: object
              required:
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageUpdateAutomationStatus defines the observed state of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: |-
                    LastAutomationRunTime records the last time the controller ran
                    this automation through to completion (even if no updates were
                    made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastPushCommit:
                  description: |-
                    LastPushCommit records the SHA1 of the last commit made by the
                    controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.lastAutomationRunTime
          name: Last run
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of ImageUpdateAutomation
              properties:
                git:
                  description: |-
                    GitSpec contains all the git-specific definitions. This is
                    technically optional, but in practice mandatory until there are
                    other kinds of source allowed.
                  properties:
                    checkout:
                      description: |-
                        Checkout gives the parameters for cloning the git repository,
                        ready to make changes. If not present, the `spec.ref` field from the
                        referenced `GitRepository` or its default will be used.
                      properties:
                        ref:
                          description: |-
                            Reference gives a branch, tag or commit to clone from the Git
                            repository.
                          properties:
                            branch:
                              description: Branch to check out, defaults to 'master' if no other field is defined.
                              type: string
                            commit:
                              description: |-
                                Commit SHA to check out, takes precedence over all reference fields.

                                This can be combined with Branch to shallow clone the branch, in which
                                the commit is expected to exist.
                              type: string
                            name:
                              description: |-
                                Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                                It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                                Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                              type: string
                            semver:
                              description: SemVer tag expression to check out, takes precedence over Tag.
                              type: string
                            tag:
                              description: Tag to check out, takes precedence over Branch.
                              type: string
                          type: object
                      required:
                        - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: |-
                            Author gives the email and optionally the name to use as the
                            author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making a commit.
                              type: string
                          required:
                            - email
                          type: object
                        messageTemplate:
                          description: |-
                            MessageTemplate provides a template for the commit message,
                            into which will be interpolated the details of the change made.
                          type: string
                        messageTemplateValues:
                          additionalProperties:
                            type: string
                          description: |-
                            MessageTemplateValues provides additional values to be available to the
                            templating rendering.
                          type: object
                        signingKey:
                          description: SigningKey provides the option to sign commits with a GPG key
                          properties:
                            secretRef:
                              description: |-
                                SecretRef holds the name to a secret that contains a 'git.asc' key
                                corresponding to the ASCII Armored file containing the GPG signing
                                keypair as the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - secretRef
                          type: object
                      required:
                        - author
                      type: object
                    push:
                      description: |-
                        Push specifies how and where to push commits made by the
                        automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: |-
                            Branch specifies that commits should be pushed to the branch
                            named. The branch is created using `.spec.checkout.branch` as the
                            starting point, if it doesn't already exist.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: |-
                            Options specifies the push options that are sent to the Git
                            server when performing a push operation. For details, see:
                            https://git-scm.com/docs/git-push#Documentation/git-push.txt---push-optionltoptiongt
                          type: object
                        refspec:
                          description: |-
                            Refspec specifies the Git Refspec to use for a push operation.
                            If both Branch and Refspec are provided, then the commit is pushed
                            to the branch and also using the specified refspec.
                            For more details about Git Refspecs, see:
                            https://git-scm.com/book/en/v2/Git-Internals-The-Refspec
                          type: string
                      type: object
                  required:
                    - commit
                  type: object
                interval:
                  description: |-
                    Interval gives an lower bound for how often the automation
                    run should be attempted.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                policySelector:
                  description: |-
                    PolicySelector allows to filter applied policies based on labels.
                    By default includes all policies in namespace.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                sourceRef:
                  description: |-
                    SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent.
                      enum:
                        - GitRepository
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to not run this automation, until
                    it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: |-
                    Update gives the specification for how to update the files in
                    the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: |-
                        Path to the directory containing the manifests to be updated.
                        Defaults to 'None', which translates to the root path
                        of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                        - Setters
                      type: string
                  required:
                    - strategy
                  type: object
              required:
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageUpdateAutomationStatus defines the observed state of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: |-
                    LastAutomationRunTime records the last time the controller ran
                    this automation through to completion (even if no updates were
                    made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastPushCommit:
                  description: |-
                    LastPushCommit records the SHA1 of the last commit made by the
                    controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                observedPolicies:
                  additionalProperties:
                    description: ImageRef represents an image reference.
                    properties:
                      digest:
                        description: Digest is the image's digest.
                        type: string
                      name:
                        description: Name is the bare image's name.
                        type: string
                      tag:
                        description: Tag is the image's tag.
                        type: string
                    required:
                      - name
                      - tag
                    type: object
                  description: |-
                    ObservedPolicies is the list of observed ImagePolicies that were
                    considered by the ImageUpdateAutomation update process.
                  type: object
                observedSourceRevision:
                  description: |-
                    ObservedPolicies []ObservedPolicy `json:"observedPolicies,omitempty"`
                    ObservedSourceRevision is the last observed source revision. This can be
                    used to determine if the source has been updated since last observation.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: kustomize-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: kustomizations.kustomize.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
      - ks
    singular: kustomization
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                KustomizationSpec defines the configuration to calculate the desired state
                from a Source using Kustomize.
              properties:
                commonMetadata:
                  description: |-
                    CommonMetadata specifies the common labels and annotations that are
                    applied to all resources. Any existing label or annotation will be
                    overridden if its key matches a common one.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations to be added to the object's metadata.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to be added to the object's metadata.
                      type: object
                  type: object
                components:
                  description: Components specifies relative paths to specifications of other Components.
                  items:
                    type: string
                  type: array
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: |-
                        The secret name containing the private OpenPGP keys used for decryption.
                        A static credential for a cloud provider defined inside the Secret
                        takes priority to secret-less authentication with the ServiceAccountName
                        field.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    serviceAccountName:
                      description: |-
                        ServiceAccountName is the name of the service account used to
                        authenticate with KMS services from cloud providers. If a
                        static credential for a given cloud provider is defined
                        inside the Secret referenced by SecretRef, that static
                        credential takes priority.
                      type: string
                  required:
                    - provider
                  type: object
                deletionPolicy:
                  description: |-
                    DeletionPolicy can be used to control garbage collection when this
                    Kustomization is deleted. Valid values are ('MirrorPrune', 'Delete',
                    'WaitForTermination', 'Orphan'). 'MirrorPrune' mirrors the Prune field
                    (orphan if false, delete if true). Defaults to 'MirrorPrune'.
                  enum:
                    - MirrorPrune
                    - Delete
                    - WaitForTermination
                    - Orphan
                  type: string
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthCheckExprs:
                  description: |-
                    HealthCheckExprs is a list of healthcheck expressions for evaluating the
                    health of custom resources using Common Expression Language (CEL).
                    The expressions are evaluated only when Wait or HealthChecks are specified.
                  items:
                    description: CustomHealthCheck defines the health check for custom resources.
                    properties:
                      apiVersion:
                        description: APIVersion of the custom resource under evaluation.
                        type: string
                      current:
                        description: |-
                          Current is the CEL expression that determines if the status
                          of the custom resource has reached the desired state.
                        type: string
                      failed:
                        description: |-
                          Failed is the CEL expression that determines if the status
                          of the custom resource has failed to reach the desired state.
                        type: string
                      inProgress:
                        description: |-
                          InProgress is the CEL expression that determines if the status
                          of the custom resource has not yet reached the desired state.
                        type: string
                      kind:
                        description: Kind of the custom resource under evaluation.
                        type: string
                    required:
                      - apiVersion
                      - current
                      - kind
                    type: object
                  type: array
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: |-
                    The interval at which to reconcile the Kustomization.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When used in combination with KustomizationSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when KustomizationSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                namePrefix:
                  description: NamePrefix will prefix the names of all managed resources.
                  maxLength: 200
                  minLength: 1
                  type: string
                nameSuffix:
                  description: NameSuffix will suffix the names of all managed resources.
                  maxLength: 200
                  minLength: 1
                  type: string
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests that match any of the keys
                        defined in the map will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names, and they
                        must match the vars declared in the manifests for the substitution to
                        happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates whether the referenced resource must exist, or whether to
                              tolerate its absence. If true and the referenced resource is absent, proceed
                              as if the resource was present but empty, without any variables defined.
                            type: boolean
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                wait:
                  description: |-
                    Wait instructs the controller to check the health of all the reconciled
                    resources. When enabled, the HealthChecks are ignored. Defaults to false.
                  type: boolean
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                inventory:
                  description: |-
                    Inventory contains the list of Kubernetes resource object references that
                    have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary to locate a resource within a cluster.
                        properties:
                          id:
                            description: |-
                              ID is the string representation of the Kubernetes resource object's metadata,
                              in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes resource object's kind.
                            type: string
                        required:
                          - id
                          - v
                        type: object
                      type: array
                  required:
                    - entries
                  type: object
                lastAppliedOriginRevision:
                  description: |-
                    The last successfully applied origin revision.
                    Equals the origin revision of the applied Artifact from the referenced Source.
                    Usually present on the Metadata of the applied Artifact and depends on the
                    Source type, e.g. for OCI it's the value associated with the key
                    "org.opencontainers.image.revision".
                  type: string
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    Equals the Revision of the applied Artifact from the referenced Source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 Kustomization is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When specified, KubeConfig takes precedence over ServiceAccountName.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name to a secret that contains a 'value' key with
                        the kubeconfig file as the value. It must be in the same namespace as
                        the Kustomization.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        the Kustomization.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                patchesJson6902:
                  description: JSON 6902 patches, defined as inline YAML objects.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: |-
                            JSON6902 is a JSON6902 operation object.
                            https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: |-
                                From contains a JSON-pointer value that references a location within the target document where the operation is
                                performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: |-
                                Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                "test".
                                https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: |-
                                Path contains the JSON-pointer value that references a location within the target document where the operation
                                is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: |-
                                Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: Strategic merge patches, defined as inline YAML objects.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests
                        that match any of the keys defined in the map
                        will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names and they
                        must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization namespace
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: |-
                    Validate the Kubernetes objects before applying them on the cluster.
                    The validation strategy can be 'client' (local dry-run), 'server'
                    (APIServer dry-run) or 'none'.
                    When 'Force' is 'true', validation will fallback to 'client' if set to
                    'server' because server-side validation is not supported in this scenario.
                  enum:
                    - none
                    - client
                    - server
                  type: string
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    The revision format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: |-
                          Snapshot holds the metadata of namespaced
                          Kubernetes objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                          - kinds
                        type: object
                      type: array
                  required:
                    - checksum
                    - entries
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Kustomization is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the configuration to calculate the desired state from a Source using Kustomize.
              properties:
                commonMetadata:
                  description: |-
                    CommonMetadata specifies the common labels and annotations that are applied to all resources.
                    Any existing label or annotation will be overridden if its key matches a common one.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations to be added to the object's metadata.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to be added to the object's metadata.
                      type: object
                  type: object
                components:
                  description: Components specifies relative paths to specifications of other Components.
                  items:
                    type: string
                  type: array
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When used in combination with KustomizationSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when KustomizationSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                patchesJson6902:
                  description: |-
                    JSON 6902 patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: |-
                            JSON6902 is a JSON6902 operation object.
                            https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: |-
                                From contains a JSON-pointer value that references a location within the target document where the operation is
                                performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: |-
                                Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                "test".
                                https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: |-
                                Path contains the JSON-pointer value that references a location within the target document where the operation
                                is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: |-
                                Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: |-
                    Strategic merge patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests
                        that match any of the keys defined in the map
                        will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names and they
                        must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates whether the referenced resource must exist, or whether to
                              tolerate its absence. If true and the referenced resource is absent, proceed
                              as if the resource was present but empty, without any variables defined.
                            type: boolean
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                validation:
                  description: 'Deprecated: Not used in v1beta2.'
                  enum:
                    - none
                    - client
                    - server
                  type: string
                wait:
                  description: |-
                    Wait instructs the controller to check the health of all the reconciled resources.
                    When enabled, the HealthChecks are ignored. Defaults to false.
                  type: boolean
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                inventory:
                  description: Inventory contains the list of Kubernetes resource object references that have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary to locate a resource within a cluster.
                        properties:
                          id:
                            description: |-
                              ID is the string representation of the Kubernetes resource object's metadata,
                              in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes resource object's kind.
                            type: string
                        required:
                          - id
                          - v
                        type: object
                      type: array
                  required:
                    - entries
                  type: object
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    Equals the Revision of the applied Artifact from the referenced Source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: locks.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    kind: Lock
    listKind: LockList
    plural: locks
    singular: lock
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Lock is the CRD type that tracks package dependencies.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            packages:
              items:
                description: LockPackage is a package that is in the lock.
                properties:
                  apiVersion:
                    description: APIVersion of the package.
                    type: string
                  dependencies:
                    description: |-
                      Dependencies are the list of dependencies of this package. The order of
                      the dependencies will dictate the order in which they are resolved.
                    items:
                      description: A Dependency is a dependency of a package in the lock.
                      properties:
                        apiVersion:
                          description: APIVersion of the package.
                          type: string
                        constraints:
                          description: |-
                            Constraints is a valid semver range or a digest, which will be used to select a valid
                            dependency version.
                          type: string
                        kind:
                          description: Kind of the package (not the kind of the package revision).
                          type: string
                        package:
                          description: Package is the OCI image name without a tag or digest.
                          type: string
                        type:
                          description: |-
                            Type is the type of package. Can be either Configuration or Provider.
                            Deprecated: Specify an apiVersion and kind instead.
                          enum:
                            - Configuration
                            - Provider
                            - Function
                          type: string
                      required:
                        - constraints
                        - package
                      type: object
                    type: array
                  kind:
                    description: Kind of the package (not the kind of the package revision).
                    type: string
                  name:
                    description: Name corresponds to the name of the package revision for this package.
                    type: string
                  source:
                    description: Source is the OCI image name without a tag or digest.
                    type: string
                  type:
                    description: |-
                      Type is the type of package.
                      Deprecated: Specify an apiVersion and kind instead.
                    enum:
                      - Configuration
                      - Provider
                      - Function
                    type: string
                  version:
                    description: Version is the tag or digest of the OCI image.
                    type: string
                required:
                  - dependencies
                  - name
                  - source
                  - version
                type: object
              type: array
            status:
              description: Status of the Lock.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: managedresourceactivationpolicies.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: ManagedResourceActivationPolicy
    listKind: ManagedResourceActivationPolicyList
    plural: managedresourceactivationpolicies
    shortNames:
      - mrap
    singular: managedresourceactivationpolicy
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: A ManagedResourceActivationPolicy defines the activation policy for ManagedResourceDefinitions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ManagedResourceActivationPolicySpec specifies the desired activation state of ManagedResourceDefinitions.
              properties:
                activate:
                  description: |-
                    Activations is an array of MRD names to activate. Supports wildcard
                    prefixes (like `*.aws.crossplane.io`) but not full regular expressions.
                  items:
                    description: ActivationPolicy matches on MRD names with wildcard prefix support.
                    type: string
                  minItems: 1
                  type: array
              required:
                - activate
              type: object
            status:
              description: ManagedResourceActivationPolicyStatus shows the observed state of the policy.
              properties:
                activated:
                  description: Activated names the ManagedResourceDefinitions this policy has activated.
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: managedresourcedefinitions.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: ManagedResourceDefinition
    listKind: ManagedResourceDefinitionList
    plural: managedresourcedefinitions
    shortNames:
      - mrd
      - mrds
    singular: managedresourcedefinition
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.state
          name: STATE
          type: string
        - jsonPath: .status.conditions[?(@.type=='Established')].status
          name: ESTABLISHED
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: A ManagedResourceDefinition defines the schema for a new custom Kubernetes API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ManagedResourceDefinitionSpec specifies the desired state of the resource definition.
              properties:
                connectionDetails:
                  description: ConnectionDetails is an array of connection detail keys and descriptions.
                  items:
                    description: ConnectionDetail holds keys and descriptions of connection secrets.
                    properties:
                      description:
                        description: Description of how the key is used.
                        type: string
                      name:
                        description: Name of the key.
                        type: string
                    required:
                      - description
                      - name
                    type: object
                  type: array
                conversion:
                  description: Conversion defines conversion settings for the CRD.
                  properties:
                    strategy:
                      description: |-
                        strategy specifies how custom resources are converted between versions. Allowed values are:
                        - `"None"`: The converter only change the apiVersion and would not touch any other field in the custom resource.
                        - `"Webhook"`: API Server will call to an external webhook to do the conversion. Additional information
                          is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
                      type: string
                    webhook:
                      description: webhook describes how to call the conversion webhook. Required when `strategy` is set to `"Webhook"`.
                      properties:
                        clientConfig:
                          description: clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
                          properties:
                            caBundle:
                              description: |-
                                caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                                If unspecified, system trust roots on the apiserver are used.
                              format: byte
                              type: string
                            service:
                              description: |-
                                service is a reference to the service for this webhook. Either
                                service or url must be specified.

                                If the webhook is running within the cluster, then you should use `service`.
                              properties:
                                name:
                                  description: |-
                                    name is the name of the service.
                                    Required
                                  type: string
                                namespace:
                                  description: |-
                                    namespace is the namespace of the service.
                                    Required
                                  type: string
                                path:
                                  description: path is an optional URL path at which the webhook will be contacted.
                                  type: string
                                port:
                                  description: |-
                                    port is an optional service port at which the webhook will be contacted.
                                    `port` should be a valid port number (1-65535, inclusive).
                                    Defaults to 443 for backward compatibility.
                                  format: int32
                                  type: integer
                              required:
                                - name
                                - namespace
                              type: object
                            url:
                              description: |-
                                url gives the location of the webhook, in standard URL form
                                (`scheme://host:port/path`). Exactly one of `url` or `service`
                                must be specified.

                                The `host` should not refer to a service running in the cluster; use
                                the `service` field instead. The host might be resolved via external
                                DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                                in-cluster DNS as that would be a layering violation). `host` may
                                also be an IP address.

                                Please note that using `localhost` or `127.0.0.1` as a `host` is
                                risky unless you take great care to run this webhook on all hosts
                                which run an apiserver which might need to make calls to this
                                webhook. Such installs are likely to be non-portable, i.e., not easy
                                to turn up in a new cluster.

                                The scheme must be "https"; the URL must begin with "https://".

                                A path is optional, and if present may be any string permissible in
                                a URL. You may use the path to pass an arbitrary string to the
                                webhook, for example, a cluster identifier.

                                Attempting to use a user or basic auth e.g. "user:password@" is not
                                allowed. Fragments ("#...") and query parameters ("?...") are not
                                allowed, either.
                              type: string
                          type: object
                        conversionReviewVersions:
                          description: |-
                            conversionReviewVersions is an ordered list of preferred `ConversionReview`
                            versions the Webhook expects. The API server will use the first version in
                            the list which it supports. If none of the versions specified in this list
                            are supported by API server, conversion will fail for the custom resource.
                            If a persisted Webhook configuration specifies allowed versions and does not
                            include any versions known to the API Server, calls to the webhook will fail.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                        - conversionReviewVersions
                      type: object
                  required:
                    - strategy
                  type: object
                group:
                  description: |-
                    Group is the API group of the defined custom resource.
                    The custom resources are served under `/apis/<group>/...`.
                    Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                names:
                  description: Names specify the resource and kind names for the custom resource.
                  properties:
                    categories:
                      description: |-
                        categories is a list of grouped resources this custom resource belongs to (e.g. 'all').
                        This is published in API discovery documents, and used by clients to support invocations like
                        `kubectl get all`.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    kind:
                      description: |-
                        kind is the serialized kind of the resource. It is normally CamelCase and singular.
                        Custom resource instances will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: |-
                        plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                        Must be all lowercase.
                      type: string
                    shortNames:
                      description: |-
                        shortNames are short names for the resource, exposed in API discovery documents,
                        and used by clients to support invocations like `kubectl get <shortname>`.
                        It must be all lowercase.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    singular:
                      description: singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                    - kind
                    - plural
                  type: object
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                    - message: Plural name must be lowercase
                      rule: self.plural == self.plural.lowerAscii()
                    - message: Singular name must be lowercase
                      rule: '!has(self.singular) || self.singular == self.singular.lowerAscii()'
                preserveUnknownFields:
                  description: |-
                    PreserveUnknownFields indicates that object fields which are not specified
                    in the OpenAPI schema should be preserved when persisting to storage.
                    apiVersion, kind, metadata and known fields inside metadata are always preserved.
                    This field is deprecated in favor of setting `x-preserve-unknown-fields` to true in `spec.versions[*].schema.openAPIV3Schema`.
                    See https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#field-pruning for details.
                  type: boolean
                scope:
                  default: Namespaced
                  description: |-
                    Scope indicates whether the defined custom resource is cluster- or namespace-scoped.
                    Allowed values are `Cluster` and `Namespaced`.
                  enum:
                    - Namespaced
                    - Cluster
                  type: string
                  x-kubernetes-validations:
                    - message: Value is immutable
                      rule: self == oldSelf
                state:
                  default: Inactive
                  description: State toggles whether the underlying CRD is created or not.
                  enum:
                    - Active
                    - Inactive
                  type: string
                  x-kubernetes-validations:
                    - message: state cannot be changed once it becomes Active
                      rule: self == oldSelf || oldSelf != 'Active'
                versions:
                  description: |-
                    Versions is the list of all API versions of the defined custom resource.
                    Version names are used to compute the order in which served versions are listed in API discovery.
                    If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered
                    lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version),
                    then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first
                    by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing
                    major version, then minor version. An example sorted list of versions:
                    v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
                  items:
                    description: CustomResourceDefinitionVersion describes a version for CRD.
                    properties:
                      additionalPrinterColumns:
                        description: |-
                          AdditionalPrinterColumns specifies additional columns returned in Table output.
                          See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details.
                          If no columns are specified, a single column displaying the age of the custom resource is used.
                        items:
                          description: CustomResourceColumnDefinition specifies a column for server side printing.
                          properties:
                            description:
                              description: description is a human readable description of this column.
                              type: string
                            format:
                              description: |-
                                format is an optional OpenAPI type definition for this column. The 'name' format is applied
                                to the primary identifier column to assist in clients identifying column is the resource name.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                            jsonPath:
                              description: |-
                                jsonPath is a simple JSON path (i.e. with array notation) which is evaluated against
                                each custom resource to produce the value for this column.
                              type: string
                            name:
                              description: name is a human readable name for the column.
                              type: string
                            priority:
                              description: |-
                                priority is an integer defining the relative importance of this column compared to others. Lower
                                numbers are considered higher priority. Columns that may be omitted in limited space scenarios
                                should be given a priority greater than 0.
                              format: int32
                              type: integer
                            type:
                              description: |-
                                type is an OpenAPI type definition for this column.
                                See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
                              type: string
                          required:
                            - jsonPath
                            - name
                            - type
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      deprecated:
                        description: |-
                          Deprecated indicates this version of the custom resource API is deprecated.
                          When set to true, API requests to this version receive a warning header in the server response.
                          Defaults to false.
                        type: boolean
                      deprecationWarning:
                        description: |-
                          DeprecationWarning overrides the default warning returned to API clients.
                          May only be set when `deprecated` is true.
                          The default warning indicates this version is deprecated and recommends use
                          of the newest served version of equal or greater stability, if one exists.
                        type: string
                      name:
                        description: |-
                          Name is the version name, e.g. “v1”, “v2beta1”, etc.
                          The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
                        type: string
                      schema:
                        description: Schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
                        properties:
                          openAPIV3Schema:
                            description: |-
                              OpenAPIV3Schema is the OpenAPI v3 schema to use for validation and
                              pruning.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      selectableFields:
                        description: |-
                          SelectableFields specifies paths to fields that may be used as field selectors.
                          A maximum of 8 selectable fields are allowed.
                          See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
                        items:
                          description: SelectableField specifies the JSON path of a field that may be used with field selectors.
                          properties:
                            jsonPath:
                              description: |-
                                jsonPath is a simple JSON path which is evaluated against each custom resource to produce a
                                field selector value.
                                Only JSON paths without the array notation are allowed.
                                Must point to a field of type string, boolean or integer. Types with enum values
                                and strings with formats are allowed.
                                If jsonPath refers to absent field in a resource, the jsonPath evaluates to an empty string.
                                Must not point to metdata fields.
                                Required.
                              type: string
                          required:
                            - jsonPath
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      served:
                        description: Served is a flag enabling/disabling this version from being served via REST APIs
                        type: boolean
                      storage:
                        description: |-
                          Storage indicates this version should be used when persisting custom resources to storage.
                          There must be exactly one version with storage=true.
                        type: boolean
                      subresources:
                        description: Subresources specify what subresources this version of the defined custom resource have.
                        properties:
                          scale:
                            description: scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
                            properties:
                              labelSelectorPath:
                                description: |-
                                  labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`.
                                  Only JSON paths without the array notation are allowed.
                                  Must be a JSON Path under `.status` or `.spec`.
                                  Must be set to work with HorizontalPodAutoscaler.
                                  The field pointed by this JSON path must be a string field (not a complex selector struct)
                                  which contains a serialized label selector in string form.
                                  More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                  If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale`
                                  subresource will default to the empty string.
                                type: string
                              specReplicasPath:
                                description: |-
                                  specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`.
                                  Only JSON paths without the array notation are allowed.
                                  Must be a JSON Path under `.spec`.
                                  If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
                                type: string
                              statusReplicasPath:
                                description: |-
                                  statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`.
                                  Only JSON paths without the array notation are allowed.
                                  Must be a JSON Path under `.status`.
                                  If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource
                                  will default to 0.
                                type: string
                            required:
                              - specReplicasPath
                              - statusReplicasPath
                            type: object
                          status:
                            description: |-
                              status indicates the custom resource should serve a `/status` subresource.
                              When enabled:
                              1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object.
                              2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
                            type: object
                        type: object
                    required:
                      - name
                      - served
                      - storage
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              required:
                - group
                - names
                - scope
                - versions
              type: object
            status:
              description: ManagedResourceDefinitionStatus shows the observed state of the resource definition.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: ocirepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: OCIRepository
    listKind: OCIRepositoryList
    plural: ocirepositories
    shortNames:
      - ocirepo
    singular: ocirepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: OCIRepository is the Schema for the ocirepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OCIRepositorySpec defines the desired state of OCIRepository
              properties:
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the OCIRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                layerSelector:
                  description: |-
                    LayerSelector specifies which layer should be extracted from the OCI artifact.
                    When not specified, the first layer found in the artifact is selected.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                provider:
                  default: generic
                  description: |-
                    The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the container registry.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ref:
                  description: |-
                    The OCI reference to pull and monitor for changes,
                    defaults to the latest tag.
                  properties:
                    digest:
                      description: |-
                        Digest is the image digest to pull, takes precedence over SemVer.
                        The value should be in the format 'sha256:<HASH>'.
                      type: string
                    semver:
                      description: |-
                        SemVer is the range of tags to pull selecting the latest within
                        the range, takes precedence over Tag.
                      type: string
                    semverFilter:
                      description: SemverFilter is a regex pattern to filter the tags within the SemVer range.
                      type: string
                    tag:
                      description: Tag is the image tag to pull, defaults to latest.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef contains the secret name containing the registry login
                    credentials to resolve image metadata.
                    The secret must be of type kubernetes.io/dockerconfigjson.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets. For more information:
                    https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                  type: string
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote OCI Repository operations like pulling, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: |-
                    URL is a reference to an OCI artifact repository hosted
                    on a remote container registry.
                  pattern: ^oci://.*$
                  type: string
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: OCIRepositoryStatus defines the observed state of OCIRepository
              properties:
                artifact:
                  description: Artifact represents the output of the last successful OCI Repository sync.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the OCIRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedLayerSelector:
                  description: |-
                    ObservedLayerSelector is the observed layer selector used for constructing
                    the source artifact.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                url:
                  description: URL is the download link for the artifact output of the last OCI Repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta2 OCIRepository is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: OCIRepository is the Schema for the ocirepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OCIRepositorySpec defines the desired state of OCIRepository
              properties:
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    Note: Support for the `caFile`, `certFile` and `keyFile` keys have
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the OCIRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                layerSelector:
                  description: |-
                    LayerSelector specifies which layer should be extracted from the OCI artifact.
                    When not specified, the first layer found in the artifact is selected.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                provider:
                  default: generic
                  description: |-
                    The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the container registry.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ref:
                  description: |-
                    The OCI reference to pull and monitor for changes,
                    defaults to the latest tag.
                  properties:
                    digest:
                      description: |-
                        Digest is the image digest to pull, takes precedence over SemVer.
                        The value should be in the format 'sha256:<HASH>'.
                      type: string
                    semver:
                      description: |-
                        SemVer is the range of tags to pull selecting the latest within
                        the range, takes precedence over Tag.
                      type: string
                    semverFilter:
                      description: SemverFilter is a regex pattern to filter the tags within the SemVer range.
                      type: string
                    tag:
                      description: Tag is the image tag to pull, defaults to latest.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef contains the secret name containing the registry login
                    credentials to resolve image metadata.
                    The secret must be of type kubernetes.io/dockerconfigjson.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets. For more information:
                    https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                  type: string
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote OCI Repository operations like pulling, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: |-
                    URL is a reference to an OCI artifact repository hosted
                    on a remote container registry.
                  pattern: ^oci://.*$
                  type: string
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: OCIRepositoryStatus defines the observed state of OCIRepository
              properties:
                artifact:
                  description: Artifact represents the output of the last successful OCI Repository sync.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the OCIRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: |-
                    ContentConfigChecksum is a checksum of all the configurations related to
                    the content of the source artifact:
                     - .spec.ignore
                     - .spec.layerSelector
                    observed in .status.observedGeneration version of the object. This can
                    be used to determine if the content configuration has changed and the
                    artifact needs to be rebuilt.
                    It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.

                    Deprecated: Replaced with explicit fields for observed artifact content
                    config in the status.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedLayerSelector:
                  description: |-
                    ObservedLayerSelector is the observed layer selector used for constructing
                    the source artifact.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                url:
                  description: URL is the download link for the artifact output of the last OCI Repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: operations.ops.crossplane.io
spec:
  conversion:
    strategy: None
  group: ops.crossplane.io
  names:
    categories:
      - crossplane
    kind: Operation
    listKind: OperationList
    plural: operations
    shortNames:
      - ops
    singular: operation
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Succeeded')].status
          name: SUCCEEDED
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            An Operation defines a pipeline of functions that together constitute a day
            two operation.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OperationSpec specifies desired state of an operation.
              properties:
                mode:
                  default: Pipeline
                  description: |-
                    Mode controls what type or "mode" of operation will be used.

                    "Pipeline" indicates that an Operation specifies a pipeline of
                    functions, each of which is responsible for implementing its logic.
                  enum:
                    - Pipeline
                  type: string
                pipeline:
                  description: |-
                    Pipeline is a list of operation function steps that will be used when
                    this operation runs.
                  items:
                    description: A PipelineStep in an operation function pipeline.
                    properties:
                      credentials:
                        description: Credentials are optional credentials that the operation function needs.
                        items:
                          description: |-
                            FunctionCredentials are optional credentials that a function
                            needs to run.
                          properties:
                            name:
                              description: Name of this set of credentials.
                              type: string
                            secretRef:
                              description: |-
                                A SecretRef is a reference to a secret containing credentials that should
                                be supplied to the function.
                              properties:
                                name:
                                  description: Name of the secret.
                                  type: string
                                namespace:
                                  description: Namespace of the secret.
                                  type: string
                              required:
                                - name
                                - namespace
                              type: object
                            source:
                              description: Source of the function credentials.
                              enum:
                                - None
                                - Secret
                              type: string
                          required:
                            - name
                            - source
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      functionRef:
                        description: |-
                          FunctionRef is a reference to the function this step should
                          execute.
                        properties:
                          name:
                            description: Name of the referenced function.
                            type: string
                        required:
                          - name
                        type: object
                      input:
                        description: |-
                          Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                          with an apiVersion and kind) that will be passed to the unction as
                          the 'input' of its RunFunctionRequest.
                        type: object
                        x-kubernetes-embedded-resource: true
                        x-kubernetes-preserve-unknown-fields: true
                      requirements:
                        description: |-
                          Requirements are resource requirements that will be satisfied before
                          this pipeline step is called for the first time. This allows
                          pre-populating required resources without requiring a function to
                          request them first.
                        properties:
                          requiredResources:
                            description: |-
                              RequiredResources that will be fetched before this pipeline step
                              is called for the first time.
                            items:
                              description: |-
                                RequiredResourceSelector selects resources that should be fetched before
                                a pipeline step runs.
                              properties:
                                apiVersion:
                                  description: APIVersion of resources to select.
                                  type: string
                                kind:
                                  description: Kind of resources to select.
                                  type: string
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    MatchLabels matches resources by label selector. Only one of Name or
                                    MatchLabels may be specified.
                                  type: object
                                name:
                                  description: |-
                                    Name matches a single resource by name. Only one of Name or
                                    MatchLabels may be specified.
                                  type: string
                                namespace:
                                  description: Namespace to search for resources. Optional for cluster-scoped resources.
                                  type: string
                                requirementName:
                                  description: |-
                                    RequirementName uniquely identifies this group of resources.
                                    This name will be used as the key in RunFunctionRequest.required_resources.
                                  type: string
                              required:
                                - apiVersion
                                - kind
                                - requirementName
                              type: object
                              x-kubernetes-validations:
                                - message: Either name or matchLabels must be specified, but not both
                                  rule: (has(self.name) && !has(self.matchLabels)) || (!has(self.name) && has(self.matchLabels))
                            type: array
                            x-kubernetes-list-map-keys:
                              - requirementName
                            x-kubernetes-list-type: map
                        type: object
                      step:
                        description: Step name. Must be unique within its Pipeline.
                        type: string
                    required:
                      - functionRef
                      - step
                    type: object
                  maxItems: 99
                  minItems: 1
                  type: array
                  x-kubernetes-list-map-keys:
                    - step
                  x-kubernetes-list-type: map
                retryLimit:
                  description: |-
                    RetryLimit configures how many times the operation may fail. When the
                    failure limit is exceeded, the operation will not be retried.
                  format: int64
                  type: integer
              required:
                - mode
                - pipeline
              type: object
            status:
              description: OperationStatus represents the observed state of an operation.
              properties:
                appliedResourceRefs:
                  description: AppliedResourceRefs references all resources the Operation applied.
                  items:
                    description: An AppliedResourceRef is a reference to a resource an Operation applied.
                    properties:
                      apiVersion:
                        description: APIVersion of the applied resource.
                        type: string
                      kind:
                        description: Kind of the applied resource.
                        type: string
                      name:
                        description: Name of the applied resource.
                        type: string
                      namespace:
                        description: Namespace of the applied resource.
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failures:
                  description: Number of operation failures.
                  format: int64
                  type: integer
                pipeline:
                  description: |-
                    Pipeline represents the output of the pipeline steps that this operation
                    ran.
                  items:
                    description: PipelineStepStatus represents the status of an individual pipeline step.
                    properties:
                      output:
                        description: Output of this step.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      step:
                        description: Step name. Unique within its Pipeline.
                        type: string
                    required:
                      - step
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: providerconfigs.opentofu.upbound.io
  ownerReferences:
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: ProviderRevision
      name: crossplane-provider-opentofu-08c90be23b48
      uid: abf209b4-3bd2-4be7-b391-878c55aafff4
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: false
      kind: Provider
      name: crossplane-provider-opentofu
      uid: 3bedd75e-0a62-41ec-8407-f388e1736713
    - apiVersion: apiextensions.crossplane.io/v1alpha1
      kind: ManagedResourceDefinition
      name: providerconfigs.opentofu.upbound.io
      uid: 80c35344-afd2-421a-a2a8-532cb4f48d49
spec:
  conversion:
    strategy: None
  group: opentofu.upbound.io
  names:
    categories:
      - crossplane
      - provider
      - opentofu
    kind: ProviderConfig
    listKind: ProviderConfigList
    plural: providerconfigs
    singular: providerconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.credentials.secretRef.name
          name: SECRET-NAME
          priority: 1
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A ProviderConfig configures the OpenTofu provider.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: A ProviderConfigSpec defines the desired state of a ProviderConfig.
              properties:
                backendFile:
                  description: |-
                    Tofu backend file configuration content,
                    it has the contents of the backend block as top-level attributes,
                    without the need to wrap it in another opentofu or backend block.
                    More details at https://opentofu.org/docs/language/settings/backends/configuration/#file.
                  type: string
                configuration:
                  description: |-
                    Configuration that should be injected into all workspaces that use
                    this provider config, expressed as inline HCL. This can be used to
                    automatically inject Terraform provider configuration blocks.
                  type: string
                credentials:
                  description: Credentials required to authenticate to this provider.
                  items:
                    description: ProviderCredentials required to authenticate.
                    properties:
                      env:
                        description: |-
                          Env is a reference to an environment variable that contains credentials
                          that must be used to connect to the provider.
                        properties:
                          name:
                            description: Name is the name of an environment variable.
                            type: string
                        required:
                          - name
                        type: object
                      filename:
                        description: |-
                          Filename (relative to main.tf) to which these provider credentials
                          should be written.
                        type: string
                      fs:
                        description: |-
                          Fs is a reference to a filesystem location that contains credentials that
                          must be used to connect to the provider.
                        properties:
                          path:
                            description: Path is a filesystem path.
                            type: string
                        required:
                          - path
                        type: object
                      secretRef:
                        description: |-
                          A SecretRef is a reference to a secret key that contains the credentials
                          that must be used to connect to the provider.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                          - key
                          - name
                          - namespace
                        type: object
                      source:
                        description: Source of the provider credentials.
                        enum:
                          - None
                          - Secret
                          - Environment
                          - Filesystem
                        type: string
                    required:
                      - filename
                      - source
                    type: object
                  type: array
                pluginCache:
                  default: true
                  description: |-
                    PluginCache enables tofu provider plugin caching mechanism
                    https://opentofu.org/docs/cli/config/config-file/#provider-plugin-cache
                  type: boolean
              type: object
            status:
              description: A ProviderConfigStatus reflects the observed state of a ProviderConfig.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                users:
                  description: Users of this provider configuration.
                  format: int64
                  type: integer
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: providerconfigusages.opentofu.upbound.io
  ownerReferences:
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: ProviderRevision
      name: crossplane-provider-opentofu-08c90be23b48
      uid: abf209b4-3bd2-4be7-b391-878c55aafff4
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: false
      kind: Provider
      name: crossplane-provider-opentofu
      uid: 3bedd75e-0a62-41ec-8407-f388e1736713
    - apiVersion: apiextensions.crossplane.io/v1alpha1
      kind: ManagedResourceDefinition
      name: providerconfigusages.opentofu.upbound.io
      uid: ed9a3ba9-2523-4c4c-8fb9-e0e9669b0b36
spec:
  conversion:
    strategy: None
  group: opentofu.upbound.io
  names:
    categories:
      - crossplane
      - provider
      - opentofu
    kind: ProviderConfigUsage
    listKind: ProviderConfigUsageList
    plural: providerconfigusages
    singular: providerconfigusage
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .providerConfigRef.name
          name: CONFIG-NAME
          type: string
        - jsonPath: .resourceRef.kind
          name: RESOURCE-KIND
          type: string
        - jsonPath: .resourceRef.name
          name: RESOURCE-NAME
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A ProviderConfigUsage indicates that a resource is using a ProviderConfig.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            providerConfigRef:
              description: ProviderConfigReference to the provider config being used.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: |-
                        Resolution specifies whether resolution of this reference is required.
                        The default is 'Required', which means the reconcile will fail if the
                        reference cannot be resolved. 'Optional' means this reference will be
                        a no-op if it cannot be resolved.
                      enum:
                        - Required
                        - Optional
                      type: string
                    resolve:
                      description: |-
                        Resolve specifies when this reference should be resolved. The default
                        is 'IfNotPresent', which will attempt to resolve the reference only when
                        the corresponding field is not present. Use 'Always' to resolve the
                        reference on every reconcile.
                      enum:
                        - Always
                        - IfNotPresent
                      type: string
                  type: object
              required:
                - name
              type: object
            resourceRef:
              description: ResourceReference to the managed resource using the provider config.
              properties:
                apiVersion:
                  description: APIVersion of the referenced object.
                  type: string
                kind:
                  description: Kind of the referenced object.
                  type: string
                name:
                  description: Name of the referenced object.
                  type: string
                uid:
                  description: UID of the referenced object.
                  type: string
              required:
                - apiVersion
                - kind
                - name
              type: object
          required:
            - providerConfigRef
            - resourceRef
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: providerrevisions.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkgrev
    kind: ProviderRevision
    listKind: ProviderRevisionList
    plural: providerrevisions
    singular: providerrevision
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='RevisionHealthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .status.conditions[?(@.type=='RuntimeHealthy')].status
          name: RUNTIME
          type: string
        - jsonPath: .spec.image
          name: IMAGE
          type: string
        - jsonPath: .spec.desiredState
          name: STATE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.revision
          name: REVISION
          priority: 1
          type: string
        - jsonPath: .status.foundDependencies
          name: DEP-FOUND
          priority: 1
          type: string
        - jsonPath: .status.installedDependencies
          name: DEP-INSTALLED
          priority: 1
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A ProviderRevision represents a revision of a Provider. Crossplane
            creates new revisions when there are changes to a Provider.

            Crossplane creates and manages ProviderRevisions. Don't directly edit
            ProviderRevisions.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderRevisionSpec specifies configuration for a ProviderRevision.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                desiredState:
                  description: DesiredState of the PackageRevision. Can be either Active or Inactive.
                  type: string
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                image:
                  description: Package image used by install Pod to extract package contents.
                  type: string
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package. It is also
                    applied to any images pulled for the package, such as a provider's
                    controller image.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be
                    used to fetch packages from private registries. They are also applied to
                    any images pulled for the package, such as a provider's controller image.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revision:
                  description: |-
                    Revision number. Indicates when the revision will be garbage collected
                    based on the parent's RevisionHistoryLimit.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              required:
                - desiredState
                - image
                - revision
              type: object
            status:
              description: ProviderRevisionStatus represents the observed state of a ProviderRevision.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this revision, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                capabilities:
                  description: |-
                    Capabilities of this package. Capabilities are opaque strings that
                    may be meaningful to package consumers.
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                foundDependencies:
                  description: Dependency information.
                  format: int64
                  type: integer
                installedDependencies:
                  format: int64
                  type: integer
                invalidDependencies:
                  format: int64
                  type: integer
                objectRefs:
                  description: References to objects owned by PackageRevision.
                  items:
                    description: |-
                      A TypedReference refers to an object by Name, Kind, and APIVersion. It is
                      commonly used to reference cluster-scoped objects or objects where the
                      namespace is already known.
                    properties:
                      apiVersion:
                        description: APIVersion of the referenced object.
                        type: string
                      kind:
                        description: Kind of the referenced object.
                        type: string
                      name:
                        description: Name of the referenced object.
                        type: string
                      uid:
                        description: UID of the referenced object.
                        type: string
                    required:
                      - apiVersion
                      - kind
                      - name
                    type: object
                  type: array
                resolvedImage:
                  description: |-
                    ResolvedPackage is the name of the package that was installed. It may be
                    different from spec.image if the package path was rewritten using an
                    image config.
                  type: string
                tlsClientSecretName:
                  description: |-
                    TLSClientSecretName is the name of the TLS Secret that stores client
                    certificates of the Provider.
                  type: string
                tlsServerSecretName:
                  description: |-
                    TLSServerSecretName is the name of the TLS Secret that stores server
                    certificates of the Provider.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: providers.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Provider is deprecated, upgrade to v1beta3
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider
              properties:
                address:
                  description: HTTP/S webhook address of this provider
                  pattern: ^(http|https)://
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a secret containing
                    a PEM-encoded CA certificate (`caFile`)
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Alert channel for this provider
                  type: string
                proxy:
                  description: HTTP/S address of the proxy
                  pattern: ^(http|https)://
                  type: string
                secretRef:
                  description: |-
                    Secret reference containing the provider webhook URL
                    using "address" as data key
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events handling.
                    Defaults to false.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type of provider
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                  type: string
                username:
                  description: Bot username for this provider
                  type: string
              required:
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ProviderStatus defines the observed state of Provider
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Provider is deprecated, upgrade to v1beta3
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of the Provider.
              properties:
                address:
                  description: |-
                    Address specifies the endpoint, in a generic sense, to where alerts are sent.
                    What kind of endpoint depends on the specific Provider type being used.
                    For the generic Provider, for example, this is an HTTP/S address.
                    For other Provider types this could be a project ID or a namespace.
                  maxLength: 2048
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef specifies the Secret containing
                    a PEM-encoded CA certificate (in the `ca.crt` key).

                    Note: Support for the `caFile` key has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Channel specifies the destination channel where events should be posted.
                  maxLength: 2048
                  type: string
                interval:
                  description: Interval at which to reconcile the Provider with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                proxy:
                  description: Proxy the HTTP/S address of the proxy server.
                  maxLength: 2048
                  pattern: ^(http|https)://.*$
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the authentication
                    credentials for this Provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Provider.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the Provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type specifies which Provider implementation to use.
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - gitea
                    - bitbucketserver
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - googlepubsub
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                    - pagerduty
                    - datadog
                  type: string
                username:
                  description: Username specifies the name under which events are posted.
                  maxLength: 2048
                  type: string
              required:
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ProviderStatus defines the observed state of the Provider.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Provider.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta3
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of the Provider.
              properties:
                address:
                  description: |-
                    Address specifies the endpoint, in a generic sense, to where alerts are sent.
                    What kind of endpoint depends on the specific Provider type being used.
                    For the generic Provider, for example, this is an HTTP/S address.
                    For other Provider types this could be a project ID or a namespace.
                  maxLength: 2048
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef specifies the Secret containing
                    a PEM-encoded CA certificate (in the `ca.crt` key).

                    Note: Support for the `caFile` key has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Channel specifies the destination channel where events should be posted.
                  maxLength: 2048
                  type: string
                commitStatusExpr:
                  description: |-
                    CommitStatusExpr is a CEL expression that evaluates to a string value
                    that can be used to generate a custom commit status message for use
                    with eligible Provider types (github, gitlab, gitea, bitbucketserver,
                    bitbucket, azuredevops). Supported variables are: event, provider,
                    and alert.
                  type: string
                interval:
                  description: |-
                    Interval at which to reconcile the Provider with its Secret references.
                    Deprecated and not used in v1beta3.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                proxy:
                  description: Proxy the HTTP/S address of the proxy server.
                  maxLength: 2048
                  pattern: ^(http|https)://.*$
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the authentication
                    credentials for this Provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the service account used to
                    authenticate with services from cloud providers. An error is thrown if a
                    static credential is also defined inside the Secret referenced by the
                    SecretRef.
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Provider.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the Provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type specifies which Provider implementation to use.
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - gitea
                    - bitbucketserver
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - googlepubsub
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                    - pagerduty
                    - datadog
                    - nats
                  type: string
                username:
                  description: Username specifies the name under which events are posted.
                  maxLength: 2048
                  type: string
              required:
                - type
              type: object
              x-kubernetes-validations:
                - message: spec.commitStatusExpr is only supported for the 'github', 'gitlab', 'gitea', 'bitbucketserver', 'bitbucket', 'azuredevops' provider types
                  rule: self.type == 'github' || self.type == 'gitlab' || self.type == 'gitea' || self.type == 'bitbucketserver' || self.type == 'bitbucket' || self.type == 'azuredevops' || !has(self.commitStatusExpr)
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: providers.pkg.crossplane.io
spec:
  conversion:
    strategy: None
  group: pkg.crossplane.io
  names:
    categories:
      - crossplane
      - pkg
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Installed')].status
          name: INSTALLED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Healthy')].status
          name: HEALTHY
          type: string
        - jsonPath: .spec.package
          name: PACKAGE
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A Provider installs an OCI compatible Crossplane package, extending
            Crossplane with support for new kinds of managed resources.

            Read the Crossplane documentation for
            [more information about Providers](https://docs.crossplane.io/latest/concepts/providers).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ProviderSpec specifies details about a request to install a provider to
                Crossplane.
              properties:
                commonLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    Map of string keys and values that can be used to organize and categorize
                    (scope and select) objects. May match selectors of replication controllers
                    and services.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                  type: object
                ignoreCrossplaneConstraints:
                  default: false
                  description: |-
                    IgnoreCrossplaneConstraints indicates to the package manager whether to
                    honor Crossplane version constrains specified by the package.
                    Default is false.
                  type: boolean
                package:
                  description: |-
                    Package is the name of the package that is being requested.
                    must be a fully qualified image name, including the registry,
                    repository, and tag. for example, "registry.example.com/repo/package:tag".
                  type: string
                  x-kubernetes-validations:
                    - message: must be a fully qualified image name, including the registry, repository, and tag or digest. For example, 'registry.example.com/repo/package:tag' or 'registry.example.com/repo/package[:tag]@sha256:1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef'.
                      rule: self.matches('^[^\\.\\/]+(\\.[^\\.\\/]+)+(\\/[^\\/:@]+)+(:[^:@]+(@sha256.+)?|@sha256.+)$')
                packagePullPolicy:
                  default: IfNotPresent
                  description: |-
                    PackagePullPolicy defines the pull policy for the package.
                    Default is IfNotPresent.
                  type: string
                packagePullSecrets:
                  description: |-
                    PackagePullSecrets are named secrets in the same namespace that can be used
                    to fetch packages from private registries.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  type: array
                revisionActivationPolicy:
                  default: Automatic
                  description: |-
                    RevisionActivationPolicy specifies how the package controller should
                    update from one revision to the next. Options are Automatic or Manual.
                    Default is Automatic.
                  type: string
                revisionHistoryLimit:
                  default: 1
                  description: |-
                    RevisionHistoryLimit dictates how the package controller cleans up old
                    inactive package revisions.
                    Defaults to 1. Can be disabled by explicitly setting to 0.
                  format: int64
                  type: integer
                runtimeConfigRef:
                  default:
                    name: default
                  description: |-
                    RuntimeConfigRef references a RuntimeConfig resource that will be used
                    to configure the package runtime.
                  properties:
                    apiVersion:
                      default: pkg.crossplane.io/v1beta1
                      description: API version of the referent.
                      type: string
                    kind:
                      default: DeploymentRuntimeConfig
                      description: Kind of the referent.
                      type: string
                    name:
                      description: Name of the RuntimeConfig.
                      type: string
                  required:
                    - name
                  type: object
                skipDependencyResolution:
                  default: false
                  description: |-
                    SkipDependencyResolution indicates to the package manager whether to skip
                    resolving dependencies for a package. Setting this value to true may have
                    unintended consequences.
                    Default is false.
                  type: boolean
              required:
                - package
              type: object
            status:
              description: ProviderStatus represents the observed state of a Provider.
              properties:
                appliedImageConfigRefs:
                  description: |-
                    AppliedImageConfigRefs records any image configs that were applied in
                    reconciling this package, and what they were used for.
                  items:
                    description: |-
                      ImageConfigRef is a reference to an image config that indicates how the
                      referenced image config was used by the package manager.
                    properties:
                      name:
                        description: Name is the name of the image config.
                        type: string
                      reason:
                        description: Reason indicates what the image config was used for.
                        type: string
                    required:
                      - name
                      - reason
                    type: object
                  type: array
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                currentIdentifier:
                  description: |-
                    CurrentIdentifier is the most recent package source that was used to
                    produce a revision. The package manager uses this field to determine
                    whether to check for package updates for a given source when
                    packagePullPolicy is set to IfNotPresent. Manually removing this field
                    will cause the package manager to check that the current revision is
                    correct for the given package source.
                  type: string
                currentRevision:
                  description: |-
                    CurrentRevision is the name of the current package revision. It will
                    reflect the most up to date revision, whether it has been activated or
                    not.
                  type: string
                resolvedPackage:
                  description: |-
                    ResolvedPackage is the name of the package that was used for version
                    resolution. It may be different from spec.package if the package path was
                    rewritten using an image config.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.6.4
    helm.sh/chart: flux2-2.16.4
  name: receivers.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Receiver
    listKind: ReceiverList
    plural: receivers
    singular: receiver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of the Receiver.
              properties:
                events:
                  description: |-
                    Events specifies the list of event types to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                interval:
                  default: 10m
                  description: Interval at which to reconcile the Receiver with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                resourceFilter:
                  description: |-
                    ResourceFilter is a CEL expression expected to return a boolean that is
                    evaluated for each resource referenced in the Resources field when a
                    webhook is received. If the expression returns false then the controller
                    will not request a reconciliation for the resource.
                    When the expression is specified the controller will parse it and mark
                    the object as terminally failed if the expression is invalid or does not
                    return a boolean.
                  type: string
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the token used
                    to validate the payload authenticity.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this receiver.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                    - cdevents
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of the Receiver.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Receiver.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Receiver object.
                  format: int64
                  type: integer
                webhookPath:
                  description: |-
                    WebhookPath is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Receiver is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of Receiver
              properties:
                events:
                  description: |-
                    A list of events to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    Secret reference containing the token used
                    to validate the payload authenticity
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events handling.
                    Defaults to false.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of Receiver
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: |-
                    Generated webhook URL in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Receiver is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of the Receiver.
              properties:
                events:
                  description: |-
                    Events specifies the list of event types to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                interval:
                  description: Interval at which to reconcile the Receiver with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the token used
                    to validate the payload authenticity.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this receiver.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of the Receiver.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Receiver.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Receiver object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                    Deprecated: Replaced by WebhookPath.
                  type: string
                webhookPath:
                  description: |-
                    WebhookPath is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: storeconfigs.opentofu.upbound.io
  ownerReferences:
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: ProviderRevision
      name: crossplane-provider-opentofu-08c90be23b48
      uid: abf209b4-3bd2-4be7-b391-878c55aafff4
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: false
      kind: Provider
      name: crossplane-provider-opentofu
      uid: 3bedd75e-0a62-41ec-8407-f388e1736713
    - apiVersion: apiextensions.crossplane.io/v1alpha1
      kind: ManagedResourceDefinition
      name: storeconfigs.opentofu.upbound.io
      uid: 9f515b3c-82ac-40e2-9aee-dc51c0567041
spec:
  conversion:
    strategy: None
  group: opentofu.upbound.io
  names:
    categories:
      - crossplane
      - store
      - opentofu
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.type
          name: TYPE
          type: string
        - jsonPath: .spec.defaultScope
          name: DEFAULT-SCOPE
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A StoreConfig configures how the controller should store connection details.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: A StoreConfigSpec defines the desired state of a ProviderConfig.
              properties:
                defaultScope:
                  description: |-
                    DefaultScope used for scoping secrets for "cluster-scoped" resources.
                    If store type is "Kubernetes", this would mean the default namespace to
                    store connection secrets for cluster scoped resources.
                    In case of "Vault", this would be used as the default parent path.
                    Typically, should be set as Crossplane installation namespace.
                  type: string
                kubernetes:
                  description: |-
                    Kubernetes configures a Kubernetes secret store.
                    If the "type" is "Kubernetes" but no config provided, in cluster config
                    will be used.
                  properties:
                    auth:
                      description: Credentials used to connect to the Kubernetes API.
                      properties:
                        env:
                          description: |-
                            Env is a reference to an environment variable that contains credentials
                            that must be used to connect to the provider.
                          properties:
                            name:
                              description: Name is the name of an environment variable.
                              type: string
                          required:
                            - name
                          type: object
                        fs:
                          description: |-
                            Fs is a reference to a filesystem location that contains credentials that
                            must be used to connect to the provider.
                          properties:
                            path:
                              description: Path is a filesystem path.
                              type: string
                          required:
                            - path
                          type: object
                        secretRef:
                          description: |-
                            A SecretRef is a reference to a secret key that contains the credentials
                            that must be used to connect to the provider.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        source:
                          description: Source of the credentials.
                          enum:
                            - None
                            - Secret
                            - Environment
                            - Filesystem
                          type: string
                      required:
                        - source
                      type: object
                  required:
                    - auth
                  type: object
                plugin:
                  description: Plugin configures External secret store as a plugin.
                  properties:
                    configRef:
                      description: ConfigRef contains store config reference info.
                      properties:
                        apiVersion:
                          description: APIVersion of the referenced config.
                          type: string
                        kind:
                          description: Kind of the referenced config.
                          type: string
                        name:
                          description: Name of the referenced config.
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    endpoint:
                      description: Endpoint is the endpoint of the gRPC server.
                      type: string
                  type: object
                type:
                  default: Kubernetes
                  description: |-
                    Type configures which secret store to be used. Only the configuration
                    block for this store will be used and others will be ignored if provided.
                    Default is Kubernetes.
                  enum:
                    - Kubernetes
                    - Vault
                    - Plugin
                  type: string
              required:
                - defaultScope
              type: object
            status:
              description: A StoreConfigStatus represents the status of a StoreConfig.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: storeconfigs.secrets.crossplane.io
spec:
  conversion:
    strategy: None
  group: secrets.crossplane.io
  names:
    categories:
      - crossplane
      - store
    kind: StoreConfig
    listKind: StoreConfigList
    plural: storeconfigs
    singular: storeconfig
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.type
          name: TYPE
          type: string
        - jsonPath: .spec.defaultScope
          name: DEFAULT-SCOPE
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            A StoreConfig configures how Crossplane controllers should store connection
            details in an external secret store.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: A StoreConfigSpec defines the desired state of a StoreConfig.
              properties:
                defaultScope:
                  description: |-
                    DefaultScope used for scoping secrets for "cluster-scoped" resources.
                    If store type is "Kubernetes", this would mean the default namespace to
                    store connection secrets for cluster scoped resources.
                    In case of "Vault", this would be used as the default parent path.
                    Typically, should be set as Crossplane installation namespace.
                  type: string
                kubernetes:
                  description: |-
                    Kubernetes configures a Kubernetes secret store.
                    If the "type" is "Kubernetes" but no config provided, in cluster config
                    will be used.
                  properties:
                    auth:
                      description: Credentials used to connect to the Kubernetes API.
                      properties:
                        env:
                          description: |-
                            Env is a reference to an environment variable that contains credentials
                            that must be used to connect to the provider.
                          properties:
                            name:
                              description: Name is the name of an environment variable.
                              type: string
                          required:
                            - name
                          type: object
                        fs:
                          description: |-
                            Fs is a reference to a filesystem location that contains credentials that
                            must be used to connect to the provider.
                          properties:
                            path:
                              description: Path is a filesystem path.
                              type: string
                          required:
                            - path
                          type: object
                        secretRef:
                          description: |-
                            A SecretRef is a reference to a secret key that contains the credentials
                            that must be used to connect to the provider.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                            - key
                            - name
                            - namespace
                          type: object
                        source:
                          description: Source of the credentials.
                          enum:
                            - None
                            - Secret
                            - Environment
                            - Filesystem
                          type: string
                      required:
                        - source
                      type: object
                  required:
                    - auth
                  type: object
                plugin:
                  description: Plugin configures External secret store as a plugin.
                  properties:
                    configRef:
                      description: ConfigRef contains store config reference info.
                      properties:
                        apiVersion:
                          description: APIVersion of the referenced config.
                          type: string
                        kind:
                          description: Kind of the referenced config.
                          type: string
                        name:
                          description: Name of the referenced config.
                          type: string
                      required:
                        - apiVersion
                        - kind
                        - name
                      type: object
                    endpoint:
                      description: Endpoint is the endpoint of the gRPC server.
                      type: string
                  type: object
                type:
                  default: Kubernetes
                  description: |-
                    Type configures which secret store to be used. Only the configuration
                    block for this store will be used and others will be ignored if provided.
                    Default is Kubernetes.
                  enum:
                    - Kubernetes
                    - Vault
                    - Plugin
                  type: string
              required:
                - defaultScope
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: usages.apiextensions.crossplane.io
spec:
  conversion:
    strategy: None
  group: apiextensions.crossplane.io
  names:
    categories:
      - crossplane
    kind: Usage
    listKind: UsageList
    plural: usages
    singular: usage
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.annotations.crossplane\.io/usage-details
          name: DETAILS
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      deprecated: true
      deprecationWarning: apiextensions.crossplane.io Usage is deprecated; migrate to protection.crossplane.io Usage or ClusterUsage
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            A Usage defines a deletion blocking relationship between two resources.

            Usages prevent accidental deletion of a single resource or deletion of
            resources with dependent resources.

            Read the Crossplane documentation for
            [more information about Usages](https://docs.crossplane.io/latest/concepts/usages).

            Deprecated: Use protection.crossplane.io Usage or ClusterUsage.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: UsageSpec defines the desired state of Usage.
              properties:
                by:
                  description: By is the resource that is "using the other resource".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                of:
                  description: Of is the resource that is "being used".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                reason:
                  description: Reason is the reason for blocking deletion of the resource.
                  type: string
                replayDeletion:
                  description: ReplayDeletion will trigger a deletion on the used resource during the deletion of the usage itself, if it was attempted to be deleted at least once.
                  type: boolean
              required:
                - of
              type: object
              x-kubernetes-validations:
                - message: either "spec.by" or "spec.reason" must be specified.
                  rule: has(self.by) || has(self.reason)
            status:
              description: UsageStatus defines the observed state of Usage.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.annotations.crossplane\.io/usage-details
          name: DETAILS
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      deprecated: true
      deprecationWarning: apiextensions.crossplane.io Usage is deprecated; migrate to protection.crossplane.io Usage or ClusterUsage
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            A Usage defines a deletion blocking relationship between two resources.

            Usages prevent accidental deletion of a single resource or deletion of
            resources with dependent resources.

            Read the Crossplane documentation for
            [more information about Usages](https://docs.crossplane.io/latest/concepts/usages).

            Deprecated: Use protection.crossplane.io Usage or ClusterUsage.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: UsageSpec defines the desired state of Usage.
              properties:
                by:
                  description: By is the resource that is "using the other resource".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                of:
                  description: Of is the resource that is "being used".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                reason:
                  description: Reason is the reason for blocking deletion of the resource.
                  type: string
                replayDeletion:
                  description: ReplayDeletion will trigger a deletion on the used resource during the deletion of the usage itself, if it was attempted to be deleted at least once.
                  type: boolean
              required:
                - of
              type: object
              x-kubernetes-validations:
                - message: either "spec.by" or "spec.reason" must be specified.
                  rule: has(self.by) || has(self.reason)
            status:
              description: UsageStatus defines the observed state of Usage.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: usages.protection.crossplane.io
spec:
  conversion:
    strategy: None
  group: protection.crossplane.io
  names:
    categories:
      - crossplane
    kind: Usage
    listKind: UsageList
    plural: usages
    singular: usage
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.annotations.crossplane\.io/usage-details
          name: DETAILS
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            A Usage defines a deletion blocking relationship between two resources.

            Usages prevent accidental deletion of a single resource or deletion of
            resources with dependent resources.

            Read the Crossplane documentation for
            [more information about Compositions](https://docs.crossplane.io/latest/concepts/usages).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: UsageSpec defines the desired state of Usage.
              properties:
                by:
                  description: By is the resource that is "using the other resource".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                of:
                  description: Of is the resource that is "being used".
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    resourceRef:
                      description: Reference to the resource.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                        namespace:
                          description: Namespace of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    resourceSelector:
                      description: |-
                        Selector to the resource.
                        This field will be ignored if ResourceRef is set.
                      properties:
                        matchControllerRef:
                          description: |-
                            MatchControllerRef ensures an object with the same controller reference
                            as the selecting object is selected.
                          type: boolean
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: MatchLabels ensures an object with matching labels is selected.
                          type: object
                        namespace:
                          description: |-
                            Namespace ensures an object in the supplied namespace is selected.
                            Omit namespace to only match resources in the Usage's namespace.
                          type: string
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: either a resource reference or a resource selector should be set.
                      rule: has(self.resourceRef) || has(self.resourceSelector)
                reason:
                  description: Reason is the reason for blocking deletion of the resource.
                  type: string
                replayDeletion:
                  description: ReplayDeletion will trigger a deletion on the used resource during the deletion of the usage itself, if it was attempted to be deleted at least once.
                  type: boolean
              required:
                - of
              type: object
              x-kubernetes-validations:
                - message: either "spec.by" or "spec.reason" must be specified.
                  rule: has(self.by) || has(self.reason)
                - message: cross-namespace "spec.of" is not allowed without "spec.by" resource.
                  rule: has(self.by) || (!has(self.of.resourceRef) || !has(self.of.resourceRef.__namespace__)) && (!has(self.of.resourceSelector) || !has(self.of.resourceSelector.__namespace__))
            status:
              description: UsageStatus defines the observed state of Usage.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: watchoperations.ops.crossplane.io
spec:
  conversion:
    strategy: None
  group: ops.crossplane.io
  names:
    categories:
      - crossplane
    kind: WatchOperation
    listKind: WatchOperationList
    plural: watchoperations
    shortNames:
      - watchops
    singular: watchoperation
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.watch.kind
          name: KIND
          type: string
        - jsonPath: .status.watchingResources
          name: COUNT
          type: integer
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Watching')].status
          name: WATCHING
          type: string
        - jsonPath: .status.lastScheduleTime
          name: LAST SCHEDULE
          type: date
        - jsonPath: .status.lastSuccessfulTime
          name: LAST SUCCESS
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: A WatchOperation creates Operations when watched resources change.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: WatchOperationSpec specifies the desired state of a WatchOperation.
              properties:
                concurrencyPolicy:
                  default: Allow
                  description: |-
                    ConcurrencyPolicy specifies how to treat concurrent executions of an
                    operation.
                  enum:
                    - Allow
                    - Forbid
                    - Replace
                  type: string
                failedHistoryLimit:
                  default: 1
                  description: FailedHistoryLimit is the number of failed Operations to retain.
                  format: int32
                  type: integer
                operationTemplate:
                  description: OperationTemplate is the template for the Operation to be created.
                  properties:
                    metadata:
                      description: Standard object metadata.
                      type: object
                    spec:
                      description: Spec is the specification of the Operation to be created.
                      properties:
                        mode:
                          default: Pipeline
                          description: |-
                            Mode controls what type or "mode" of operation will be used.

                            "Pipeline" indicates that an Operation specifies a pipeline of
                            functions, each of which is responsible for implementing its logic.
                          enum:
                            - Pipeline
                          type: string
                        pipeline:
                          description: |-
                            Pipeline is a list of operation function steps that will be used when
                            this operation runs.
                          items:
                            description: A PipelineStep in an operation function pipeline.
                            properties:
                              credentials:
                                description: Credentials are optional credentials that the operation function needs.
                                items:
                                  description: |-
                                    FunctionCredentials are optional credentials that a function
                                    needs to run.
                                  properties:
                                    name:
                                      description: Name of this set of credentials.
                                      type: string
                                    secretRef:
                                      description: |-
                                        A SecretRef is a reference to a secret containing credentials that should
                                        be supplied to the function.
                                      properties:
                                        name:
                                          description: Name of the secret.
                                          type: string
                                        namespace:
                                          description: Namespace of the secret.
                                          type: string
                                      required:
                                        - name
                                        - namespace
                                      type: object
                                    source:
                                      description: Source of the function credentials.
                                      enum:
                                        - None
                                        - Secret
                                      type: string
                                  required:
                                    - name
                                    - source
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              functionRef:
                                description: |-
                                  FunctionRef is a reference to the function this step should
                                  execute.
                                properties:
                                  name:
                                    description: Name of the referenced function.
                                    type: string
                                required:
                                  - name
                                type: object
                              input:
                                description: |-
                                  Input is an optional, arbitrary Kubernetes resource (i.e. a resource
                                  with an apiVersion and kind) that will be passed to the unction as
                                  the 'input' of its RunFunctionRequest.
                                type: object
                                x-kubernetes-embedded-resource: true
                                x-kubernetes-preserve-unknown-fields: true
                              requirements:
                                description: |-
                                  Requirements are resource requirements that will be satisfied before
                                  this pipeline step is called for the first time. This allows
                                  pre-populating required resources without requiring a function to
                                  request them first.
                                properties:
                                  requiredResources:
                                    description: |-
                                      RequiredResources that will be fetched before this pipeline step
                                      is called for the first time.
                                    items:
                                      description: |-
                                        RequiredResourceSelector selects resources that should be fetched before
                                        a pipeline step runs.
                                      properties:
                                        apiVersion:
                                          description: APIVersion of resources to select.
                                          type: string
                                        kind:
                                          description: Kind of resources to select.
                                          type: string
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            MatchLabels matches resources by label selector. Only one of Name or
                                            MatchLabels may be specified.
                                          type: object
                                        name:
                                          description: |-
                                            Name matches a single resource by name. Only one of Name or
                                            MatchLabels may be specified.
                                          type: string
                                        namespace:
                                          description: Namespace to search for resources. Optional for cluster-scoped resources.
                                          type: string
                                        requirementName:
                                          description: |-
                                            RequirementName uniquely identifies this group of resources.
                                            This name will be used as the key in RunFunctionRequest.required_resources.
                                          type: string
                                      required:
                                        - apiVersion
                                        - kind
                                        - requirementName
                                      type: object
                                      x-kubernetes-validations:
                                        - message: Either name or matchLabels must be specified, but not both
                                          rule: (has(self.name) && !has(self.matchLabels)) || (!has(self.name) && has(self.matchLabels))
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - requirementName
                                    x-kubernetes-list-type: map
                                type: object
                              step:
                                description: Step name. Must be unique within its Pipeline.
                                type: string
                            required:
                              - functionRef
                              - step
                            type: object
                          maxItems: 99
                          minItems: 1
                          type: array
                          x-kubernetes-list-map-keys:
                            - step
                          x-kubernetes-list-type: map
                        retryLimit:
                          description: |-
                            RetryLimit configures how many times the operation may fail. When the
                            failure limit is exceeded, the operation will not be retried.
                          format: int64
                          type: integer
                      required:
                        - mode
                        - pipeline
                      type: object
                  required:
                    - spec
                  type: object
                successfulHistoryLimit:
                  default: 3
                  description: SuccessfulHistoryLimit is the number of successful Operations to retain.
                  format: int32
                  type: integer
                watch:
                  description: Watch specifies the resource to watch.
                  properties:
                    apiVersion:
                      description: APIVersion of the resource to watch.
                      type: string
                      x-kubernetes-validations:
                        - message: apiVersion is immutable
                          rule: self == oldSelf
                    kind:
                      description: Kind of the resource to watch.
                      type: string
                      x-kubernetes-validations:
                        - message: kind is immutable
                          rule: self == oldSelf
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        MatchLabels selects resources by label. If empty, all resources of the
                        specified kind are watched.
                      type: object
                    namespace:
                      description: |-
                        Namespace selects resources in a specific namespace. If empty, all
                        namespaces are watched. Only applicable for namespaced resources.
                      type: string
                  required:
                    - apiVersion
                    - kind
                  type: object
              required:
                - operationTemplate
                - watch
              type: object
            status:
              description: WatchOperationStatus represents the observed state of a WatchOperation.
              properties:
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                lastScheduleTime:
                  description: |-
                    LastScheduleTime is the last time the WatchOperation created an
                    Operation.
                  format: date-time
                  type: string
                lastSuccessfulTime:
                  description: |-
                    LastSuccessfulTime is the last time the WatchOperation successfully
                    completed an Operation.
                  format: date-time
                  type: string
                runningOperationRefs:
                  description: RunningOperationRefs is a list of currently running Operations.
                  items:
                    description: A RunningOperationRef is a reference to a running operation.
                    properties:
                      name:
                        description: Name of the active operation.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                watchingResources:
                  description: |-
                    WatchingResources is the number of resources this WatchOperation is
                    currently watching.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: workspaces.opentofu.upbound.io
  ownerReferences:
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: ProviderRevision
      name: crossplane-provider-opentofu-08c90be23b48
      uid: abf209b4-3bd2-4be7-b391-878c55aafff4
    - apiVersion: pkg.crossplane.io/v1
      blockOwnerDeletion: true
      controller: false
      kind: Provider
      name: crossplane-provider-opentofu
      uid: 3bedd75e-0a62-41ec-8407-f388e1736713
    - apiVersion: apiextensions.crossplane.io/v1alpha1
      kind: ManagedResourceDefinition
      name: workspaces.opentofu.upbound.io
      uid: 2b19334a-26f3-4021-ae88-22d0f0e962d8
spec:
  conversion:
    strategy: None
  group: opentofu.upbound.io
  names:
    categories:
      - crossplane
      - managed
      - opentofu
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    singular: workspace
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=='Synced')].status
          name: SYNCED
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: A Workspace of OpenTofu Configuration.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: A WorkspaceSpec defines the desired state of a Workspace.
              properties:
                deletionPolicy:
                  default: Delete
                  description: |-
                    DeletionPolicy specifies what will happen to the underlying external
                    when this managed resource is deleted - either "Delete" or "Orphan" the
                    external resource.
                    This field is planned to be deprecated in favor of the ManagementPolicies
                    field in a future release. Currently, both could be set independently and
                    non-default values would be honored if the feature flag is enabled.
                    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  enum:
                    - Orphan
                    - Delete
                  type: string
                forProvider:
                  description: WorkspaceParameters are the configurable fields of a Workspace.
                  properties:
                    applyArgs:
                      description: Arguments to be included in the tofu apply CLI command
                      items:
                        type: string
                      type: array
                    destroyArgs:
                      description: Arguments to be included in the tofu destroy CLI command
                      items:
                        type: string
                      type: array
                    enableTofuCLILogging:
                      description: Boolean value to indicate CLI logging of tofu execution is enabled or not
                      type: boolean
                    entrypoint:
                      default: ""
                      description: Entrypoint for `tofu init` within the module
                      type: string
                    env:
                      description: Environment variables.
                      items:
                        description: An EnvVar specifies an environment variable to be set for the workspace.
                        properties:
                          configMapKeyRef:
                            description: A ConfigMap key containing the desired env var value.
                            properties:
                              key:
                                description: Key within the referenced resource.
                                type: string
                              name:
                                description: Name of the referenced resource.
                                type: string
                              namespace:
                                description: Namespace of the referenced resource.
                                type: string
                            required:
                              - key
                              - name
                              - namespace
                            type: object
                          name:
                            type: string
                          secretKeyRef:
                            description: A Secret key containing the desired env var value.
                            properties:
                              key:
                                description: Key within the referenced resource.
                                type: string
                              name:
                                description: Name of the referenced resource.
                                type: string
                              namespace:
                                description: Namespace of the referenced resource.
                                type: string
                            required:
                              - key
                              - name
                              - namespace
                            type: object
                          value:
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    initArgs:
                      description: Arguments to be included in the tofu init CLI command
                      items:
                        type: string
                      type: array
                    inlineFormat:
                      description: |-
                        Specifies the format of the inline Terraform content
                        if Source is 'Inline'
                      enum:
                        - HCL
                        - JSON
                      type: string
                    module:
                      description: |-
                        The root module of this workspace; i.e. the module containing its main.tf
                        file. When the workspace's source is 'Remote' (the default) this can be
                        any address supported by tofu init -from-module, for example a git
                        repository or an S3 bucket. When the workspace's source is 'Inline' the
                        content of a simple main.tf or main.tf.json file may be written inline.
                      type: string
                    planArgs:
                      description: Arguments to be included in the tofu plan CLI command
                      items:
                        type: string
                      type: array
                    source:
                      description: Source of the root module of this workspace.
                      enum:
                        - Remote
                        - Inline
                      type: string
                    varFiles:
                      description: |-
                        Files of configuration variables. Explicitly declared vars take
                        precedence.
                      items:
                        description: A VarFile is a file containing many Terraform variables.
                        properties:
                          configMapKeyRef:
                            description: A ConfigMap key containing the vars file.
                            properties:
                              key:
                                description: Key within the referenced resource.
                                type: string
                              name:
                                description: Name of the referenced resource.
                                type: string
                              namespace:
                                description: Namespace of the referenced resource.
                                type: string
                            required:
                              - key
                              - name
                              - namespace
                            type: object
                          format:
                            default: HCL
                            description: Format of this vars file.
                            enum:
                              - HCL
                              - JSON
                            type: string
                          secretKeyRef:
                            description: A Secret key containing the vars file.
                            properties:
                              key:
                                description: Key within the referenced resource.
                                type: string
                              name:
                                description: Name of the referenced resource.
                                type: string
                              namespace:
                                description: Namespace of the referenced resource.
                                type: string
                            required:
                              - key
                              - name
                              - namespace
                            type: object
                          source:
                            description: Source of this vars file.
                            enum:
                              - ConfigMapKey
                              - SecretKey
                            type: string
                        required:
                          - source
                        type: object
                      type: array
                    varmap:
                      description: Terraform Variable Map. Should be a valid JSON representation of the input vars
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    vars:
                      description: Configuration variables.
                      items:
                        description: A Var represents a tofu configuration variable.
                        properties:
                          key:
                            type: string
                          value:
                            type: string
                        required:
                          - key
                          - value
                        type: object
                      type: array
                  required:
                    - module
                    - source
                  type: object
                managementPolicies:
                  default:
                    - '*'
                  description: |-
                    THIS IS A BETA FIELD. It is on by default but can be opted out
                    through a Crossplane feature flag.
                    ManagementPolicies specify the array of actions Crossplane is allowed to
                    take on the managed and external resources.
                    This field is planned to replace the DeletionPolicy field in a future
                    release. Currently, both could be set independently and non-default
                    values would be honored if the feature flag is enabled. If both are
                    custom, the DeletionPolicy field will be ignored.
                    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                  items:
                    description: |-
                      A ManagementAction represents an action that the Crossplane controllers
                      can take on an external resource.
                    enum:
                      - Observe
                      - Create
                      - Update
                      - Delete
                      - LateInitialize
                      - '*'
                    type: string
                  type: array
                providerConfigRef:
                  default:
                    name: default
                  description: |-
                    ProviderConfigReference specifies how the provider that will be used to
                    create, observe, update, and delete this managed resource should be
                    configured.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: |-
                            Resolution specifies whether resolution of this reference is required.
                            The default is 'Required', which means the reconcile will fail if the
                            reference cannot be resolved. 'Optional' means this reference will be
                            a no-op if it cannot be resolved.
                          enum:
                            - Required
                            - Optional
                          type: string
                        resolve:
                          description: |-
                            Resolve specifies when this reference should be resolved. The default
                            is 'IfNotPresent', which will attempt to resolve the reference only when
                            the corresponding field is not present. Use 'Always' to resolve the
                            reference on every reconcile.
                          enum:
                            - Always
                            - IfNotPresent
                          type: string
                      type: object
                  required:
                    - name
                  type: object
                publishConnectionDetailsTo:
                  description: |-
                    PublishConnectionDetailsTo specifies the connection secret config which
                    contains a name, metadata and a reference to secret store config to
                    which any connection details for this managed resource should be written.
                    Connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                  properties:
                    configRef:
                      default:
                        name: default
                      description: |-
                        SecretStoreConfigRef specifies which secret store config should be used
                        for this ConnectionSecret.
                      properties:
                        name:
                          description: Name of the referenced object.
                          type: string
                        policy:
                          description: Policies for referencing.
                          properties:
                            resolution:
                              default: Required
                              description: |-
                                Resolution specifies whether resolution of this reference is required.
                                The default is 'Required', which means the reconcile will fail if the
                                reference cannot be resolved. 'Optional' means this reference will be
                                a no-op if it cannot be resolved.
                              enum:
                                - Required
                                - Optional
                              type: string
                            resolve:
                              description: |-
                                Resolve specifies when this reference should be resolved. The default
                                is 'IfNotPresent', which will attempt to resolve the reference only when
                                the corresponding field is not present. Use 'Always' to resolve the
                                reference on every reconcile.
                              enum:
                                - Always
                                - IfNotPresent
                              type: string
                          type: object
                      required:
                        - name
                      type: object
                    metadata:
                      description: Metadata is the metadata for connection secret.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations are the annotations to be added to connection secret.
                            - For Kubernetes secrets, this will be used as "metadata.annotations".
                            - It is up to Secret Store implementation for others store types.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Labels are the labels/tags to be added to connection secret.
                            - For Kubernetes secrets, this will be used as "metadata.labels".
                            - It is up to Secret Store implementation for others store types.
                          type: object
                        type:
                          description: |-
                            Type is the SecretType for the connection secret.
                            - Only valid for Kubernetes Secret Stores.
                          type: string
                      type: object
                    name:
                      description: Name is the name of the connection secret.
                      type: string
                  required:
                    - name
                  type: object
                writeConnectionSecretToRef:
                  description: |-
                    WriteConnectionSecretToReference specifies the namespace and name of a
                    Secret to which any connection details for this managed resource should
                    be written. Connection details frequently include the endpoint, username,
                    and password required to connect to the managed resource.
                    This field is planned to be replaced in a future release in favor of
                    PublishConnectionDetailsTo. Currently, both could be set independently
                    and connection details would be published to both without affecting
                    each other.
                  properties:
                    name:
                      description: Name of the secret.
                      type: string
                    namespace:
                      description: Namespace of the secret.
                      type: string
                  required:
                    - name
                    - namespace
                  type: object
              required:
                - forProvider
              type: object
            status:
              description: A WorkspaceStatus represents the observed state of a Workspace.
              properties:
                atProvider:
                  description: WorkspaceObservation are the observable fields of a Workspace.
                  properties:
                    checksum:
                      type: string
                    outputs:
                      additionalProperties:
                        x-kubernetes-preserve-unknown-fields: true
                      type: object
                  type: object
                conditions:
                  description: Conditions of the resource.
                  items:
                    description: A Condition that may apply to a resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the last time this condition transitioned from one
                          status to another.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          A Message containing details about this condition's last transition from
                          one status to another, if any.
                        type: string
                      observedGeneration:
                        description: |-
                          ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        type: integer
                      reason:
                        description: A Reason for this condition's last transition from one status to another.
                        type: string
                      status:
                        description: Status of this condition; is it currently True, False, or Unknown?
                        type: string
                      type:
                        description: |-
                          Type of this condition. At most one of each condition type may apply to
                          a resource at any point in time.
                        type: string
                    required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                observedGeneration:
                  description: |-
                    ObservedGeneration is the latest metadata.generation
                    which resulted in either a ready state, or stalled due to error
                    it can not recover from without human intervention.
                  format: int64
                  type: integer
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

