---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: alerts.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Alert
    listKind: AlertList
    plural: alerts
    singular: alert
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Alert is deprecated, upgrade to v1beta3
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects
              properties:
                eventSeverity:
                  default: info
                  description: |-
                    Filter events based on severity, defaults to ('info').
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: Filter events based on the involved objects.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: A list of Golang regular expressions to be used for excluding messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: Send events using this provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: Short description of the impact and affected cluster.
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events dispatching.
                    Defaults to false.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: AlertStatus defines the observed state of Alert
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Alert is deprecated, upgrade to v1beta3
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects.
              properties:
                eventMetadata:
                  additionalProperties:
                    type: string
                  description: |-
                    EventMetadata is an optional field for adding metadata to events dispatched by the
                    controller. This can be used for enhancing the context of the event. If a field
                    would override one already present on the original event as generated by the emitter,
                    then the override doesn't happen, i.e. the original value is preserved, and an info
                    log is printed.
                  type: object
                eventSeverity:
                  default: info
                  description: |-
                    EventSeverity specifies how to filter events based on severity.
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: |-
                    EventSources specifies how to filter events based
                    on the involved object kind, name and namespace.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: |-
                    ExclusionList specifies a list of Golang regular expressions
                    to be used for excluding messages.
                  items:
                    type: string
                  type: array
                inclusionList:
                  description: |-
                    InclusionList specifies a list of Golang regular expressions
                    to be used for including messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: ProviderRef specifies which Provider this Alert should use.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: Summary holds a short description of the impact and affected cluster.
                  maxLength: 255
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Alert.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: AlertStatus defines the observed state of the Alert.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Alert.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta3
      schema:
        openAPIV3Schema:
          description: Alert is the Schema for the alerts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AlertSpec defines an alerting rule for events involving a list of objects.
              properties:
                eventMetadata:
                  additionalProperties:
                    type: string
                  description: |-
                    EventMetadata is an optional field for adding metadata to events dispatched by the
                    controller. This can be used for enhancing the context of the event. If a field
                    would override one already present on the original event as generated by the emitter,
                    then the override doesn't happen, i.e. the original value is preserved, and an info
                    log is printed.
                  type: object
                eventSeverity:
                  default: info
                  description: |-
                    EventSeverity specifies how to filter events based on severity.
                    If set to 'info' no events will be filtered.
                  enum:
                    - info
                    - error
                  type: string
                eventSources:
                  description: |-
                    EventSources specifies how to filter events based
                    on the involved object kind, name and namespace.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                exclusionList:
                  description: |-
                    ExclusionList specifies a list of Golang regular expressions
                    to be used for excluding messages.
                  items:
                    type: string
                  type: array
                inclusionList:
                  description: |-
                    InclusionList specifies a list of Golang regular expressions
                    to be used for including messages.
                  items:
                    type: string
                  type: array
                providerRef:
                  description: ProviderRef specifies which Provider this Alert should use.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                summary:
                  description: Summary holds a short description of the impact and affected cluster.
                  maxLength: 255
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Alert.
                  type: boolean
              required:
                - eventSources
                - providerRef
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: buckets.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                BucketSpec specifies the required configuration to produce an Artifact for
                an object storage bucket.
              properties:
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    bucket. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    This field is only supported for the `generic` provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                endpoint:
                  description: Endpoint is the object storage address the BucketName is located at.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the Bucket Endpoint is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                prefix:
                  description: Prefix to use for server-side filtering of files in the Bucket.
                  type: string
                provider:
                  default: generic
                  description: |-
                    Provider of the object storage bucket.
                    Defaults to 'generic', which expects an S3 (API) compatible object
                    storage.
                  enum:
                    - generic
                    - aws
                    - gcp
                    - azure
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Bucket server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                region:
                  description: Region of the Endpoint where the BucketName is located in.
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                sts:
                  description: |-
                    STS specifies the required configuration to use a Security Token
                    Service for fetching temporary credentials to authenticate in a
                    Bucket provider.

                    This field is only supported for the `aws` and `generic` providers.
                  properties:
                    certSecretRef:
                      description: |-
                        CertSecretRef can be given the name of a Secret containing
                        either or both of

                        - a PEM-encoded client certificate (`tls.crt`) and private
                        key (`tls.key`);
                        - a PEM-encoded CA certificate (`ca.crt`)

                        and whichever are supplied, will be used for connecting to the
                        STS endpoint. The client cert and key are useful if you are
                        authenticating with a certificate; the CA cert is useful if
                        you are using a self-signed server certificate. The Secret must
                        be of type `Opaque` or `kubernetes.io/tls`.

                        This field is only supported for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    endpoint:
                      description: |-
                        Endpoint is the HTTP/S endpoint of the Security Token Service from
                        where temporary credentials will be fetched.
                      pattern: ^(http|https)://.*$
                      type: string
                    provider:
                      description: Provider of the Security Token Service.
                      enum:
                        - aws
                        - ldap
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing authentication credentials
                        for the STS endpoint. This Secret must contain the fields `username`
                        and `password` and is supported only for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - endpoint
                    - provider
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
              x-kubernetes-validations:
                - message: STS configuration is only supported for the 'aws' and 'generic' Bucket providers
                  rule: self.provider == 'aws' || self.provider == 'generic' || !has(self.sts)
                - message: '''aws'' is the only supported STS provider for the ''aws'' Bucket provider'
                  rule: self.provider != 'aws' || !has(self.sts) || self.sts.provider == 'aws'
                - message: '''ldap'' is the only supported STS provider for the ''generic'' Bucket provider'
                  rule: self.provider != 'generic' || !has(self.sts) || self.sts.provider == 'ldap'
                - message: spec.sts.secretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.secretRef)'
                - message: spec.sts.certSecretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.certSecretRef)'
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Bucket object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 Bucket is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BucketSpec defines the desired state of an S3 compatible bucket
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: The bucket name.
                  type: string
                endpoint:
                  description: The bucket endpoint address.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS S3 HTTP endpoint.
                  type: boolean
                interval:
                  description: The interval at which to check for bucket updates.
                  type: string
                provider:
                  default: generic
                  description: The S3 compatible storage provider name, default ('generic').
                  enum:
                    - generic
                    - aws
                    - gcp
                  type: string
                region:
                  description: The bucket region.
                  type: string
                secretRef:
                  description: |-
                    The name of the secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for download operations, defaults to 60s.
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: BucketStatus defines the observed state of a bucket
              properties:
                artifact:
                  description: Artifact represents the output of the last successful Bucket sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the artifact output of the last Bucket sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.endpoint
          name: Endpoint
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Bucket is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Bucket is the Schema for the buckets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                BucketSpec specifies the required configuration to produce an Artifact for
                an object storage bucket.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                bucketName:
                  description: BucketName is the name of the object storage bucket.
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    bucket. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    This field is only supported for the `generic` provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                endpoint:
                  description: Endpoint is the object storage address the BucketName is located at.
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP Endpoint.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the Bucket Endpoint is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                prefix:
                  description: Prefix to use for server-side filtering of files in the Bucket.
                  type: string
                provider:
                  default: generic
                  description: |-
                    Provider of the object storage bucket.
                    Defaults to 'generic', which expects an S3 (API) compatible object
                    storage.
                  enum:
                    - generic
                    - aws
                    - gcp
                    - azure
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Bucket server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                region:
                  description: Region of the Endpoint where the BucketName is located in.
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the Bucket.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                sts:
                  description: |-
                    STS specifies the required configuration to use a Security Token
                    Service for fetching temporary credentials to authenticate in a
                    Bucket provider.

                    This field is only supported for the `aws` and `generic` providers.
                  properties:
                    certSecretRef:
                      description: |-
                        CertSecretRef can be given the name of a Secret containing
                        either or both of

                        - a PEM-encoded client certificate (`tls.crt`) and private
                        key (`tls.key`);
                        - a PEM-encoded CA certificate (`ca.crt`)

                        and whichever are supplied, will be used for connecting to the
                        STS endpoint. The client cert and key are useful if you are
                        authenticating with a certificate; the CA cert is useful if
                        you are using a self-signed server certificate. The Secret must
                        be of type `Opaque` or `kubernetes.io/tls`.

                        This field is only supported for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                    endpoint:
                      description: |-
                        Endpoint is the HTTP/S endpoint of the Security Token Service from
                        where temporary credentials will be fetched.
                      pattern: ^(http|https)://.*$
                      type: string
                    provider:
                      description: Provider of the Security Token Service.
                      enum:
                        - aws
                        - ldap
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing authentication credentials
                        for the STS endpoint. This Secret must contain the fields `username`
                        and `password` and is supported only for the `ldap` provider.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - endpoint
                    - provider
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    Bucket.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for fetch operations, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - bucketName
                - endpoint
                - interval
              type: object
              x-kubernetes-validations:
                - message: STS configuration is only supported for the 'aws' and 'generic' Bucket providers
                  rule: self.provider == 'aws' || self.provider == 'generic' || !has(self.sts)
                - message: '''aws'' is the only supported STS provider for the ''aws'' Bucket provider'
                  rule: self.provider != 'aws' || !has(self.sts) || self.sts.provider == 'aws'
                - message: '''ldap'' is the only supported STS provider for the ''generic'' Bucket provider'
                  rule: self.provider != 'generic' || !has(self.sts) || self.sts.provider == 'ldap'
                - message: spec.sts.secretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.secretRef)'
                - message: spec.sts.certSecretRef is not required for the 'aws' STS provider
                  rule: '!has(self.sts) || self.sts.provider != ''aws'' || !has(self.sts.certSecretRef)'
            status:
              default:
                observedGeneration: -1
              description: BucketStatus records the observed state of a Bucket.
              properties:
                artifact:
                  description: Artifact represents the last successful Bucket reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the Bucket.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Bucket object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: certificaterequests.cert-manager.io
spec:
  conversion:
    strategy: None
  group: cert-manager.io
  names:
    categories:
      - cert-manager
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
      - cr
      - crs
    singular: certificaterequest
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Approved")].status
          name: Approved
          type: string
        - jsonPath: .status.conditions[?(@.type=="Denied")].status
          name: Denied
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          type: string
        - jsonPath: .spec.username
          name: Requester
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A CertificateRequest is used to request a signed certificate from one of the
            configured issuers.

            All fields within the CertificateRequest's `spec` are immutable after creation.
            A CertificateRequest will either succeed or fail, as denoted by its `Ready` status
            condition and its `status.failureTime` field.

            A CertificateRequest is a one-shot resource, meaning it represents a single
            point in time request for a certificate and cannot be re-used.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                Specification of the desired state of the CertificateRequest resource.
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                duration:
                  description: |-
                    Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                    issuer may choose to ignore the requested duration, just like any other
                    requested attribute.
                  type: string
                extra:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  description: |-
                    Extra contains extra attributes of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: object
                groups:
                  description: |-
                    Groups contains group membership of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: atomic
                isCA:
                  description: |-
                    Requested basic constraints isCA value. Note that the issuer may choose
                    to ignore the requested isCA value, just like any other requested attribute.

                    NOTE: If the CSR in the `Request` field has a BasicConstraints extension,
                    it must have the same isCA value as specified here.

                    If true, this will automatically add the `cert sign` usage to the list
                    of requested `usages`.
                  type: boolean
                issuerRef:
                  description: |-
                    Reference to the issuer responsible for issuing the certificate.
                    If the issuer is namespace-scoped, it must be in the same namespace
                    as the Certificate. If the issuer is cluster-scoped, it can be used
                    from any namespace.

                    The `name` field of the reference must always be specified.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                    - name
                  type: object
                request:
                  description: |-
                    The PEM-encoded X.509 certificate signing request to be submitted to the
                    issuer for signing.

                    If the CSR has a BasicConstraints extension, its isCA attribute must
                    match the `isCA` value of this CertificateRequest.
                    If the CSR has a KeyUsage extension, its key usages must match the
                    key usages in the `usages` field of this CertificateRequest.
                    If the CSR has a ExtKeyUsage extension, its extended key usages
                    must match the extended key usages in the `usages` field of this
                    CertificateRequest.
                  format: byte
                  type: string
                uid:
                  description: |-
                    UID contains the uid of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
                usages:
                  description: |-
                    Requested key usages and extended key usages.

                    NOTE: If the CSR in the `Request` field has uses the KeyUsage or
                    ExtKeyUsage extension, these extensions must have the same values
                    as specified here without any additional values.

                    If unset, defaults to `digital signature` and `key encipherment`.
                  items:
                    description: |-
                      KeyUsage specifies valid usage contexts for keys.
                      See:
                      https://tools.ietf.org/html/rfc5280#section-4.2.1.3
                      https://tools.ietf.org/html/rfc5280#section-4.2.1.12

                      Valid KeyUsage values are as follows:
                      "signing",
                      "digital signature",
                      "content commitment",
                      "key encipherment",
                      "key agreement",
                      "data encipherment",
                      "cert sign",
                      "crl sign",
                      "encipher only",
                      "decipher only",
                      "any",
                      "server auth",
                      "client auth",
                      "code signing",
                      "email protection",
                      "s/mime",
                      "ipsec end system",
                      "ipsec tunnel",
                      "ipsec user",
                      "timestamping",
                      "ocsp signing",
                      "microsoft sgc",
                      "netscape sgc"
                    enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                    type: string
                  type: array
                username:
                  description: |-
                    Username contains the name of the user that created the CertificateRequest.
                    Populated by the cert-manager webhook on creation and immutable.
                  type: string
              required:
                - issuerRef
                - request
              type: object
            status:
              description: |-
                Status of the CertificateRequest.
                This is set and managed automatically.
                Read-only.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                ca:
                  description: |-
                    The PEM encoded X.509 certificate of the signer, also known as the CA
                    (Certificate Authority).
                    This is set on a best-effort basis by different issuers.
                    If not set, the CA is assumed to be unknown/not available.
                  format: byte
                  type: string
                certificate:
                  description: |-
                    The PEM encoded X.509 certificate resulting from the certificate
                    signing request.
                    If not set, the CertificateRequest has either not been completed or has
                    failed. More information on failure can be found by checking the
                    `conditions` field.
                  format: byte
                  type: string
                conditions:
                  description: |-
                    List of status conditions to indicate the status of a CertificateRequest.
                    Known condition types are `Ready`, `InvalidRequest`, `Approved` and `Denied`.
                  items:
                    description: CertificateRequestCondition contains condition information for a CertificateRequest.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the timestamp corresponding to the last status
                          change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human readable description of the details of the last
                          transition, complementing reason.
                        type: string
                      reason:
                        description: |-
                          Reason is a brief machine readable explanation for the condition's last
                          transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: |-
                          Type of the condition, known values are (`Ready`, `InvalidRequest`,
                          `Approved`, `Denied`).
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failureTime:
                  description: |-
                    FailureTime stores the time that this CertificateRequest failed. This is
                    used to influence garbage collection and back-off.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: certificates.cert-manager.io
spec:
  conversion:
    strategy: None
  group: cert-manager.io
  names:
    categories:
      - cert-manager
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    shortNames:
      - cert
      - certs
    singular: certificate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .spec.secretName
          name: Secret
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A Certificate resource should be created to ensure an up to date and signed
            X.509 certificate is stored in the Kubernetes Secret resource named in `spec.secretName`.

            The stored certificate will be renewed before it expires (as configured by `spec.renewBefore`).
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                Specification of the desired state of the Certificate resource.
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                additionalOutputFormats:
                  description: |-
                    Defines extra output formats of the private key and signed certificate chain
                    to be written to this Certificate's target Secret.

                    This is a Beta Feature enabled by default. It can be disabled with the
                    `--feature-gates=AdditionalCertificateOutputFormats=false` option set on both
                    the controller and webhook components.
                  items:
                    description: |-
                      CertificateAdditionalOutputFormat defines an additional output format of a
                      Certificate resource. These contain supplementary data formats of the signed
                      certificate chain and paired private key.
                    properties:
                      type:
                        description: |-
                          Type is the name of the format type that should be written to the
                          Certificate's target Secret.
                        enum:
                          - DER
                          - CombinedPEM
                        type: string
                    required:
                      - type
                    type: object
                  type: array
                commonName:
                  description: |-
                    Requested common name X509 certificate subject attribute.
                    More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6
                    NOTE: TLS clients will ignore this value when any subject alternative name is
                    set (see https://tools.ietf.org/html/rfc6125#section-6.4.4).

                    Should have a length of 64 characters or fewer to avoid generating invalid CSRs.
                    Cannot be set if the `literalSubject` field is set.
                  type: string
                dnsNames:
                  description: Requested DNS subject alternative names.
                  items:
                    type: string
                  type: array
                duration:
                  description: |-
                    Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                    issuer may choose to ignore the requested duration, just like any other
                    requested attribute.

                    If unset, this defaults to 90 days.
                    Minimum accepted duration is 1 hour.
                    Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                  type: string
                emailAddresses:
                  description: Requested email subject alternative names.
                  items:
                    type: string
                  type: array
                encodeUsagesInRequest:
                  description: |-
                    Whether the KeyUsage and ExtKeyUsage extensions should be set in the encoded CSR.

                    This option defaults to true, and should only be disabled if the target
                    issuer does not support CSRs with these X509 KeyUsage/ ExtKeyUsage extensions.
                  type: boolean
                ipAddresses:
                  description: Requested IP address subject alternative names.
                  items:
                    type: string
                  type: array
                isCA:
                  description: |-
                    Requested basic constraints isCA value.
                    The isCA value is used to set the `isCA` field on the created CertificateRequest
                    resources. Note that the issuer may choose to ignore the requested isCA value, just
                    like any other requested attribute.

                    If true, this will automatically add the `cert sign` usage to the list
                    of requested `usages`.
                  type: boolean
                issuerRef:
                  description: |-
                    Reference to the issuer responsible for issuing the certificate.
                    If the issuer is namespace-scoped, it must be in the same namespace
                    as the Certificate. If the issuer is cluster-scoped, it can be used
                    from any namespace.

                    The `name` field of the reference must always be specified.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                    - name
                  type: object
                keystores:
                  description: Additional keystore output formats to be stored in the Certificate's Secret.
                  properties:
                    jks:
                      description: |-
                        JKS configures options for storing a JKS keystore in the
                        `spec.secretName` Secret resource.
                      properties:
                        alias:
                          description: |-
                            Alias specifies the alias of the key in the keystore, required by the JKS format.
                            If not provided, the default alias `certificate` will be used.
                          type: string
                        create:
                          description: |-
                            Create enables JKS keystore creation for the Certificate.
                            If true, a file named `keystore.jks` will be created in the target
                            Secret resource, encrypted using the password stored in
                            `passwordSecretRef` or `password`.
                            The keystore file will be updated immediately.
                            If the issuer provided a CA certificate, a file named `truststore.jks`
                            will also be created in the target Secret resource, encrypted using the
                            password stored in `passwordSecretRef`
                            containing the issuing Certificate Authority
                          type: boolean
                        password:
                          description: |-
                            Password provides a literal password used to encrypt the JKS keystore.
                            Mutually exclusive with passwordSecretRef.
                            One of password or passwordSecretRef must provide a password with a non-zero length.
                          type: string
                        passwordSecretRef:
                          description: |-
                            PasswordSecretRef is a reference to a non-empty key in a Secret resource
                            containing the password used to encrypt the JKS keystore.
                            Mutually exclusive with password.
                            One of password or passwordSecretRef must provide a password with a non-zero length.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - create
                      type: object
                    pkcs12:
                      description: |-
                        PKCS12 configures options for storing a PKCS12 keystore in the
                        `spec.secretName` Secret resource.
                      properties:
                        create:
                          description: |-
                            Create enables PKCS12 keystore creation for the Certificate.
                            If true, a file named `keystore.p12` will be created in the target
                            Secret resource, encrypted using the password stored in
                            `passwordSecretRef` or in `password`.
                            The keystore file will be updated immediately.
                            If the issuer provided a CA certificate, a file named `truststore.p12` will
                            also be created in the target Secret resource, encrypted using the
                            password stored in `passwordSecretRef` containing the issuing Certificate
                            Authority
                          type: boolean
                        password:
                          description: |-
                            Password provides a literal password used to encrypt the PKCS#12 keystore.
                            Mutually exclusive with passwordSecretRef.
                            One of password or passwordSecretRef must provide a password with a non-zero length.
                          type: string
                        passwordSecretRef:
                          description: |-
                            PasswordSecretRef is a reference to a non-empty key in a Secret resource
                            containing the password used to encrypt the PKCS#12 keystore.
                            Mutually exclusive with password.
                            One of password or passwordSecretRef must provide a password with a non-zero length.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        profile:
                          description: |-
                            Profile specifies the key and certificate encryption algorithms and the HMAC algorithm
                            used to create the PKCS12 keystore. Default value is `LegacyRC2` for backward compatibility.

                            If provided, allowed values are:
                            `LegacyRC2`: Deprecated. Not supported by default in OpenSSL 3 or Java 20.
                            `LegacyDES`: Less secure algorithm. Use this option for maximal compatibility.
                            `Modern2023`: Secure algorithm. Use this option in case you have to always use secure algorithms
                            (eg. because of company policy). Please note that the security of the algorithm is not that important
                            in reality, because the unencrypted certificate and private key are also stored in the Secret.
                          enum:
                            - LegacyRC2
                            - LegacyDES
                            - Modern2023
                          type: string
                      required:
                        - create
                      type: object
                  type: object
                literalSubject:
                  description: |-
                    Requested X.509 certificate subject, represented using the LDAP "String
                    Representation of a Distinguished Name" [1].
                    Important: the LDAP string format also specifies the order of the attributes
                    in the subject, this is important when issuing certs for LDAP authentication.
                    Example: `CN=foo,DC=corp,DC=example,DC=com`
                    More info [1]: https://datatracker.ietf.org/doc/html/rfc4514
                    More info: https://github.com/cert-manager/cert-manager/issues/3203
                    More info: https://github.com/cert-manager/cert-manager/issues/4424

                    Cannot be set if the `subject` or `commonName` field is set.
                  type: string
                nameConstraints:
                  description: |-
                    x.509 certificate NameConstraint extension which MUST NOT be used in a non-CA certificate.
                    More Info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.2.1.10

                    This is an Alpha Feature and is only enabled with the
                    `--feature-gates=NameConstraints=true` option set on both
                    the controller and webhook components.
                  properties:
                    critical:
                      description: if true then the name constraints are marked critical.
                      type: boolean
                    excluded:
                      description: |-
                        Excluded contains the constraints which must be disallowed. Any name matching a
                        restriction in the excluded field is invalid regardless
                        of information appearing in the permitted
                      properties:
                        dnsDomains:
                          description: DNSDomains is a list of DNS domains that are permitted or excluded.
                          items:
                            type: string
                          type: array
                        emailAddresses:
                          description: EmailAddresses is a list of Email Addresses that are permitted or excluded.
                          items:
                            type: string
                          type: array
                        ipRanges:
                          description: |-
                            IPRanges is a list of IP Ranges that are permitted or excluded.
                            This should be a valid CIDR notation.
                          items:
                            type: string
                          type: array
                        uriDomains:
                          description: URIDomains is a list of URI domains that are permitted or excluded.
                          items:
                            type: string
                          type: array
                      type: object
                    permitted:
                      description: Permitted contains the constraints in which the names must be located.
                      properties:
                        dnsDomains:
                          description: DNSDomains is a list of DNS domains that are permitted or excluded.
                          items:
                            type: string
                          type: array
                        emailAddresses:
                          description: EmailAddresses is a list of Email Addresses that are permitted or excluded.
                          items:
                            type: string
                          type: array
                        ipRanges:
                          description: |-
                            IPRanges is a list of IP Ranges that are permitted or excluded.
                            This should be a valid CIDR notation.
                          items:
                            type: string
                          type: array
                        uriDomains:
                          description: URIDomains is a list of URI domains that are permitted or excluded.
                          items:
                            type: string
                          type: array
                      type: object
                  type: object
                otherNames:
                  description: |-
                    `otherNames` is an escape hatch for SAN that allows any type. We currently restrict the support to string like otherNames, cf RFC 5280 p 37
                    Any UTF8 String valued otherName can be passed with by setting the keys oid: x.x.x.x and UTF8Value: somevalue for `otherName`.
                    Most commonly this would be UPN set with oid: 1.3.6.1.4.1.311.20.2.3
                    You should ensure that any OID passed is valid for the UTF8String type as we do not explicitly validate this.
                  items:
                    properties:
                      oid:
                        description: |-
                          OID is the object identifier for the otherName SAN.
                          The object identifier must be expressed as a dotted string, for
                          example, "1.2.840.113556.1.4.221".
                        type: string
                      utf8Value:
                        description: |-
                          utf8Value is the string value of the otherName SAN.
                          The utf8Value accepts any valid UTF8 string to set as value for the otherName SAN.
                        type: string
                    type: object
                  type: array
                privateKey:
                  description: |-
                    Private key options. These include the key algorithm and size, the used
                    encoding and the rotation policy.
                  properties:
                    algorithm:
                      description: |-
                        Algorithm is the private key algorithm of the corresponding private key
                        for this certificate.

                        If provided, allowed values are either `RSA`, `ECDSA` or `Ed25519`.
                        If `algorithm` is specified and `size` is not provided,
                        key size of 2048 will be used for `RSA` key algorithm and
                        key size of 256 will be used for `ECDSA` key algorithm.
                        key size is ignored when using the `Ed25519` key algorithm.
                      enum:
                        - RSA
                        - ECDSA
                        - Ed25519
                      type: string
                    encoding:
                      description: |-
                        The private key cryptography standards (PKCS) encoding for this
                        certificate's private key to be encoded in.

                        If provided, allowed values are `PKCS1` and `PKCS8` standing for PKCS#1
                        and PKCS#8, respectively.
                        Defaults to `PKCS1` if not specified.
                      enum:
                        - PKCS1
                        - PKCS8
                      type: string
                    rotationPolicy:
                      description: |-
                        RotationPolicy controls how private keys should be regenerated when a
                        re-issuance is being processed.

                        If set to `Never`, a private key will only be generated if one does not
                        already exist in the target `spec.secretName`. If one does exist but it
                        does not have the correct algorithm or size, a warning will be raised
                        to await user intervention.
                        If set to `Always`, a private key matching the specified requirements
                        will be generated whenever a re-issuance occurs.
                        Default is `Never` for backward compatibility.
                      enum:
                        - Never
                        - Always
                      type: string
                    size:
                      description: |-
                        Size is the key bit size of the corresponding private key for this certificate.

                        If `algorithm` is set to `RSA`, valid values are `2048`, `4096` or `8192`,
                        and will default to `2048` if not specified.
                        If `algorithm` is set to `ECDSA`, valid values are `256`, `384` or `521`,
                        and will default to `256` if not specified.
                        If `algorithm` is set to `Ed25519`, Size is ignored.
                        No other values are allowed.
                      type: integer
                  type: object
                renewBefore:
                  description: |-
                    How long before the currently issued certificate's expiry cert-manager should
                    renew the certificate. For example, if a certificate is valid for 60 minutes,
                    and `renewBefore=10m`, cert-manager will begin to attempt to renew the certificate
                    50 minutes after it was issued (i.e. when there are 10 minutes remaining until
                    the certificate is no longer valid).

                    NOTE: The actual lifetime of the issued certificate is used to determine the
                    renewal time. If an issuer returns a certificate with a different lifetime than
                    the one requested, cert-manager will use the lifetime of the issued certificate.

                    If unset, this defaults to 1/3 of the issued certificate's lifetime.
                    Minimum accepted value is 5 minutes.
                    Value must be in units accepted by Go time.ParseDuration https://golang.org/pkg/time/#ParseDuration.
                    Cannot be set if the `renewBeforePercentage` field is set.
                  type: string
                renewBeforePercentage:
                  description: |-
                    `renewBeforePercentage` is like `renewBefore`, except it is a relative percentage
                    rather than an absolute duration. For example, if a certificate is valid for 60
                    minutes, and  `renewBeforePercentage=25`, cert-manager will begin to attempt to
                    renew the certificate 45 minutes after it was issued (i.e. when there are 15
                    minutes (25%) remaining until the certificate is no longer valid).

                    NOTE: The actual lifetime of the issued certificate is used to determine the
                    renewal time. If an issuer returns a certificate with a different lifetime than
                    the one requested, cert-manager will use the lifetime of the issued certificate.

                    Value must be an integer in the range (0,100). The minimum effective
                    `renewBefore` derived from the `renewBeforePercentage` and `duration` fields is 5
                    minutes.
                    Cannot be set if the `renewBefore` field is set.
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: |-
                    The maximum number of CertificateRequest revisions that are maintained in
                    the Certificate's history. Each revision represents a single `CertificateRequest`
                    created by this Certificate, either when it was created, renewed, or Spec
                    was changed. Revisions will be removed by oldest first if the number of
                    revisions exceeds this number.

                    If set, revisionHistoryLimit must be a value of `1` or greater.
                    If unset (`nil`), revisions will not be garbage collected.
                    Default value is `nil`.
                  format: int32
                  type: integer
                secretName:
                  description: |-
                    Name of the Secret resource that will be automatically created and
                    managed by this Certificate resource. It will be populated with a
                    private key and certificate, signed by the denoted issuer. The Secret
                    resource lives in the same namespace as the Certificate resource.
                  type: string
                secretTemplate:
                  description: |-
                    Defines annotations and labels to be copied to the Certificate's Secret.
                    Labels and annotations on the Secret will be changed as they appear on the
                    SecretTemplate when added or removed. SecretTemplate annotations are added
                    in conjunction with, and cannot overwrite, the base set of annotations
                    cert-manager sets on the Certificate's Secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations is a key value map to be copied to the target Kubernetes Secret.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels is a key value map to be copied to the target Kubernetes Secret.
                      type: object
                  type: object
                subject:
                  description: |-
                    Requested set of X509 certificate subject attributes.
                    More info: https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6

                    The common name attribute is specified separately in the `commonName` field.
                    Cannot be set if the `literalSubject` field is set.
                  properties:
                    countries:
                      description: Countries to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    localities:
                      description: Cities to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizationalUnits:
                      description: Organizational Units to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    organizations:
                      description: Organizations to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    postalCodes:
                      description: Postal codes to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    provinces:
                      description: State/Provinces to be used on the Certificate.
                      items:
                        type: string
                      type: array
                    serialNumber:
                      description: Serial number to be used on the Certificate.
                      type: string
                    streetAddresses:
                      description: Street addresses to be used on the Certificate.
                      items:
                        type: string
                      type: array
                  type: object
                uris:
                  description: Requested URI subject alternative names.
                  items:
                    type: string
                  type: array
                usages:
                  description: |-
                    Requested key usages and extended key usages.
                    These usages are used to set the `usages` field on the created CertificateRequest
                    resources. If `encodeUsagesInRequest` is unset or set to `true`, the usages
                    will additionally be encoded in the `request` field which contains the CSR blob.

                    If unset, defaults to `digital signature` and `key encipherment`.
                  items:
                    description: |-
                      KeyUsage specifies valid usage contexts for keys.
                      See:
                      https://tools.ietf.org/html/rfc5280#section-4.2.1.3
                      https://tools.ietf.org/html/rfc5280#section-4.2.1.12

                      Valid KeyUsage values are as follows:
                      "signing",
                      "digital signature",
                      "content commitment",
                      "key encipherment",
                      "key agreement",
                      "data encipherment",
                      "cert sign",
                      "crl sign",
                      "encipher only",
                      "decipher only",
                      "any",
                      "server auth",
                      "client auth",
                      "code signing",
                      "email protection",
                      "s/mime",
                      "ipsec end system",
                      "ipsec tunnel",
                      "ipsec user",
                      "timestamping",
                      "ocsp signing",
                      "microsoft sgc",
                      "netscape sgc"
                    enum:
                      - signing
                      - digital signature
                      - content commitment
                      - key encipherment
                      - key agreement
                      - data encipherment
                      - cert sign
                      - crl sign
                      - encipher only
                      - decipher only
                      - any
                      - server auth
                      - client auth
                      - code signing
                      - email protection
                      - s/mime
                      - ipsec end system
                      - ipsec tunnel
                      - ipsec user
                      - timestamping
                      - ocsp signing
                      - microsoft sgc
                      - netscape sgc
                    type: string
                  type: array
              required:
                - issuerRef
                - secretName
              type: object
            status:
              description: |-
                Status of the Certificate.
                This is set and managed automatically.
                Read-only.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
              properties:
                conditions:
                  description: |-
                    List of status conditions to indicate the status of certificates.
                    Known condition types are `Ready` and `Issuing`.
                  items:
                    description: CertificateCondition contains condition information for a Certificate.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the timestamp corresponding to the last status
                          change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human readable description of the details of the last
                          transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: |-
                          If set, this represents the .metadata.generation that the condition was
                          set based upon.
                          For instance, if .metadata.generation is currently 12, but the
                          .status.condition[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the Certificate.
                        format: int64
                        type: integer
                      reason:
                        description: |-
                          Reason is a brief machine readable explanation for the condition's last
                          transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`, `Issuing`).
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                failedIssuanceAttempts:
                  description: |-
                    The number of continuous failed issuance attempts up till now. This
                    field gets removed (if set) on a successful issuance and gets set to
                    1 if unset and an issuance has failed. If an issuance has failed, the
                    delay till the next issuance will be calculated using formula
                    time.Hour * 2 ^ (failedIssuanceAttempts - 1).
                  type: integer
                lastFailureTime:
                  description: |-
                    LastFailureTime is set only if the latest issuance for this
                    Certificate failed and contains the time of the failure. If an
                    issuance has failed, the delay till the next issuance will be
                    calculated using formula time.Hour * 2 ^ (failedIssuanceAttempts -
                    1). If the latest issuance has succeeded this field will be unset.
                  format: date-time
                  type: string
                nextPrivateKeySecretName:
                  description: |-
                    The name of the Secret resource containing the private key to be used
                    for the next certificate iteration.
                    The keymanager controller will automatically set this field if the
                    `Issuing` condition is set to `True`.
                    It will automatically unset this field when the Issuing condition is
                    not set or False.
                  type: string
                notAfter:
                  description: |-
                    The expiration time of the certificate stored in the secret named
                    by this resource in `spec.secretName`.
                  format: date-time
                  type: string
                notBefore:
                  description: |-
                    The time after which the certificate stored in the secret named
                    by this resource in `spec.secretName` is valid.
                  format: date-time
                  type: string
                renewalTime:
                  description: |-
                    RenewalTime is the time at which the certificate will be next
                    renewed.
                    If not set, no upcoming renewal is scheduled.
                  format: date-time
                  type: string
                revision:
                  description: |-
                    The current 'revision' of the certificate as issued.

                    When a CertificateRequest resource is created, it will have the
                    `cert-manager.io/certificate-revision` set to one greater than the
                    current value of this field.

                    Upon issuance, this field will be set to the value of the annotation
                    on the CertificateRequest resource used to issue the certificate.

                    Persisting the value on the CertificateRequest resource allows the
                    certificates controller to know whether a request is part of an old
                    issuance or if it is part of the ongoing revision's issuance by
                    checking if the revision value in the annotation is greater than this
                    field.
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: challenges.acme.cert-manager.io
spec:
  conversion:
    strategy: None
  group: acme.cert-manager.io
  names:
    categories:
      - cert-manager
      - cert-manager-acme
    kind: Challenge
    listKind: ChallengeList
    plural: challenges
    singular: challenge
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.dnsName
          name: Domain
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Challenge is a type to represent a Challenge request with an ACME server
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                authorizationURL:
                  description: |-
                    The URL to the ACME Authorization resource that this
                    challenge is a part of.
                  type: string
                dnsName:
                  description: |-
                    dnsName is the identifier that this challenge is for, e.g. example.com.
                    If the requested DNSName is a 'wildcard', this field MUST be set to the
                    non-wildcard domain, e.g. for `*.example.com`, it must be `example.com`.
                  type: string
                issuerRef:
                  description: |-
                    References a properly configured ACME-type Issuer which should
                    be used to create this Challenge.
                    If the Issuer does not exist, processing will be retried.
                    If the Issuer is not an 'ACME' Issuer, an error will be returned and the
                    Challenge will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                    - name
                  type: object
                key:
                  description: |-
                    The ACME challenge key for this challenge
                    For HTTP01 challenges, this is the value that must be responded with to
                    complete the HTTP01 challenge in the format:
                    `<private key JWK thumbprint>.<key from acme server for challenge>`.
                    For DNS01 challenges, this is the base64 encoded SHA256 sum of the
                    `<private key JWK thumbprint>.<key from acme server for challenge>`
                    text that must be set as the TXT record content.
                  type: string
                solver:
                  description: |-
                    Contains the domain solving configuration that should be used to
                    solve this challenge resource.
                  properties:
                    dns01:
                      description: |-
                        Configures cert-manager to attempt to complete authorizations by
                        performing the DNS01 challenge flow.
                      properties:
                        acmeDNS:
                          description: |-
                            Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
                            DNS01 challenge records.
                          properties:
                            accountSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            host:
                              type: string
                          required:
                            - accountSecretRef
                            - host
                          type: object
                        akamai:
                          description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                          properties:
                            accessTokenSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            clientSecretSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            clientTokenSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            serviceConsumerDomain:
                              type: string
                          required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                          type: object
                        azureDNS:
                          description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                          properties:
                            clientID:
                              description: |-
                                Auth: Azure Service Principal:
                                The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
                                If set, ClientSecret and TenantID must also be set.
                              type: string
                            clientSecretSecretRef:
                              description: |-
                                Auth: Azure Service Principal:
                                A reference to a Secret containing the password associated with the Service Principal.
                                If set, ClientID and TenantID must also be set.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            environment:
                              description: name of the Azure environment (default AzurePublicCloud)
                              enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                              type: string
                            hostedZoneName:
                              description: name of the DNS zone that should be used
                              type: string
                            managedIdentity:
                              description: |-
                                Auth: Azure Workload Identity or Azure Managed Service Identity:
                                Settings to enable Azure Workload Identity or Azure Managed Service Identity
                                If set, ClientID, ClientSecret and TenantID must not be set.
                              properties:
                                clientID:
                                  description: client ID of the managed identity, can not be used at the same time as resourceID
                                  type: string
                                resourceID:
                                  description: |-
                                    resource ID of the managed identity, can not be used at the same time as clientID
                                    Cannot be used for Azure Managed Service Identity
                                  type: string
                                tenantID:
                                  description: tenant ID of the managed identity, can not be used at the same time as resourceID
                                  type: string
                              type: object
                            resourceGroupName:
                              description: resource group the DNS zone is located in
                              type: string
                            subscriptionID:
                              description: ID of the Azure subscription
                              type: string
                            tenantID:
                              description: |-
                                Auth: Azure Service Principal:
                                The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
                                If set, ClientID and ClientSecret must also be set.
                              type: string
                          required:
                            - resourceGroupName
                            - subscriptionID
                          type: object
                        cloudDNS:
                          description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                          properties:
                            hostedZoneName:
                              description: |-
                                HostedZoneName is an optional field that tells cert-manager in which
                                Cloud DNS zone the challenge record has to be created.
                                If left empty cert-manager will automatically choose a zone.
                              type: string
                            project:
                              type: string
                            serviceAccountSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - project
                          type: object
                        cloudflare:
                          description: Use the Cloudflare API to manage DNS01 challenge records.
                          properties:
                            apiKeySecretRef:
                              description: |-
                                API key to use to authenticate with Cloudflare.
                                Note: using an API token to authenticate is now the recommended method
                                as it allows greater control of permissions.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            apiTokenSecretRef:
                              description: API token used to authenticate with Cloudflare.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            email:
                              description: Email of the account, only required when using API key based authentication.
                              type: string
                          type: object
                        cnameStrategy:
                          description: |-
                            CNAMEStrategy configures how the DNS01 provider should handle CNAME
                            records when found in DNS zones.
                          enum:
                            - None
                            - Follow
                          type: string
                        digitalocean:
                          description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                          properties:
                            tokenSecretRef:
                              description: |-
                                A reference to a specific 'key' within a Secret resource.
                                In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - tokenSecretRef
                          type: object
                        rfc2136:
                          description: |-
                            Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                            to manage DNS01 challenge records.
                          properties:
                            nameserver:
                              description: |-
                                The IP address or hostname of an authoritative DNS server supporting
                                RFC2136 in the form host:port. If the host is an IPv6 address it must be
                                enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
                                This field is required.
                              type: string
                            tsigAlgorithm:
                              description: |-
                                The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
                                when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined.
                                Supported values are (case-insensitive): ``HMACMD5`` (default),
                                ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
                              type: string
                            tsigKeyName:
                              description: |-
                                The TSIG Key name configured in the DNS.
                                If ``tsigSecretSecretRef`` is defined, this field is required.
                              type: string
                            tsigSecretSecretRef:
                              description: |-
                                The name of the secret containing the TSIG value.
                                If ``tsigKeyName`` is defined, this field is required.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - nameserver
                          type: object
                        route53:
                          description: Use the AWS Route53 API to manage DNS01 challenge records.
                          properties:
                            accessKeyID:
                              description: |-
                                The AccessKeyID is used for authentication.
                                Cannot be set when SecretAccessKeyID is set.
                                If neither the Access Key nor Key ID are set, we fall-back to using env
                                vars, shared credentials file or AWS Instance metadata,
                                see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              type: string
                            accessKeyIDSecretRef:
                              description: |-
                                The SecretAccessKey is used for authentication. If set, pull the AWS
                                access key ID from a key within a Kubernetes Secret.
                                Cannot be set when AccessKeyID is set.
                                If neither the Access Key nor Key ID are set, we fall-back to using env
                                vars, shared credentials file or AWS Instance metadata,
                                see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            auth:
                              description: Auth configures how cert-manager authenticates.
                              properties:
                                kubernetes:
                                  description: |-
                                    Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
                                    by passing a bound ServiceAccount token.
                                  properties:
                                    serviceAccountRef:
                                      description: |-
                                        A reference to a service account that will be used to request a bound
                                        token (also known as "projected token"). To use this field, you must
                                        configure an RBAC rule to let cert-manager request a token.
                                      properties:
                                        audiences:
                                          description: |-
                                            TokenAudiences is an optional list of audiences to include in the
                                            token passed to AWS. The default token consisting of the issuer's namespace
                                            and name is always included.
                                            If unset the audience defaults to `sts.amazonaws.com`.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: Name of the ServiceAccount used to request a token.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountRef
                                  type: object
                              required:
                                - kubernetes
                              type: object
                            hostedZoneID:
                              description: If set, the provider will manage only this zone in Route53 and will not do a lookup using the route53:ListHostedZonesByName api call.
                              type: string
                            region:
                              description: |-
                                Override the AWS region.

                                Route53 is a global service and does not have regional endpoints but the
                                region specified here (or via environment variables) is used as a hint to
                                help compute the correct AWS credential scope and partition when it
                                connects to Route53. See:
                                - [Amazon Route 53 endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/r53.html)
                                - [Global services](https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html)

                                If you omit this region field, cert-manager will use the region from
                                AWS_REGION and AWS_DEFAULT_REGION environment variables, if they are set
                                in the cert-manager controller Pod.

                                The `region` field is not needed if you use [IAM Roles for Service Accounts (IRSA)](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html).
                                Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                [Amazon EKS Pod Identity Webhook](https://github.com/aws/amazon-eks-pod-identity-webhook).
                                In this case this `region` field value is ignored.

                                The `region` field is not needed if you use [EKS Pod Identities](https://docs.aws.amazon.com/eks/latest/userguide/pod-identities.html).
                                Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                [Amazon EKS Pod Identity Agent](https://github.com/aws/eks-pod-identity-agent),
                                In this case this `region` field value is ignored.
                              type: string
                            role:
                              description: |-
                                Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                              type: string
                            secretAccessKeySecretRef:
                              description: |-
                                The SecretAccessKey is used for authentication.
                                If neither the Access Key nor Key ID are set, we fall-back to using env
                                vars, shared credentials file or AWS Instance metadata,
                                see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          type: object
                        webhook:
                          description: |-
                            Configure an external webhook based DNS01 challenge solver to manage
                            DNS01 challenge records.
                          properties:
                            config:
                              description: |-
                                Additional configuration that should be passed to the webhook apiserver
                                when challenges are processed.
                                This can contain arbitrary JSON data.
                                Secret values should not be specified in this stanza.
                                If secret values are needed (e.g. credentials for a DNS service), you
                                should use a SecretKeySelector to reference a Secret resource.
                                For details on the schema of this field, consult the webhook provider
                                implementation's documentation.
                              x-kubernetes-preserve-unknown-fields: true
                            groupName:
                              description: |-
                                The API group name that should be used when POSTing ChallengePayload
                                resources to the webhook apiserver.
                                This should be the same as the GroupName specified in the webhook
                                provider implementation.
                              type: string
                            solverName:
                              description: |-
                                The name of the solver to use, as defined in the webhook provider
                                implementation.
                                This will typically be the name of the provider, e.g. 'cloudflare'.
                              type: string
                          required:
                            - groupName
                            - solverName
                          type: object
                      type: object
                    http01:
                      description: |-
                        Configures cert-manager to attempt to complete authorizations by
                        performing the HTTP01 challenge flow.
                        It is not possible to obtain certificates for wildcard domain names
                        (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                      properties:
                        gatewayHTTPRoute:
                          description: |-
                            The Gateway API is a sig-network community API that models service networking
                            in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
                            create HTTPRoutes with the specified labels in the same namespace as the challenge.
                            This solver is experimental, and fields / behaviour may change in the future.
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: |-
                                Custom labels that will be applied to HTTPRoutes created by cert-manager
                                while solving HTTP-01 challenges.
                              type: object
                            parentRefs:
                              description: |-
                                When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
                                cert-manager needs to know which parentRefs should be used when creating
                                the HTTPRoute. Usually, the parentRef references a Gateway. See:
                                https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
                              items:
                                description: |-
                                  ParentReference identifies an API object (usually a Gateway) that can be considered
                                  a parent of this resource (usually a route). There are two kinds of parent resources
                                  with "Core" support:

                                  * Gateway (Gateway conformance profile)
                                  * Service (Mesh conformance profile, ClusterIP Services only)

                                  This API may be extended in the future to support additional kinds of parent
                                  resources.

                                  The API object must be valid in the cluster; the Group and Kind must
                                  be registered in the cluster for this reference to be valid.
                                properties:
                                  group:
                                    default: gateway.networking.k8s.io
                                    description: |-
                                      Group is the group of the referent.
                                      When unspecified, "gateway.networking.k8s.io" is inferred.
                                      To set the core API group (such as for a "Service" kind referent),
                                      Group must be explicitly set to "" (empty string).

                                      Support: Core
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Gateway
                                    description: |-
                                      Kind is kind of the referent.

                                      There are two kinds of parent resources with "Core" support:

                                      * Gateway (Gateway conformance profile)
                                      * Service (Mesh conformance profile, ClusterIP Services only)

                                      Support for other resources is Implementation-Specific.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: |-
                                      Name is the name of the referent.

                                      Support: Core
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the referent. When unspecified, this refers
                                      to the local namespace of the Route.

                                      Note that there are specific rules for ParentRefs which cross namespace
                                      boundaries. Cross-namespace references are only valid if they are explicitly
                                      allowed by something in the namespace they are referring to. For example:
                                      Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                                      generic way to enable any other kind of cross-namespace reference.

                                      <gateway:experimental:description>
                                      ParentRefs from a Route to a Service in the same namespace are "producer"
                                      routes, which apply default routing rules to inbound connections from
                                      any namespace to the Service.

                                      ParentRefs from a Route to a Service in a different namespace are
                                      "consumer" routes, and these routing rules are only applied to outbound
                                      connections originating from the same namespace as the Route, for which
                                      the intended destination of the connections are a Service targeted as a
                                      ParentRef of the Route.
                                      </gateway:experimental:description>

                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port is the network port this Route targets. It can be interpreted
                                      differently based on the type of parent resource.

                                      When the parent resource is a Gateway, this targets all listeners
                                      listening on the specified port that also support this kind of Route(and
                                      select this Route). It's not recommended to set `Port` unless the
                                      networking behaviors specified in a Route must apply to a specific port
                                      as opposed to a listener(s) whose port(s) may be changed. When both Port
                                      and SectionName are specified, the name and port of the selected listener
                                      must match both specified values.

                                      <gateway:experimental:description>
                                      When the parent resource is a Service, this targets a specific port in the
                                      Service spec. When both Port (experimental) and SectionName are specified,
                                      the name and port of the selected port must match both specified values.
                                      </gateway:experimental:description>

                                      Implementations MAY choose to support other parent resources.
                                      Implementations supporting other types of parent resources MUST clearly
                                      document how/if Port is interpreted.

                                      For the purpose of status, an attachment is considered successful as
                                      long as the parent resource accepts it partially. For example, Gateway
                                      listeners can restrict which Routes can attach to them by Route kind,
                                      namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                                      from the referencing Route, the Route MUST be considered successfully
                                      attached. If no Gateway listeners accept attachment from this Route,
                                      the Route MUST be considered detached from the Gateway.

                                      Support: Extended
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  sectionName:
                                    description: |-
                                      SectionName is the name of a section within the target resource. In the
                                      following resources, SectionName is interpreted as the following:

                                      * Gateway: Listener name. When both Port (experimental) and SectionName
                                      are specified, the name and port of the selected listener must match
                                      both specified values.
                                      * Service: Port name. When both Port (experimental) and SectionName
                                      are specified, the name and port of the selected listener must match
                                      both specified values.

                                      Implementations MAY choose to support attaching Routes to other resources.
                                      If that is the case, they MUST clearly document how SectionName is
                                      interpreted.

                                      When unspecified (empty string), this will reference the entire resource.
                                      For the purpose of status, an attachment is considered successful if at
                                      least one section in the parent resource accepts it. For example, Gateway
                                      listeners can restrict which Routes can attach to them by Route kind,
                                      namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                                      the referencing Route, the Route MUST be considered successfully
                                      attached. If no Gateway listeners accept attachment from this Route, the
                                      Route MUST be considered detached from the Gateway.

                                      Support: Core
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                            podTemplate:
                              description: |-
                                Optional pod template used to configure the ACME challenge solver pods
                                used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: |-
                                    ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                    Only the 'labels' and 'annotations' fields may be set.
                                    If labels or annotations overlap with in-built values, the values here
                                    will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: |-
                                    PodSpec defines overrides for the HTTP01 challenge solver pod.
                                    Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: |-
                                                  An empty preferred scheduling term matches all objects with implicit weight 0
                                                  (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term, associated with the corresponding weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  weight:
                                                    description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - preference
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to an update), the system
                                                may or may not try to eventually evict the pod from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of node selector terms. The terms are ORed.
                                                  items:
                                                    description: |-
                                                      A null or empty node selector term matches no objects. The requirements of
                                                      them are ANDed.
                                                      The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - nodeSelectorTerms
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: |-
                                                      weight associated with matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to a pod label update), the
                                                system may or may not try to eventually evict the pod from its node.
                                                When there are multiple elements, the lists of nodes corresponding to each
                                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              items:
                                                description: |-
                                                  Defines a set of pods (namely those matching the labelSelector
                                                  relative to the given namespace(s)) that this pod should be
                                                  co-located (affinity) or not co-located (anti-affinity) with,
                                                  where co-located is defined as running on a node whose value of
                                                  the label with key <topologyKey> matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: |-
                                                      weight associated with matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the anti-affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the anti-affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to a pod label update), the
                                                system may or may not try to eventually evict the pod from its node.
                                                When there are multiple elements, the lists of nodes corresponding to each
                                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              items:
                                                description: |-
                                                  Defines a set of pods (namely those matching the labelSelector
                                                  relative to the given namespace(s)) that this pod should be
                                                  co-located (affinity) or not co-located (anti-affinity) with,
                                                  where co-located is defined as running on a node whose value of
                                                  the label with key <topologyKey> matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                      type: object
                                    imagePullSecrets:
                                      description: If specified, the pod's imagePullSecrets
                                      items:
                                        description: |-
                                          LocalObjectReference contains enough information to let you locate the
                                          referenced object inside the same namespace.
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        NodeSelector is a selector which must be true for the pod to fit on a node.
                                        Selector which must match a node's labels for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    securityContext:
                                      description: If specified, the pod's security context
                                      properties:
                                        fsGroup:
                                          description: |-
                                            A special supplemental group that applies to all containers in a pod.
                                            Some volume types allow the Kubelet to change the ownership of that volume
                                            to be owned by the pod:

                                            1. The owning GID will be the FSGroup
                                            2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                            3. The permission bits are OR'd with rw-rw----

                                            If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        fsGroupChangePolicy:
                                          description: |-
                                            fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                            before being exposed inside Pod. This field will only apply to
                                            volume types which support fsGroup based ownership(and permissions).
                                            It will have no effect on ephemeral volume types such as: secret, configmaps
                                            and emptydir.
                                            Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence
                                            for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence
                                            for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to all containers.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in SecurityContext.  If set in
                                            both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                            takes precedence for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by the containers in this pod.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                            - type
                                          type: object
                                        supplementalGroups:
                                          description: |-
                                            A list of groups applied to the first process run in each container, in addition
                                            to the container's primary GID, the fsGroup (if specified), and group memberships
                                            defined in the container image for the uid of the container process. If unspecified,
                                            no additional groups are added to any container. Note that group memberships
                                            defined in the container image for the uid of the container process are still effective,
                                            even if they are not included in this list.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          items:
                                            format: int64
                                            type: integer
                                          type: array
                                        sysctls:
                                          description: |-
                                            Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                            sysctls (by the container runtime) might fail to launch.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          items:
                                            description: Sysctl defines a kernel parameter to be set
                                            properties:
                                              name:
                                                description: Name of a property to set
                                                type: string
                                              value:
                                                description: Value of a property to set
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                      type: object
                                    serviceAccountName:
                                      description: If specified, the pod's service account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: |-
                                          The pod this Toleration is attached to tolerates any taint that matches
                                          the triple <key,value,effect> using the matching operator <operator>.
                                        properties:
                                          effect:
                                            description: |-
                                              Effect indicates the taint effect to match. Empty means match all taint effects.
                                              When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                            type: string
                                          key:
                                            description: |-
                                              Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                              If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                            type: string
                                          operator:
                                            description: |-
                                              Operator represents a key's relationship to the value.
                                              Valid operators are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for value, so that a pod can
                                              tolerate all taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: |-
                                              TolerationSeconds represents the period of time the toleration (which must be
                                              of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                              it is not set, which means tolerate the taint forever (do not evict). Zero and
                                              negative values will be treated as 0 (evict immediately) by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: |-
                                              Value is the taint value the toleration matches to.
                                              If the operator is Exists, the value should be empty, otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: |-
                                Optional service type for Kubernetes solver service. Supported values
                                are NodePort or ClusterIP. If unset, defaults to NodePort.
                              type: string
                          type: object
                        ingress:
                          description: |-
                            The ingress based HTTP01 challenge solver will solve challenges by
                            creating or modifying Ingress resources in order to route requests for
                            '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
                            provisioned by cert-manager for each Challenge to be completed.
                          properties:
                            class:
                              description: |-
                                This field configures the annotation `kubernetes.io/ingress.class` when
                                creating Ingress resources to solve ACME challenges that use this
                                challenge solver. Only one of `class`, `name` or `ingressClassName` may
                                be specified.
                              type: string
                            ingressClassName:
                              description: |-
                                This field configures the field `ingressClassName` on the created Ingress
                                resources used to solve ACME challenges that use this challenge solver.
                                This is the recommended way of configuring the ingress class. Only one of
                                `class`, `name` or `ingressClassName` may be specified.
                              type: string
                            ingressTemplate:
                              description: |-
                                Optional ingress template used to configure the ACME challenge solver
                                ingress used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: |-
                                    ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
                                    Only the 'labels' and 'annotations' fields may be set.
                                    If labels or annotations overlap with in-built values, the values here
                                    will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                      type: object
                                  type: object
                              type: object
                            name:
                              description: |-
                                The name of the ingress resource that should have ACME challenge solving
                                routes inserted into it in order to solve HTTP01 challenges.
                                This is typically used in conjunction with ingress controllers like
                                ingress-gce, which maintains a 1:1 mapping between external IPs and
                                ingress resources. Only one of `class`, `name` or `ingressClassName` may
                                be specified.
                              type: string
                            podTemplate:
                              description: |-
                                Optional pod template used to configure the ACME challenge solver pods
                                used for HTTP01 challenges.
                              properties:
                                metadata:
                                  description: |-
                                    ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                    Only the 'labels' and 'annotations' fields may be set.
                                    If labels or annotations overlap with in-built values, the values here
                                    will override the in-built values.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                      type: object
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: Labels that should be added to the created ACME HTTP01 solver pods.
                                      type: object
                                  type: object
                                spec:
                                  description: |-
                                    PodSpec defines overrides for the HTTP01 challenge solver pod.
                                    Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                    All other fields will be ignored.
                                  properties:
                                    affinity:
                                      description: If specified, the pod's scheduling constraints
                                      properties:
                                        nodeAffinity:
                                          description: Describes node affinity scheduling rules for the pod.
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: |-
                                                  An empty preferred scheduling term matches all objects with implicit weight 0
                                                  (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                properties:
                                                  preference:
                                                    description: A node selector term, associated with the corresponding weight.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  weight:
                                                    description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - preference
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to an update), the system
                                                may or may not try to eventually evict the pod from its node.
                                              properties:
                                                nodeSelectorTerms:
                                                  description: Required. A list of node selector terms. The terms are ORed.
                                                  items:
                                                    description: |-
                                                      A null or empty node selector term matches no objects. The requirements of
                                                      them are ANDed.
                                                      The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                    properties:
                                                      matchExpressions:
                                                        description: A list of node selector requirements by node's labels.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchFields:
                                                        description: A list of node selector requirements by node's fields.
                                                        items:
                                                          description: |-
                                                            A node selector requirement is a selector that contains values, a key, and an operator
                                                            that relates the key and values.
                                                          properties:
                                                            key:
                                                              description: The label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                Represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                An array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                                array must have a single element, which will be interpreted as an integer.
                                                                This array is replaced during a strategic merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - nodeSelectorTerms
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          type: object
                                        podAffinity:
                                          description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: |-
                                                      weight associated with matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to a pod label update), the
                                                system may or may not try to eventually evict the pod from its node.
                                                When there are multiple elements, the lists of nodes corresponding to each
                                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              items:
                                                description: |-
                                                  Defines a set of pods (namely those matching the labelSelector
                                                  relative to the given namespace(s)) that this pod should be
                                                  co-located (affinity) or not co-located (anti-affinity) with,
                                                  where co-located is defined as running on a node whose value of
                                                  the label with key <topologyKey> matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        podAntiAffinity:
                                          description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                          properties:
                                            preferredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                The scheduler will prefer to schedule pods to nodes that satisfy
                                                the anti-affinity expressions specified by this field, but it may choose
                                                a node that violates one or more of the expressions. The node that is
                                                most preferred is the one with the greatest sum of weights, i.e.
                                                for each node that meets all of the scheduling requirements (resource
                                                request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                compute a sum by iterating through the elements of this field and adding
                                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                node(s) with the highest sum are the most preferred.
                                              items:
                                                description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                properties:
                                                  podAffinityTerm:
                                                    description: Required. A pod affinity term, associated with the corresponding weight.
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  weight:
                                                    description: |-
                                                      weight associated with matching the corresponding podAffinityTerm,
                                                      in the range 1-100.
                                                    format: int32
                                                    type: integer
                                                required:
                                                  - podAffinityTerm
                                                  - weight
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            requiredDuringSchedulingIgnoredDuringExecution:
                                              description: |-
                                                If the anti-affinity requirements specified by this field are not met at
                                                scheduling time, the pod will not be scheduled onto the node.
                                                If the anti-affinity requirements specified by this field cease to be met
                                                at some point during pod execution (e.g. due to a pod label update), the
                                                system may or may not try to eventually evict the pod from its node.
                                                When there are multiple elements, the lists of nodes corresponding to each
                                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                              items:
                                                description: |-
                                                  Defines a set of pods (namely those matching the labelSelector
                                                  relative to the given namespace(s)) that this pod should be
                                                  co-located (affinity) or not co-located (anti-affinity) with,
                                                  where co-located is defined as running on a node whose value of
                                                  the label with key <topologyKey> matches that of any node on which
                                                  a pod of the set of pods is running
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                      type: object
                                    imagePullSecrets:
                                      description: If specified, the pod's imagePullSecrets
                                      items:
                                        description: |-
                                          LocalObjectReference contains enough information to let you locate the
                                          referenced object inside the same namespace.
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                    nodeSelector:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        NodeSelector is a selector which must be true for the pod to fit on a node.
                                        Selector which must match a node's labels for the pod to be scheduled on that node.
                                        More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                      type: object
                                    priorityClassName:
                                      description: If specified, the pod's priorityClassName.
                                      type: string
                                    securityContext:
                                      description: If specified, the pod's security context
                                      properties:
                                        fsGroup:
                                          description: |-
                                            A special supplemental group that applies to all containers in a pod.
                                            Some volume types allow the Kubelet to change the ownership of that volume
                                            to be owned by the pod:

                                            1. The owning GID will be the FSGroup
                                            2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                            3. The permission bits are OR'd with rw-rw----

                                            If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        fsGroupChangePolicy:
                                          description: |-
                                            fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                            before being exposed inside Pod. This field will only apply to
                                            volume types which support fsGroup based ownership(and permissions).
                                            It will have no effect on ephemeral volume types such as: secret, configmaps
                                            and emptydir.
                                            Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          type: string
                                        runAsGroup:
                                          description: |-
                                            The GID to run the entrypoint of the container process.
                                            Uses runtime default if unset.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence
                                            for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        runAsNonRoot:
                                          description: |-
                                            Indicates that the container must run as a non-root user.
                                            If true, the Kubelet will validate the image at runtime to ensure that it
                                            does not run as UID 0 (root) and fail to start the container if it does.
                                            If unset or false, no such validation will be performed.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                                          type: boolean
                                        runAsUser:
                                          description: |-
                                            The UID to run the entrypoint of the container process.
                                            Defaults to user specified in image metadata if unspecified.
                                            May also be set in SecurityContext.  If set in both SecurityContext and
                                            PodSecurityContext, the value specified in SecurityContext takes precedence
                                            for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          format: int64
                                          type: integer
                                        seLinuxOptions:
                                          description: |-
                                            The SELinux context to be applied to all containers.
                                            If unspecified, the container runtime will allocate a random SELinux context for each
                                            container.  May also be set in SecurityContext.  If set in
                                            both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                            takes precedence for that container.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            level:
                                              description: Level is SELinux level label that applies to the container.
                                              type: string
                                            role:
                                              description: Role is a SELinux role label that applies to the container.
                                              type: string
                                            type:
                                              description: Type is a SELinux type label that applies to the container.
                                              type: string
                                            user:
                                              description: User is a SELinux user label that applies to the container.
                                              type: string
                                          type: object
                                        seccompProfile:
                                          description: |-
                                            The seccomp options to use by the containers in this pod.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          properties:
                                            localhostProfile:
                                              description: |-
                                                localhostProfile indicates a profile defined in a file on the node should be used.
                                                The profile must be preconfigured on the node to work.
                                                Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                Must be set if type is "Localhost". Must NOT be set for any other type.
                                              type: string
                                            type:
                                              description: |-
                                                type indicates which kind of seccomp profile will be applied.
                                                Valid options are:

                                                Localhost - a profile defined in a file on the node should be used.
                                                RuntimeDefault - the container runtime default profile should be used.
                                                Unconfined - no profile should be applied.
                                              type: string
                                          required:
                                            - type
                                          type: object
                                        supplementalGroups:
                                          description: |-
                                            A list of groups applied to the first process run in each container, in addition
                                            to the container's primary GID, the fsGroup (if specified), and group memberships
                                            defined in the container image for the uid of the container process. If unspecified,
                                            no additional groups are added to any container. Note that group memberships
                                            defined in the container image for the uid of the container process are still effective,
                                            even if they are not included in this list.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          items:
                                            format: int64
                                            type: integer
                                          type: array
                                        sysctls:
                                          description: |-
                                            Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                            sysctls (by the container runtime) might fail to launch.
                                            Note that this field cannot be set when spec.os.name is windows.
                                          items:
                                            description: Sysctl defines a kernel parameter to be set
                                            properties:
                                              name:
                                                description: Name of a property to set
                                                type: string
                                              value:
                                                description: Value of a property to set
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                      type: object
                                    serviceAccountName:
                                      description: If specified, the pod's service account
                                      type: string
                                    tolerations:
                                      description: If specified, the pod's tolerations.
                                      items:
                                        description: |-
                                          The pod this Toleration is attached to tolerates any taint that matches
                                          the triple <key,value,effect> using the matching operator <operator>.
                                        properties:
                                          effect:
                                            description: |-
                                              Effect indicates the taint effect to match. Empty means match all taint effects.
                                              When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                            type: string
                                          key:
                                            description: |-
                                              Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                              If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                            type: string
                                          operator:
                                            description: |-
                                              Operator represents a key's relationship to the value.
                                              Valid operators are Exists and Equal. Defaults to Equal.
                                              Exists is equivalent to wildcard for value, so that a pod can
                                              tolerate all taints of a particular category.
                                            type: string
                                          tolerationSeconds:
                                            description: |-
                                              TolerationSeconds represents the period of time the toleration (which must be
                                              of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                              it is not set, which means tolerate the taint forever (do not evict). Zero and
                                              negative values will be treated as 0 (evict immediately) by the system.
                                            format: int64
                                            type: integer
                                          value:
                                            description: |-
                                              Value is the taint value the toleration matches to.
                                              If the operator is Exists, the value should be empty, otherwise just a regular string.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            serviceType:
                              description: |-
                                Optional service type for Kubernetes solver service. Supported values
                                are NodePort or ClusterIP. If unset, defaults to NodePort.
                              type: string
                          type: object
                      type: object
                    selector:
                      description: |-
                        Selector selects a set of DNSNames on the Certificate resource that
                        should be solved using this challenge solver.
                        If not specified, the solver will be treated as the 'default' solver
                        with the lowest priority, i.e. if any other solver has a more specific
                        match, it will be used instead.
                      properties:
                        dnsNames:
                          description: |-
                            List of DNSNames that this solver will be used to solve.
                            If specified and a match is found, a dnsNames selector will take
                            precedence over a dnsZones selector.
                            If multiple solvers match with the same dnsNames value, the solver
                            with the most matching labels in matchLabels will be selected.
                            If neither has more matches, the solver defined earlier in the list
                            will be selected.
                          items:
                            type: string
                          type: array
                        dnsZones:
                          description: |-
                            List of DNSZones that this solver will be used to solve.
                            The most specific DNS zone match specified here will take precedence
                            over other DNS zone matches, so a solver specifying sys.example.com
                            will be selected over one specifying example.com for the domain
                            www.sys.example.com.
                            If multiple solvers match with the same dnsZones value, the solver
                            with the most matching labels in matchLabels will be selected.
                            If neither has more matches, the solver defined earlier in the list
                            will be selected.
                          items:
                            type: string
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            A label selector that is used to refine the set of certificate's that
                            this challenge solver will apply to.
                          type: object
                      type: object
                  type: object
                token:
                  description: |-
                    The ACME challenge token for this challenge.
                    This is the raw value returned from the ACME server.
                  type: string
                type:
                  description: |-
                    The type of ACME challenge this resource represents.
                    One of "HTTP-01" or "DNS-01".
                  enum:
                    - HTTP-01
                    - DNS-01
                  type: string
                url:
                  description: |-
                    The URL of the ACME Challenge resource for this challenge.
                    This can be used to lookup details about the status of this challenge.
                  type: string
                wildcard:
                  description: |-
                    wildcard will be true if this challenge is for a wildcard identifier,
                    for example '*.example.com'.
                  type: boolean
              required:
                - authorizationURL
                - dnsName
                - issuerRef
                - key
                - solver
                - token
                - type
                - url
              type: object
            status:
              properties:
                presented:
                  description: |-
                    presented will be set to true if the challenge values for this challenge
                    are currently 'presented'.
                    This *does not* imply the self check is passing. Only that the values
                    have been 'submitted' for the appropriate challenge mechanism (i.e. the
                    DNS01 TXT record has been presented, or the HTTP01 configuration has been
                    configured).
                  type: boolean
                processing:
                  description: |-
                    Used to denote whether this challenge should be processed or not.
                    This field will only be set to true by the 'scheduling' component.
                    It will only be set to false by the 'challenges' controller, after the
                    challenge has reached a final state or timed out.
                    If this field is set to false, the challenge controller will not take
                    any more action.
                  type: boolean
                reason:
                  description: |-
                    Contains human readable information on why the Challenge is in the
                    current state.
                  type: string
                state:
                  description: |-
                    Contains the current 'state' of the challenge.
                    If not set, the state of the challenge is unknown.
                  enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                  type: string
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clustercompliancereports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterComplianceReport
    listKind: ClusterComplianceReportList
    plural: clustercompliancereports
    shortNames:
      - compliance
    singular: clustercompliancereport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of checks that failed
          jsonPath: .status.summary.failCount
          name: Fail
          priority: 1
          type: integer
        - description: The number of checks that passed
          jsonPath: .status.summary.passCount
          name: Pass
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterComplianceReport is a specification for the ClusterComplianceReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReportSpec represent the compliance specification
              properties:
                compliance:
                  properties:
                    controls:
                      description: Control represent the cps controls data and mapping checks
                      items:
                        description: Control represent the cps controls data and mapping checks
                        properties:
                          checks:
                            items:
                              description: SpecCheck represent the scanner who perform the control check
                              properties:
                                id:
                                  description: id define the check id as produced by scanner
                                  type: string
                              required:
                                - id
                              type: object
                            type: array
                          commands:
                            items:
                              description: Commands represent the commands to be executed by the node-collector
                              properties:
                                id:
                                  description: id define the commands id
                                  type: string
                              required:
                                - id
                              type: object
                            type: array
                          defaultStatus:
                            description: define the default value for check status in case resource not found
                            enum:
                              - PASS
                              - WARN
                              - FAIL
                            type: string
                          description:
                            type: string
                          id:
                            description: id define the control check id
                            type: string
                          name:
                            type: string
                          severity:
                            description: define the severity of the control
                            enum:
                              - CRITICAL
                              - HIGH
                              - MEDIUM
                              - LOW
                              - UNKNOWN
                            type: string
                        required:
                          - id
                          - name
                          - severity
                        type: object
                      type: array
                    description:
                      type: string
                    id:
                      type: string
                    platform:
                      type: string
                    relatedResources:
                      items:
                        type: string
                      type: array
                    title:
                      type: string
                    type:
                      type: string
                    version:
                      type: string
                  required:
                    - controls
                    - description
                    - id
                    - platform
                    - relatedResources
                    - title
                    - type
                    - version
                  type: object
                cron:
                  description: cron define the intervals for report generation
                  pattern: ^(((([\*]{1}){1})|((\*\/){0,1}(([0-9]{1}){1}|(([1-5]{1}){1}([0-9]{1}){1}){1}))) ((([\*]{1}){1})|((\*\/){0,1}(([0-9]{1}){1}|(([1]{1}){1}([0-9]{1}){1}){1}|([2]{1}){1}([0-3]{1}){1}))) ((([\*]{1}){1})|((\*\/){0,1}(([1-9]{1}){1}|(([1-2]{1}){1}([0-9]{1}){1}){1}|([3]{1}){1}([0-1]{1}){1}))) ((([\*]{1}){1})|((\*\/){0,1}(([1-9]{1}){1}|(([1-2]{1}){1}([0-9]{1}){1}){1}|([3]{1}){1}([0-1]{1}){1}))|(jan|feb|mar|apr|may|jun|jul|aug|sep|okt|nov|dec)) ((([\*]{1}){1})|((\*\/){0,1}(([0-7]{1}){1}))|(sun|mon|tue|wed|thu|fri|sat)))$
                  type: string
                reportType:
                  enum:
                    - summary
                    - all
                  type: string
              required:
                - compliance
                - cron
                - reportType
              type: object
            status:
              properties:
                detailReport:
                  description: ComplianceReport represents a kubernetes scan report
                  properties:
                    description:
                      type: string
                    id:
                      type: string
                    relatedVersion:
                      items:
                        type: string
                      type: array
                    results:
                      items:
                        properties:
                          checks:
                            items:
                              description: ComplianceCheck provides the result of conducting a single compliance step.
                              properties:
                                category:
                                  type: string
                                checkID:
                                  type: string
                                description:
                                  type: string
                                messages:
                                  items:
                                    type: string
                                  type: array
                                remediation:
                                  description: Remediation provides description or links to external resources to remediate failing check.
                                  type: string
                                severity:
                                  description: Severity level of a vulnerability or a configuration audit check.
                                  type: string
                                success:
                                  type: boolean
                                target:
                                  type: string
                                title:
                                  type: string
                              required:
                                - checkID
                                - severity
                                - success
                              type: object
                            type: array
                          description:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          severity:
                            type: string
                          status:
                            type: string
                        required:
                          - checks
                        type: object
                      type: array
                    title:
                      type: string
                    version:
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                summary:
                  properties:
                    failCount:
                      type: integer
                    passCount:
                      type: integer
                  type: object
                summaryReport:
                  description: SummaryReport represents a kubernetes scan report with consolidated findings
                  properties:
                    controlCheck:
                      items:
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          severity:
                            type: string
                          totalFail:
                            type: integer
                        type: object
                      type: array
                    id:
                      type: string
                    title:
                      type: string
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                updateTimestamp:
                  format: date-time
                  type: string
              required:
                - updateTimestamp
              type: object
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clusterconfigauditreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterConfigAuditReport
    listKind: ClusterConfigAuditReportList
    plural: clusterconfigauditreports
    shortNames:
      - clusterconfigaudit
    singular: clusterconfigauditreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The name of the config audit scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterConfigAuditReport is a specification for the ClusterConfigAuditReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: ConfigAuditSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
                updateTimestamp:
                  format: date-time
                  type: string
              required:
                - checks
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clusterinfraassessmentreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterInfraAssessmentReport
    listKind: ClusterInfraAssessmentReportList
    plural: clusterinfraassessmentreports
    shortNames:
      - clusterinfraassessment
    singular: clusterinfraassessmentreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The name of the infra assessement scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterInfraAssessmentReport is a specification for the ClusterInfraAssessmentReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: InfraAssessmentSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
              required:
                - checks
                - scanner
                - summary
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: clusterissuers.cert-manager.io
spec:
  conversion:
    strategy: None
  group: cert-manager.io
  names:
    categories:
      - cert-manager
    kind: ClusterIssuer
    listKind: ClusterIssuerList
    plural: clusterissuers
    singular: clusterissuer
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            A ClusterIssuer represents a certificate issuing authority which can be
            referenced as part of `issuerRef` fields.
            It is similar to an Issuer, however it is cluster-scoped and therefore can
            be referenced by resources that exist in *any* namespace, not just the same
            namespace as the referent.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the ClusterIssuer resource.
              properties:
                acme:
                  description: |-
                    ACME configures this issuer to communicate with a RFC8555 (ACME) server
                    to obtain signed x509 certificates.
                  properties:
                    caBundle:
                      description: |-
                        Base64-encoded bundle of PEM CAs which can be used to validate the certificate
                        chain presented by the ACME server.
                        Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
                        kinds of security vulnerabilities.
                        If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
                        the container is used to validate the TLS connection.
                      format: byte
                      type: string
                    disableAccountKeyGeneration:
                      description: |-
                        Enables or disables generating a new ACME account key.
                        If true, the Issuer resource will *not* request a new account but will expect
                        the account key to be supplied via an existing secret.
                        If false, the cert-manager system will generate a new ACME account key
                        for the Issuer.
                        Defaults to false.
                      type: boolean
                    email:
                      description: |-
                        Email is the email address to be associated with the ACME account.
                        This field is optional, but it is strongly recommended to be set.
                        It will be used to contact you in case of issues with your account or
                        certificates, including expiry notification emails.
                        This field may be updated after the account is initially registered.
                      type: string
                    enableDurationFeature:
                      description: |-
                        Enables requesting a Not After date on certificates that matches the
                        duration of the certificate. This is not supported by all ACME servers
                        like Let's Encrypt. If set to true when the ACME server does not support
                        it, it will create an error on the Order.
                        Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: |-
                        ExternalAccountBinding is a reference to a CA external account of the ACME
                        server.
                        If set, upon registration cert-manager will attempt to associate the given
                        external account credentials with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: |-
                            Deprecated: keyAlgorithm field exists for historical compatibility
                            reasons and should not be used. The algorithm is now hardcoded to HS256
                            in golang/x/crypto/acme.
                          enum:
                            - HS256
                            - HS384
                            - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External Account is bound to.
                          type: string
                        keySecretRef:
                          description: |-
                            keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
                            Secret which holds the symmetric MAC key of the External Account Binding.
                            The `key` is the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself, or indeed with
                            the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded, base64 URL
                            encoded data.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - keyID
                        - keySecretRef
                      type: object
                    preferredChain:
                      description: |-
                        PreferredChain is the chain to use if the ACME server outputs multiple.
                        PreferredChain is no guarantee that this one gets delivered by the ACME
                        endpoint.
                        For example, for Let's Encrypt's DST crosssign you would use:
                        "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
                        This value picks the first certificate bundle in the combined set of
                        ACME default and alternative chains that has a root-most certificate with
                        this value as its issuer's commonname.
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: |-
                        PrivateKey is the name of a Kubernetes Secret resource that will be used to
                        store the automatically generated ACME account private key.
                        Optionally, a `key` may be specified to select a specific entry within
                        the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be used.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    server:
                      description: |-
                        Server is the URL used to access the ACME server's 'directory' endpoint.
                        For example, for Let's Encrypt's staging endpoint, you would use:
                        "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.
                      type: string
                    skipTLSVerify:
                      description: |-
                        INSECURE: Enables or disables validation of the ACME server TLS certificate.
                        If true, requests to the ACME server will not have the TLS certificate chain
                        validated.
                        Mutually exclusive with CABundle; prefer using CABundle to prevent various
                        kinds of security vulnerabilities.
                        Only enable this option in development environments.
                        If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
                        the container is used to validate the TLS connection.
                        Defaults to false.
                      type: boolean
                    solvers:
                      description: |-
                        Solvers is a list of challenge solvers that will be used to solve
                        ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain certificates
                        from an ACME server.
                        For more information, see: https://cert-manager.io/docs/configuration/acme/
                      items:
                        description: |-
                          An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
                          A selector may be provided to use different solving strategies for different DNS names.
                          Only one of HTTP01 or DNS01 must be provided.
                        properties:
                          dns01:
                            description: |-
                              Configures cert-manager to attempt to complete authorizations by
                              performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: |-
                                  Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
                                  DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                  - accountSecretRef
                                  - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                  - accessTokenSecretRef
                                  - clientSecretSecretRef
                                  - clientTokenSecretRef
                                  - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
                                      If set, ClientSecret and TenantID must also be set.
                                    type: string
                                  clientSecretSecretRef:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      A reference to a Secret containing the password associated with the Service Principal.
                                      If set, ClientID and TenantID must also be set.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default AzurePublicCloud)
                                    enum:
                                      - AzurePublicCloud
                                      - AzureChinaCloud
                                      - AzureGermanCloud
                                      - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should be used
                                    type: string
                                  managedIdentity:
                                    description: |-
                                      Auth: Azure Workload Identity or Azure Managed Service Identity:
                                      Settings to enable Azure Workload Identity or Azure Managed Service Identity
                                      If set, ClientID, ClientSecret and TenantID must not be set.
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: |-
                                          resource ID of the managed identity, can not be used at the same time as clientID
                                          Cannot be used for Azure Managed Service Identity
                                        type: string
                                      tenantID:
                                        description: tenant ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
                                      If set, ClientID and ClientSecret must also be set.
                                    type: string
                                required:
                                  - resourceGroupName
                                  - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: |-
                                      HostedZoneName is an optional field that tells cert-manager in which
                                      Cloud DNS zone the challenge record has to be created.
                                      If left empty cert-manager will automatically choose a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01 challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: |-
                                      API key to use to authenticate with Cloudflare.
                                      Note: using an API token to authenticate is now the recommended method
                                      as it allows greater control of permissions.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with Cloudflare.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  email:
                                    description: Email of the account, only required when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: |-
                                  CNAMEStrategy configures how the DNS01 provider should handle CNAME
                                  records when found in DNS zones.
                                enum:
                                  - None
                                  - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - tokenSecretRef
                                type: object
                              rfc2136:
                                description: |-
                                  Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: |-
                                      The IP address or hostname of an authoritative DNS server supporting
                                      RFC2136 in the form host:port. If the host is an IPv6 address it must be
                                      enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
                                      This field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: |-
                                      The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
                                      when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined.
                                      Supported values are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
                                    type: string
                                  tsigKeyName:
                                    description: |-
                                      The TSIG Key name configured in the DNS.
                                      If ``tsigSecretSecretRef`` is defined, this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: |-
                                      The name of the secret containing the TSIG value.
                                      If ``tsigKeyName`` is defined, this field is required.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01 challenge records.
                                properties:
                                  accessKeyID:
                                    description: |-
                                      The AccessKeyID is used for authentication.
                                      Cannot be set when SecretAccessKeyID is set.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: |-
                                      The SecretAccessKey is used for authentication. If set, pull the AWS
                                      access key ID from a key within a Kubernetes Secret.
                                      Cannot be set when AccessKeyID is set.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  auth:
                                    description: Auth configures how cert-manager authenticates.
                                    properties:
                                      kubernetes:
                                        description: |-
                                          Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
                                          by passing a bound ServiceAccount token.
                                        properties:
                                          serviceAccountRef:
                                            description: |-
                                              A reference to a service account that will be used to request a bound
                                              token (also known as "projected token"). To use this field, you must
                                              configure an RBAC rule to let cert-manager request a token.
                                            properties:
                                              audiences:
                                                description: |-
                                                  TokenAudiences is an optional list of audiences to include in the
                                                  token passed to AWS. The default token consisting of the issuer's namespace
                                                  and name is always included.
                                                  If unset the audience defaults to `sts.amazonaws.com`.
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: Name of the ServiceAccount used to request a token.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                    required:
                                      - kubernetes
                                    type: object
                                  hostedZoneID:
                                    description: If set, the provider will manage only this zone in Route53 and will not do a lookup using the route53:ListHostedZonesByName api call.
                                    type: string
                                  region:
                                    description: |-
                                      Override the AWS region.

                                      Route53 is a global service and does not have regional endpoints but the
                                      region specified here (or via environment variables) is used as a hint to
                                      help compute the correct AWS credential scope and partition when it
                                      connects to Route53. See:
                                      - [Amazon Route 53 endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/r53.html)
                                      - [Global services](https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html)

                                      If you omit this region field, cert-manager will use the region from
                                      AWS_REGION and AWS_DEFAULT_REGION environment variables, if they are set
                                      in the cert-manager controller Pod.

                                      The `region` field is not needed if you use [IAM Roles for Service Accounts (IRSA)](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html).
                                      Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                      [Amazon EKS Pod Identity Webhook](https://github.com/aws/amazon-eks-pod-identity-webhook).
                                      In this case this `region` field value is ignored.

                                      The `region` field is not needed if you use [EKS Pod Identities](https://docs.aws.amazon.com/eks/latest/userguide/pod-identities.html).
                                      Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                      [Amazon EKS Pod Identity Agent](https://github.com/aws/eks-pod-identity-agent),
                                      In this case this `region` field value is ignored.
                                    type: string
                                  role:
                                    description: |-
                                      Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                      or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: |-
                                      The SecretAccessKey is used for authentication.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              webhook:
                                description: |-
                                  Configure an external webhook based DNS01 challenge solver to manage
                                  DNS01 challenge records.
                                properties:
                                  config:
                                    description: |-
                                      Additional configuration that should be passed to the webhook apiserver
                                      when challenges are processed.
                                      This can contain arbitrary JSON data.
                                      Secret values should not be specified in this stanza.
                                      If secret values are needed (e.g. credentials for a DNS service), you
                                      should use a SecretKeySelector to reference a Secret resource.
                                      For details on the schema of this field, consult the webhook provider
                                      implementation's documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: |-
                                      The API group name that should be used when POSTing ChallengePayload
                                      resources to the webhook apiserver.
                                      This should be the same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: |-
                                      The name of the solver to use, as defined in the webhook provider
                                      implementation.
                                      This will typically be the name of the provider, e.g. 'cloudflare'.
                                    type: string
                                required:
                                  - groupName
                                  - solverName
                                type: object
                            type: object
                          http01:
                            description: |-
                              Configures cert-manager to attempt to complete authorizations by
                              performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard domain names
                              (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: |-
                                  The Gateway API is a sig-network community API that models service networking
                                  in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
                                  create HTTPRoutes with the specified labels in the same namespace as the challenge.
                                  This solver is experimental, and fields / behaviour may change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      Custom labels that will be applied to HTTPRoutes created by cert-manager
                                      while solving HTTP-01 challenges.
                                    type: object
                                  parentRefs:
                                    description: |-
                                      When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
                                      cert-manager needs to know which parentRefs should be used when creating
                                      the HTTPRoute. Usually, the parentRef references a Gateway. See:
                                      https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
                                    items:
                                      description: |-
                                        ParentReference identifies an API object (usually a Gateway) that can be considered
                                        a parent of this resource (usually a route). There are two kinds of parent resources
                                        with "Core" support:

                                        * Gateway (Gateway conformance profile)
                                        * Service (Mesh conformance profile, ClusterIP Services only)

                                        This API may be extended in the future to support additional kinds of parent
                                        resources.

                                        The API object must be valid in the cluster; the Group and Kind must
                                        be registered in the cluster for this reference to be valid.
                                      properties:
                                        group:
                                          default: gateway.networking.k8s.io
                                          description: |-
                                            Group is the group of the referent.
                                            When unspecified, "gateway.networking.k8s.io" is inferred.
                                            To set the core API group (such as for a "Service" kind referent),
                                            Group must be explicitly set to "" (empty string).

                                            Support: Core
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Gateway
                                          description: |-
                                            Kind is kind of the referent.

                                            There are two kinds of parent resources with "Core" support:

                                            * Gateway (Gateway conformance profile)
                                            * Service (Mesh conformance profile, ClusterIP Services only)

                                            Support for other resources is Implementation-Specific.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: |-
                                            Name is the name of the referent.

                                            Support: Core
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the referent. When unspecified, this refers
                                            to the local namespace of the Route.

                                            Note that there are specific rules for ParentRefs which cross namespace
                                            boundaries. Cross-namespace references are only valid if they are explicitly
                                            allowed by something in the namespace they are referring to. For example:
                                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                                            generic way to enable any other kind of cross-namespace reference.

                                            <gateway:experimental:description>
                                            ParentRefs from a Route to a Service in the same namespace are "producer"
                                            routes, which apply default routing rules to inbound connections from
                                            any namespace to the Service.

                                            ParentRefs from a Route to a Service in a different namespace are
                                            "consumer" routes, and these routing rules are only applied to outbound
                                            connections originating from the same namespace as the Route, for which
                                            the intended destination of the connections are a Service targeted as a
                                            ParentRef of the Route.
                                            </gateway:experimental:description>

                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port is the network port this Route targets. It can be interpreted
                                            differently based on the type of parent resource.

                                            When the parent resource is a Gateway, this targets all listeners
                                            listening on the specified port that also support this kind of Route(and
                                            select this Route). It's not recommended to set `Port` unless the
                                            networking behaviors specified in a Route must apply to a specific port
                                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                                            and SectionName are specified, the name and port of the selected listener
                                            must match both specified values.

                                            <gateway:experimental:description>
                                            When the parent resource is a Service, this targets a specific port in the
                                            Service spec. When both Port (experimental) and SectionName are specified,
                                            the name and port of the selected port must match both specified values.
                                            </gateway:experimental:description>

                                            Implementations MAY choose to support other parent resources.
                                            Implementations supporting other types of parent resources MUST clearly
                                            document how/if Port is interpreted.

                                            For the purpose of status, an attachment is considered successful as
                                            long as the parent resource accepts it partially. For example, Gateway
                                            listeners can restrict which Routes can attach to them by Route kind,
                                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                                            from the referencing Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept attachment from this Route,
                                            the Route MUST be considered detached from the Gateway.

                                            Support: Extended
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        sectionName:
                                          description: |-
                                            SectionName is the name of a section within the target resource. In the
                                            following resources, SectionName is interpreted as the following:

                                            * Gateway: Listener name. When both Port (experimental) and SectionName
                                            are specified, the name and port of the selected listener must match
                                            both specified values.
                                            * Service: Port name. When both Port (experimental) and SectionName
                                            are specified, the name and port of the selected listener must match
                                            both specified values.

                                            Implementations MAY choose to support attaching Routes to other resources.
                                            If that is the case, they MUST clearly document how SectionName is
                                            interpreted.

                                            When unspecified (empty string), this will reference the entire resource.
                                            For the purpose of status, an attachment is considered successful if at
                                            least one section in the parent resource accepts it. For example, Gateway
                                            listeners can restrict which Routes can attach to them by Route kind,
                                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                                            the referencing Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept attachment from this Route, the
                                            Route MUST be considered detached from the Gateway.

                                            Support: Core
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    type: array
                                  podTemplate:
                                    description: |-
                                      Optional pod template used to configure the ACME challenge solver pods
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: |-
                                          PodSpec defines overrides for the HTTP01 challenge solver pod.
                                          Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: |-
                                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - preference
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to an update), the system
                                                      may or may not try to eventually evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        items:
                                                          description: |-
                                                            A null or empty node selector term matches no objects. The requirements of
                                                            them are ANDed.
                                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the anti-affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the anti-affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the anti-affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: |-
                                                LocalObjectReference contains enough information to let you locate the
                                                referenced object inside the same namespace.
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              NodeSelector is a selector which must be true for the pod to fit on a node.
                                              Selector which must match a node's labels for the pod to be scheduled on that node.
                                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          securityContext:
                                            description: If specified, the pod's security context
                                            properties:
                                              fsGroup:
                                                description: |-
                                                  A special supplemental group that applies to all containers in a pod.
                                                  Some volume types allow the Kubelet to change the ownership of that volume
                                                  to be owned by the pod:

                                                  1. The owning GID will be the FSGroup
                                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                                  3. The permission bits are OR'd with rw-rw----

                                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              fsGroupChangePolicy:
                                                description: |-
                                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                                  before being exposed inside Pod. This field will only apply to
                                                  volume types which support fsGroup based ownership(and permissions).
                                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                                  and emptydir.
                                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                type: string
                                              runAsGroup:
                                                description: |-
                                                  The GID to run the entrypoint of the container process.
                                                  Uses runtime default if unset.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              runAsNonRoot:
                                                description: |-
                                                  Indicates that the container must run as a non-root user.
                                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                                  does not run as UID 0 (root) and fail to start the container if it does.
                                                  If unset or false, no such validation will be performed.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: boolean
                                              runAsUser:
                                                description: |-
                                                  The UID to run the entrypoint of the container process.
                                                  Defaults to user specified in image metadata if unspecified.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              seLinuxOptions:
                                                description: |-
                                                  The SELinux context to be applied to all containers.
                                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                                  container.  May also be set in SecurityContext.  If set in
                                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                                  takes precedence for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  level:
                                                    description: Level is SELinux level label that applies to the container.
                                                    type: string
                                                  role:
                                                    description: Role is a SELinux role label that applies to the container.
                                                    type: string
                                                  type:
                                                    description: Type is a SELinux type label that applies to the container.
                                                    type: string
                                                  user:
                                                    description: User is a SELinux user label that applies to the container.
                                                    type: string
                                                type: object
                                              seccompProfile:
                                                description: |-
                                                  The seccomp options to use by the containers in this pod.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  localhostProfile:
                                                    description: |-
                                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                                      The profile must be preconfigured on the node to work.
                                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                                    type: string
                                                  type:
                                                    description: |-
                                                      type indicates which kind of seccomp profile will be applied.
                                                      Valid options are:

                                                      Localhost - a profile defined in a file on the node should be used.
                                                      RuntimeDefault - the container runtime default profile should be used.
                                                      Unconfined - no profile should be applied.
                                                    type: string
                                                required:
                                                  - type
                                                type: object
                                              supplementalGroups:
                                                description: |-
                                                  A list of groups applied to the first process run in each container, in addition
                                                  to the container's primary GID, the fsGroup (if specified), and group memberships
                                                  defined in the container image for the uid of the container process. If unspecified,
                                                  no additional groups are added to any container. Note that group memberships
                                                  defined in the container image for the uid of the container process are still effective,
                                                  even if they are not included in this list.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  format: int64
                                                  type: integer
                                                type: array
                                              sysctls:
                                                description: |-
                                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                                  sysctls (by the container runtime) might fail to launch.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  description: Sysctl defines a kernel parameter to be set
                                                  properties:
                                                    name:
                                                      description: Name of a property to set
                                                      type: string
                                                    value:
                                                      description: Value of a property to set
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: |-
                                                The pod this Toleration is attached to tolerates any taint that matches
                                                the triple <key,value,effect> using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: |-
                                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: |-
                                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Operator represents a key's relationship to the value.
                                                    Valid operators are Exists and Equal. Defaults to Equal.
                                                    Exists is equivalent to wildcard for value, so that a pod can
                                                    tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: |-
                                                    TolerationSeconds represents the period of time the toleration (which must be
                                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                                    negative values will be treated as 0 (evict immediately) by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: |-
                                                    Value is the taint value the toleration matches to.
                                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: |-
                                      Optional service type for Kubernetes solver service. Supported values
                                      are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: |-
                                  The ingress based HTTP01 challenge solver will solve challenges by
                                  creating or modifying Ingress resources in order to route requests for
                                  '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
                                  provisioned by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: |-
                                      This field configures the annotation `kubernetes.io/ingress.class` when
                                      creating Ingress resources to solve ACME challenges that use this
                                      challenge solver. Only one of `class`, `name` or `ingressClassName` may
                                      be specified.
                                    type: string
                                  ingressClassName:
                                    description: |-
                                      This field configures the field `ingressClassName` on the created Ingress
                                      resources used to solve ACME challenges that use this challenge solver.
                                      This is the recommended way of configuring the ingress class. Only one of
                                      `class`, `name` or `ingressClassName` may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: |-
                                      Optional ingress template used to configure the ACME challenge solver
                                      ingress used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: |-
                                      The name of the ingress resource that should have ACME challenge solving
                                      routes inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress controllers like
                                      ingress-gce, which maintains a 1:1 mapping between external IPs and
                                      ingress resources. Only one of `class`, `name` or `ingressClassName` may
                                      be specified.
                                    type: string
                                  podTemplate:
                                    description: |-
                                      Optional pod template used to configure the ACME challenge solver pods
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: |-
                                          PodSpec defines overrides for the HTTP01 challenge solver pod.
                                          Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: |-
                                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - preference
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to an update), the system
                                                      may or may not try to eventually evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        items:
                                                          description: |-
                                                            A null or empty node selector term matches no objects. The requirements of
                                                            them are ANDed.
                                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the anti-affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the anti-affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the anti-affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: |-
                                                LocalObjectReference contains enough information to let you locate the
                                                referenced object inside the same namespace.
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              NodeSelector is a selector which must be true for the pod to fit on a node.
                                              Selector which must match a node's labels for the pod to be scheduled on that node.
                                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          securityContext:
                                            description: If specified, the pod's security context
                                            properties:
                                              fsGroup:
                                                description: |-
                                                  A special supplemental group that applies to all containers in a pod.
                                                  Some volume types allow the Kubelet to change the ownership of that volume
                                                  to be owned by the pod:

                                                  1. The owning GID will be the FSGroup
                                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                                  3. The permission bits are OR'd with rw-rw----

                                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              fsGroupChangePolicy:
                                                description: |-
                                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                                  before being exposed inside Pod. This field will only apply to
                                                  volume types which support fsGroup based ownership(and permissions).
                                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                                  and emptydir.
                                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                type: string
                                              runAsGroup:
                                                description: |-
                                                  The GID to run the entrypoint of the container process.
                                                  Uses runtime default if unset.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              runAsNonRoot:
                                                description: |-
                                                  Indicates that the container must run as a non-root user.
                                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                                  does not run as UID 0 (root) and fail to start the container if it does.
                                                  If unset or false, no such validation will be performed.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: boolean
                                              runAsUser:
                                                description: |-
                                                  The UID to run the entrypoint of the container process.
                                                  Defaults to user specified in image metadata if unspecified.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              seLinuxOptions:
                                                description: |-
                                                  The SELinux context to be applied to all containers.
                                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                                  container.  May also be set in SecurityContext.  If set in
                                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                                  takes precedence for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  level:
                                                    description: Level is SELinux level label that applies to the container.
                                                    type: string
                                                  role:
                                                    description: Role is a SELinux role label that applies to the container.
                                                    type: string
                                                  type:
                                                    description: Type is a SELinux type label that applies to the container.
                                                    type: string
                                                  user:
                                                    description: User is a SELinux user label that applies to the container.
                                                    type: string
                                                type: object
                                              seccompProfile:
                                                description: |-
                                                  The seccomp options to use by the containers in this pod.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  localhostProfile:
                                                    description: |-
                                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                                      The profile must be preconfigured on the node to work.
                                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                                    type: string
                                                  type:
                                                    description: |-
                                                      type indicates which kind of seccomp profile will be applied.
                                                      Valid options are:

                                                      Localhost - a profile defined in a file on the node should be used.
                                                      RuntimeDefault - the container runtime default profile should be used.
                                                      Unconfined - no profile should be applied.
                                                    type: string
                                                required:
                                                  - type
                                                type: object
                                              supplementalGroups:
                                                description: |-
                                                  A list of groups applied to the first process run in each container, in addition
                                                  to the container's primary GID, the fsGroup (if specified), and group memberships
                                                  defined in the container image for the uid of the container process. If unspecified,
                                                  no additional groups are added to any container. Note that group memberships
                                                  defined in the container image for the uid of the container process are still effective,
                                                  even if they are not included in this list.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  format: int64
                                                  type: integer
                                                type: array
                                              sysctls:
                                                description: |-
                                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                                  sysctls (by the container runtime) might fail to launch.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  description: Sysctl defines a kernel parameter to be set
                                                  properties:
                                                    name:
                                                      description: Name of a property to set
                                                      type: string
                                                    value:
                                                      description: Value of a property to set
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: |-
                                                The pod this Toleration is attached to tolerates any taint that matches
                                                the triple <key,value,effect> using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: |-
                                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: |-
                                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Operator represents a key's relationship to the value.
                                                    Valid operators are Exists and Equal. Defaults to Equal.
                                                    Exists is equivalent to wildcard for value, so that a pod can
                                                    tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: |-
                                                    TolerationSeconds represents the period of time the toleration (which must be
                                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                                    negative values will be treated as 0 (evict immediately) by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: |-
                                                    Value is the taint value the toleration matches to.
                                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: |-
                                      Optional service type for Kubernetes solver service. Supported values
                                      are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: |-
                              Selector selects a set of DNSNames on the Certificate resource that
                              should be solved using this challenge solver.
                              If not specified, the solver will be treated as the 'default' solver
                              with the lowest priority, i.e. if any other solver has a more specific
                              match, it will be used instead.
                            properties:
                              dnsNames:
                                description: |-
                                  List of DNSNames that this solver will be used to solve.
                                  If specified and a match is found, a dnsNames selector will take
                                  precedence over a dnsZones selector.
                                  If multiple solvers match with the same dnsNames value, the solver
                                  with the most matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined earlier in the list
                                  will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: |-
                                  List of DNSZones that this solver will be used to solve.
                                  The most specific DNS zone match specified here will take precedence
                                  over other DNS zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com for the domain
                                  www.sys.example.com.
                                  If multiple solvers match with the same dnsZones value, the solver
                                  with the most matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined earlier in the list
                                  will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  A label selector that is used to refine the set of certificate's that
                                  this challenge solver will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                    - privateKeySecretRef
                    - server
                  type: object
                ca:
                  description: |-
                    CA configures this issuer to sign certificates using a signing CA keypair
                    stored in a Secret resource.
                    This is used to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: |-
                        The CRL distribution points is an X.509 v3 certificate extension which identifies
                        the location of the CRL from which the revocation of this certificate can be checked.
                        If not set, certificates will be issued without distribution points set.
                      items:
                        type: string
                      type: array
                    issuingCertificateURLs:
                      description: |-
                        IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
                        it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
                        As an example, such a URL might be "http://ca.domain.com/ca.crt".
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: |-
                        The OCSP server list is an X.509 v3 extension that defines a list of
                        URLs of OCSP responders. The OCSP responders can be queried for the
                        revocation status of an issued certificate. If not set, the
                        certificate will be issued with no OCSP servers set. For example, an
                        OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: |-
                        SecretName is the name of the secret used to sign Certificates issued
                        by this Issuer.
                      type: string
                  required:
                    - secretName
                  type: object
                selfSigned:
                  description: |-
                    SelfSigned configures this issuer to 'self sign' certificates using the
                    private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: |-
                        The CRL distribution points is an X.509 v3 certificate extension which identifies
                        the location of the CRL from which the revocation of this certificate can be checked.
                        If not set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: |-
                    Vault configures this issuer to sign certificates using a HashiCorp Vault
                    PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates with the Vault server.
                      properties:
                        appRole:
                          description: |-
                            AppRole authenticates with Vault using the App Role auth mechanism,
                            with the role and secret stored in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: |-
                                Path where the App Role authentication backend is mounted in Vault, e.g:
                                "approle"
                              type: string
                            roleId:
                              description: |-
                                RoleID configured in the App Role authentication backend when setting
                                up the authentication backend in Vault.
                              type: string
                            secretRef:
                              description: |-
                                Reference to a key in a Secret that contains the App Role secret used
                                to authenticate with Vault.
                                The `key` field must be specified and denotes which entry within the Secret
                                resource is used as the app role secret.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - path
                            - roleId
                            - secretRef
                          type: object
                        clientCertificate:
                          description: |-
                            ClientCertificate authenticates with Vault by presenting a client
                            certificate during the request's TLS handshake.
                            Works only when using HTTPS protocol.
                          properties:
                            mountPath:
                              description: |-
                                The Vault mountPath here is the mount path to use when authenticating with
                                Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                default value "/v1/auth/cert" will be used.
                              type: string
                            name:
                              description: |-
                                Name of the certificate role to authenticate against.
                                If not set, matching any certificate role, if available.
                              type: string
                            secretName:
                              description: |-
                                Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
                                tls.crt and tls.key) used to authenticate to Vault using TLS client
                                authentication.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            Kubernetes authenticates with Vault by passing the ServiceAccount
                            token stored in the named Secret resource to the Vault server.
                          properties:
                            mountPath:
                              description: |-
                                The Vault mountPath here is the mount path to use when authenticating with
                                Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                default value "/v1/auth/kubernetes" will be used.
                              type: string
                            role:
                              description: |-
                                A required field containing the Vault Role to assume. A Role binds a
                                Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: |-
                                The required Secret field containing a Kubernetes ServiceAccount JWT used
                                for authenticating with Vault. Use of 'ambient credentials' is not
                                supported.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            serviceAccountRef:
                              description: |-
                                A reference to a service account that will be used to request a bound
                                token (also known as "projected token"). Compared to using "secretRef",
                                using this field means that you don't rely on statically bound tokens. To
                                use this field, you must configure an RBAC rule to let cert-manager
                                request a token.
                              properties:
                                audiences:
                                  description: |-
                                    TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
                                    consisting of the issuer's namespace and name is always included.
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name of the ServiceAccount used to request a token.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - role
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    caBundle:
                      description: |-
                        Base64-encoded bundle of PEM CAs which will be used to validate the certificate
                        chain presented by Vault. Only used if using HTTPS to connect to Vault and
                        ignored for HTTP connections.
                        Mutually exclusive with CABundleSecretRef.
                        If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
                        the cert-manager controller container is used to validate the TLS connection.
                      format: byte
                      type: string
                    caBundleSecretRef:
                      description: |-
                        Reference to a Secret containing a bundle of PEM-encoded CAs to use when
                        verifying the certificate chain presented by Vault when using HTTPS.
                        Mutually exclusive with CABundle.
                        If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
                        the cert-manager controller container is used to validate the TLS connection.
                        If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    clientCertSecretRef:
                      description: |-
                        Reference to a Secret containing a PEM-encoded Client Certificate to use when the
                        Vault server requires mTLS.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    clientKeySecretRef:
                      description: |-
                        Reference to a Secret containing a PEM-encoded Client Private Key to use when the
                        Vault server requires mTLS.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    namespace:
                      description: |-
                        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                      type: string
                    path:
                      description: |-
                        Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                        "my_pki_mount/sign/my-role-name".
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                    - auth
                    - path
                    - server
                  type: object
                venafi:
                  description: |-
                    Venafi configures this issuer to sign certificates using a Venafi TPP
                    or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: |-
                        Cloud specifies the Venafi cloud configuration settings.
                        Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        url:
                          description: |-
                            URL is the base URL for Venafi Cloud.
                            Defaults to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                        - apiTokenSecretRef
                      type: object
                    tpp:
                      description: |-
                        TPP specifies Trust Protection Platform configuration settings.
                        Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: |-
                            Base64-encoded bundle of PEM CAs which will be used to validate the certificate
                            chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
                            If undefined, the certificate bundle in the cert-manager controller container
                            is used to validate the chain.
                          format: byte
                          type: string
                        caBundleSecretRef:
                          description: |-
                            Reference to a Secret containing a base64-encoded bundle of PEM CAs
                            which will be used to validate the certificate chain presented by the TPP server.
                            Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
                            If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
                            the cert-manager controller container is used to validate the TLS connection.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        credentialsRef:
                          description: |-
                            CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
                            The secret must contain the key 'access-token' for the Access Token Authentication,
                            or two keys, 'username' and 'password' for the API Keys Authentication.
                          properties:
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        url:
                          description: |-
                            URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
                            for example: "https://tpp.example.com/vedsdk".
                          type: string
                      required:
                        - credentialsRef
                        - url
                      type: object
                    zone:
                      description: |-
                        Zone is the Venafi Policy Zone to use for this issuer.
                        All requests made to the Venafi platform will be restricted by the named
                        zone policy.
                        This field is required.
                      type: string
                  required:
                    - zone
                  type: object
              type: object
            status:
              description: Status of the ClusterIssuer. This is set and managed automatically.
              properties:
                acme:
                  description: |-
                    ACME specific status options.
                    This field should only be set if the Issuer is configured to use an ACME
                    server to issue certificates.
                  properties:
                    lastPrivateKeyHash:
                      description: |-
                        LastPrivateKeyHash is a hash of the private key associated with the latest
                        registered ACME account, in order to track changes made to registered account
                        associated with the Issuer
                      type: string
                    lastRegisteredEmail:
                      description: |-
                        LastRegisteredEmail is the email associated with the latest registered
                        ACME account, in order to track changes made to registered account
                        associated with the  Issuer
                      type: string
                    uri:
                      description: |-
                        URI is the unique account identifier, which can also be used to retrieve
                        account details from the CA
                      type: string
                  type: object
                conditions:
                  description: |-
                    List of status conditions to indicate the status of a CertificateRequest.
                    Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for an Issuer.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the timestamp corresponding to the last status
                          change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human readable description of the details of the last
                          transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: |-
                          If set, this represents the .metadata.generation that the condition was
                          set based upon.
                          For instance, if .metadata.generation is currently 12, but the
                          .status.condition[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: |-
                          Reason is a brief machine readable explanation for the condition's last
                          transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clusterrbacassessmentreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterRbacAssessmentReport
    listKind: ClusterRbacAssessmentReportList
    plural: clusterrbacassessmentreports
    shortNames:
      - clusterrbacassessmentreport
    singular: clusterrbacassessmentreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The name of the rbac assessment scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterRbacAssessmentReport is a specification for the ClusterRbacAssessmentReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: RbacAssessmentSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
              required:
                - checks
                - scanner
                - summary
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clustersbomreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterSbomReport
    listKind: ClusterSbomReportList
    plural: clustersbomreports
    shortNames:
      - clustersbom
    singular: clustersbomreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The name of image repository
          jsonPath: .report.artifact.repository
          name: Repository
          type: string
        - description: The name of image tag
          jsonPath: .report.artifact.tag
          name: Tag
          type: string
        - description: The name of the sbom generation scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of dependencies in bom
          jsonPath: .report.summary.componentsCount
          name: Components
          priority: 1
          type: integer
        - description: The the number of components in bom
          jsonPath: .report.summary.dependenciesCount
          name: Dependencies
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterSbomReport summarizes components and dependencies found in container image
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              description: Report is the actual sbom report data.
              properties:
                artifact:
                  description: |-
                    Artifact represents a standalone, executable package of software that includes everything needed to
                    run an application.
                  properties:
                    digest:
                      description: Digest is a unique and immutable identifier of an Artifact.
                      type: string
                    mimeType:
                      description: MimeType represents a type and format of an Artifact.
                      type: string
                    repository:
                      description: Repository is the name of the repository in the Artifact registry.
                      type: string
                    tag:
                      description: Tag is a mutable, human-readable string used to identify an Artifact.
                      type: string
                  type: object
                components:
                  description: Bom is artifact bill of materials.
                  properties:
                    bomFormat:
                      type: string
                    components:
                      items:
                        properties:
                          bom-ref:
                            type: string
                          group:
                            type: string
                          hashes:
                            items:
                              properties:
                                alg:
                                  type: string
                                content:
                                  type: string
                              type: object
                            type: array
                          licenses:
                            items:
                              properties:
                                expression:
                                  type: string
                                license:
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                    url:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          name:
                            type: string
                          properties:
                            items:
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          purl:
                            type: string
                          supplier:
                            properties:
                              contact:
                                items:
                                  properties:
                                    email:
                                      type: string
                                    name:
                                      type: string
                                    phone:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              url:
                                items:
                                  type: string
                                type: array
                            type: object
                          type:
                            type: string
                          version:
                            type: string
                        type: object
                      type: array
                    dependencies:
                      items:
                        properties:
                          dependsOn:
                            items:
                              type: string
                            type: array
                          ref:
                            type: string
                        type: object
                      type: array
                    metadata:
                      properties:
                        component:
                          properties:
                            bom-ref:
                              type: string
                            group:
                              type: string
                            hashes:
                              items:
                                properties:
                                  alg:
                                    type: string
                                  content:
                                    type: string
                                type: object
                              type: array
                            licenses:
                              items:
                                properties:
                                  expression:
                                    type: string
                                  license:
                                    properties:
                                      id:
                                        type: string
                                      name:
                                        type: string
                                      url:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            name:
                              type: string
                            properties:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            purl:
                              type: string
                            supplier:
                              properties:
                                contact:
                                  items:
                                    properties:
                                      email:
                                        type: string
                                      name:
                                        type: string
                                      phone:
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  type: string
                                url:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type:
                              type: string
                            version:
                              type: string
                          type: object
                        timestamp:
                          type: string
                        tools:
                          properties:
                            components:
                              items:
                                properties:
                                  bom-ref:
                                    type: string
                                  group:
                                    type: string
                                  hashes:
                                    items:
                                      properties:
                                        alg:
                                          type: string
                                        content:
                                          type: string
                                      type: object
                                    type: array
                                  licenses:
                                    items:
                                      properties:
                                        expression:
                                          type: string
                                        license:
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                            url:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  properties:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  purl:
                                    type: string
                                  supplier:
                                    properties:
                                      contact:
                                        items:
                                          properties:
                                            email:
                                              type: string
                                            name:
                                              type: string
                                            phone:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      url:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  type:
                                    type: string
                                  version:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    serialNumber:
                      type: string
                    specVersion:
                      type: string
                    version:
                      type: integer
                  required:
                    - bomFormat
                    - specVersion
                  type: object
                registry:
                  description: Registry is the registry the Artifact was pulled from.
                  properties:
                    server:
                      description: Server the FQDN of registry server.
                      type: string
                  type: object
                scanner:
                  description: Scanner is the scanner that generated this report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: Summary is a summary of sbom report.
                  properties:
                    componentsCount:
                      description: ComponentsCount is the number of components in bom.
                      minimum: 0
                      type: integer
                    dependenciesCount:
                      description: DependenciesCount is the number of dependencies in bom.
                      minimum: 0
                      type: integer
                  required:
                    - componentsCount
                    - dependenciesCount
                  type: object
                updateTimestamp:
                  description: UpdateTimestamp is a timestamp representing the server time in UTC when this report was updated.
                  format: date-time
                  type: string
              required:
                - artifact
                - components
                - scanner
                - summary
                - updateTimestamp
              type: object
          required:
            - report
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: clustervulnerabilityreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ClusterVulnerabilityReport
    listKind: ClusterVulnerabilityReportList
    plural: clustervulnerabilityreports
    shortNames:
      - clustervuln
    singular: clustervulnerabilityreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - description: The name of image repository
          jsonPath: .report.artifact.repository
          name: Repository
          type: string
        - description: The name of image tag
          jsonPath: .report.artifact.tag
          name: Tag
          type: string
        - description: The name of the vulnerability scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of critical vulnerabilities
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of high vulnerabilities
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of medium vulnerabilities
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of low vulnerabilities
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
        - description: The number of unknown vulnerabilities
          jsonPath: .report.summary.unknownCount
          name: Unknown
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            ClusterVulnerabilityReport summarizes vulnerabilities in application dependencies and operating system packages
            built into container images.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              description: Report is the actual vulnerability report data.
              properties:
                artifact:
                  description: |-
                    Artifact represents a standalone, executable package of software that includes everything needed to
                    run an application.
                  properties:
                    digest:
                      description: Digest is a unique and immutable identifier of an Artifact.
                      type: string
                    mimeType:
                      description: MimeType represents a type and format of an Artifact.
                      type: string
                    repository:
                      description: Repository is the name of the repository in the Artifact registry.
                      type: string
                    tag:
                      description: Tag is a mutable, human-readable string used to identify an Artifact.
                      type: string
                  type: object
                os:
                  description: OS information of the artifact
                  properties:
                    eosl:
                      description: Eosl is true if OS version has reached end of service life
                      type: boolean
                    family:
                      description: Operating System Family
                      type: string
                    name:
                      description: Name or version of the OS
                      type: string
                  type: object
                registry:
                  description: Registry is the registry the Artifact was pulled from.
                  properties:
                    server:
                      description: Server the FQDN of registry server.
                      type: string
                  type: object
                scanner:
                  description: Scanner is the scanner that generated this report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: Summary is a summary of Vulnerability counts grouped by Severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of vulnerabilities with Critical Severity.
                      minimum: 0
                      type: integer
                    highCount:
                      description: HighCount is the number of vulnerabilities with High Severity.
                      minimum: 0
                      type: integer
                    lowCount:
                      description: LowCount is the number of vulnerabilities with Low Severity.
                      minimum: 0
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of vulnerabilities with Medium Severity.
                      minimum: 0
                      type: integer
                    noneCount:
                      description: NoneCount is the number of packages without any vulnerability.
                      minimum: 0
                      type: integer
                    unknownCount:
                      description: UnknownCount is the number of vulnerabilities with unknown severity.
                      minimum: 0
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                    - unknownCount
                  type: object
                updateTimestamp:
                  description: UpdateTimestamp is a timestamp representing the server time in UTC when this report was updated.
                  format: date-time
                  type: string
                vulnerabilities:
                  description: Vulnerabilities is a list of operating system (OS) or application software Vulnerability items found in the Artifact.
                  items:
                    description: Vulnerability is the spec for a vulnerability record.
                    properties:
                      class:
                        type: string
                      cvss:
                        additionalProperties:
                          properties:
                            V2Score:
                              type: number
                            V2Vector:
                              type: string
                            V3Score:
                              type: number
                            V3Vector:
                              type: string
                            V40Score:
                              type: number
                            V40Vector:
                              type: string
                          type: object
                        type: object
                      cvsssource:
                        type: string
                      description:
                        type: string
                      fixedVersion:
                        description: FixedVersion indicates the version of the Resource in which this vulnerability has been fixed.
                        type: string
                      installedVersion:
                        description: InstalledVersion indicates the installed version of the Resource.
                        type: string
                      lastModifiedDate:
                        description: LastModifiedDate indicates the last date CVE has been modified.
                        type: string
                      links:
                        items:
                          type: string
                        type: array
                      packagePURL:
                        type: string
                      packagePath:
                        type: string
                      packageType:
                        type: string
                      primaryLink:
                        type: string
                      publishedDate:
                        description: PublishedDate indicates the date of published CVE.
                        type: string
                      resource:
                        description: Resource is a vulnerable package, application, or library.
                        type: string
                      score:
                        type: number
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        enum:
                          - CRITICAL
                          - HIGH
                          - MEDIUM
                          - LOW
                          - UNKNOWN
                        type: string
                      target:
                        type: string
                      title:
                        type: string
                      vulnerabilityID:
                        description: VulnerabilityID the vulnerability identifier.
                        type: string
                    required:
                      - fixedVersion
                      - installedVersion
                      - lastModifiedDate
                      - publishedDate
                      - resource
                      - severity
                      - title
                      - vulnerabilityID
                    type: object
                  type: array
              required:
                - artifact
                - os
                - scanner
                - summary
                - updateTimestamp
                - vulnerabilities
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: configauditreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ConfigAuditReport
    listKind: ConfigAuditReportList
    plural: configauditreports
    shortNames:
      - configaudit
      - configaudits
    singular: configauditreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the config audit scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ConfigAuditReport is a specification for the ConfigAuditReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: ConfigAuditSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
                updateTimestamp:
                  format: date-time
                  type: string
              required:
                - checks
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: exposedsecretreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: ExposedSecretReport
    listKind: ExposedSecretReportList
    plural: exposedsecretreports
    shortNames:
      - exposedsecret
      - exposedsecrets
    singular: exposedsecretreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of image repository
          jsonPath: .report.artifact.repository
          name: Repository
          type: string
        - description: The name of image tag
          jsonPath: .report.artifact.tag
          name: Tag
          type: string
        - description: The name of the exposed secret scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of critical exposed secrets
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of high exposed secrets
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of medium exposed secrets
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of low exposed secrets
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExposedSecretReport summarizes exposed secrets in plaintext files built into container images.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              description: Report is the actual exposed secret report data.
              properties:
                artifact:
                  description: |-
                    Artifact represents a standalone, executable package of software that includes everything needed to
                    run an application.
                  properties:
                    digest:
                      description: Digest is a unique and immutable identifier of an Artifact.
                      type: string
                    mimeType:
                      description: MimeType represents a type and format of an Artifact.
                      type: string
                    repository:
                      description: Repository is the name of the repository in the Artifact registry.
                      type: string
                    tag:
                      description: Tag is a mutable, human-readable string used to identify an Artifact.
                      type: string
                  type: object
                registry:
                  description: Registry is the registry the Artifact was pulled from.
                  properties:
                    server:
                      description: Server the FQDN of registry server.
                      type: string
                  type: object
                scanner:
                  description: Scanner is the scanner that generated this report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                secrets:
                  description: Exposed secrets is a list of passwords, api keys, tokens and others items found in the Artifact.
                  items:
                    description: ExposedSecret is the spec for a exposed secret record.
                    properties:
                      category:
                        type: string
                      match:
                        description: Match where the exposed rule matched.
                        type: string
                      ruleID:
                        description: RuleID is rule the identifier.
                        type: string
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        enum:
                          - CRITICAL
                          - HIGH
                          - MEDIUM
                          - LOW
                        type: string
                      target:
                        description: Target is where the exposed secret was found.
                        type: string
                      title:
                        type: string
                    required:
                      - category
                      - match
                      - ruleID
                      - severity
                      - target
                      - title
                    type: object
                  type: array
                summary:
                  description: Summary is the exposed secrets counts grouped by Severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of exposed secrets with Critical Severity.
                      minimum: 0
                      type: integer
                    highCount:
                      description: HighCount is the number of exposed secrets with High Severity.
                      minimum: 0
                      type: integer
                    lowCount:
                      description: LowCount is the number of exposed secrets with Low Severity.
                      minimum: 0
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of exposed secrets with Medium Severity.
                      minimum: 0
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
                updateTimestamp:
                  description: UpdateTimestamp is a timestamp representing the server time in UTC when this report was updated.
                  format: date-time
                  type: string
              required:
                - artifact
                - scanner
                - secrets
                - summary
                - updateTimestamp
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: gitrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    shortNames:
      - gitrepo
    singular: gitrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                GitRepositorySpec specifies the required configuration to produce an
                Artifact for a Git repository.
              properties:
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: |-
                    Include specifies a list of GitRepository resources which Artifacts
                    should be included in the Artifact produced for this GitRepository.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: |-
                    Interval at which the GitRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                provider:
                  description: |-
                    Provider used for authentication, can be 'azure', 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - azure
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the Git server.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                recurseSubmodules:
                  description: |-
                    RecurseSubmodules enables the initialization of all submodules within
                    the GitRepository as cloned from the URL, using their default settings.
                  type: boolean
                ref:
                  description: |-
                    Reference specifies the Git reference to resolve and monitor for
                    changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: Branch to check out, defaults to 'master' if no other field is defined.
                      type: string
                    commit:
                      description: |-
                        Commit SHA to check out, takes precedence over all reference fields.

                        This can be combined with Branch to shallow clone the branch, in which
                        the commit is expected to exist.
                      type: string
                    name:
                      description: |-
                        Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                        It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                        Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials for
                    the GitRepository.
                    For HTTPS repositories the Secret must contain 'username' and 'password'
                    fields for basic auth or 'bearerToken' field for token auth.
                    For SSH repositories the Secret must contain 'identity'
                    and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: |-
                    Verification specifies the configuration to verify the Git commit
                    signature(s).
                  properties:
                    mode:
                      default: HEAD
                      description: |-
                        Mode specifies which Git object(s) should be verified.

                        The variants "head" and "HEAD" both imply the same thing, i.e. verify
                        the commit that the HEAD of the Git repository points to. The variant
                        "head" solely exists to ensure backwards compatibility.
                      enum:
                        - head
                        - HEAD
                        - Tag
                        - TagAndHEAD
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing the public keys of trusted Git
                        authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                includedArtifacts:
                  description: |-
                    IncludedArtifacts contains a list of the last successfully included
                    Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      digest:
                        description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                        pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of the
                          Artifact.
                        format: date-time
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: Metadata holds upstream information such as OCI annotations.
                        type: object
                      path:
                        description: |-
                          Path is the relative file path of the Artifact. It can be used to locate
                          the file in the root of the Artifact storage on the local file system of
                          the controller managing the Source.
                        type: string
                      revision:
                        description: |-
                          Revision is a human-readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: |-
                          URL is the HTTP address of the Artifact as exposed by the controller
                          managing the Source. It can be used to retrieve the Artifact for
                          consumption, e.g. by another controller applying the Artifact contents.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - revision
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the GitRepository
                    object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedInclude:
                  description: |-
                    ObservedInclude is the observed list of GitRepository resources used to
                    produce the current Artifact.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                observedRecurseSubmodules:
                  description: |-
                    ObservedRecurseSubmodules is the observed resource submodules
                    configuration used to produce the current Artifact.
                  type: boolean
                sourceVerificationMode:
                  description: |-
                    SourceVerificationMode is the last used verification mode indicating
                    which Git object(s) have been verified.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 GitRepository is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: GitRepositorySpec defines the desired state of a Git repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: |-
                    Determines which git client library to use.
                    Defaults to go-git, valid values are ('go-git', 'libgit2').
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: Extra git repositories to map into the repository
                  items:
                    description: GitRepositoryInclude defines a source with a from and to path.
                    properties:
                      fromPath:
                        description: The path to copy contents from, defaults to the root directory.
                        type: string
                      repository:
                        description: Reference to a GitRepository to include.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: The path to copy contents to, defaults to the name of the source ref.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: The interval at which to check for repository updates.
                  type: string
                recurseSubmodules:
                  description: |-
                    When enabled, after the clone is created, initializes all submodules within,
                    using their default settings.
                    This option is available only when using the 'go-git' GitImplementation.
                  type: boolean
                ref:
                  description: |-
                    The Git reference to checkout and monitor for changes, defaults to
                    master branch.
                  properties:
                    branch:
                      description: The Git branch to checkout, defaults to master.
                      type: string
                    commit:
                      description: The Git commit SHA to checkout, if specified Tag filters will be ignored.
                      type: string
                    semver:
                      description: The Git tag semver expression, takes precedence over Tag.
                      type: string
                    tag:
                      description: The Git tag to checkout, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    The secret name containing the Git credentials.
                    For HTTPS repositories the secret must contain username and password
                    fields.
                    For SSH repositories the secret must contain identity and known_hosts
                    fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote Git operations like cloning, defaults to 60s.
                  type: string
                url:
                  description: The repository URL, can be a HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: Verify OpenPGP signature for the Git commit HEAD points to.
                  properties:
                    mode:
                      description: Mode describes what git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: The secret name containing the public keys of all trusted Git authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus defines the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                includedArtifacts:
                  description: IncludedArtifacts represents the included artifacts from the last successful repository sync.
                  items:
                    description: Artifact represents the output of a source synchronisation.
                    properties:
                      checksum:
                        description: Checksum is the SHA256 checksum of the artifact.
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of this
                          artifact.
                        format: date-time
                        type: string
                      path:
                        description: Path is the relative file path of this artifact.
                        type: string
                      revision:
                        description: |-
                          Revision is a human readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                          chart version, etc.
                        type: string
                      url:
                        description: URL is the HTTP address of this artifact.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the download link for the artifact output of the last repository
                    sync.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 GitRepository is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: GitRepository is the Schema for the gitrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                GitRepositorySpec specifies the required configuration to produce an
                Artifact for a Git repository.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                gitImplementation:
                  default: go-git
                  description: |-
                    GitImplementation specifies which Git client library implementation to
                    use. Defaults to 'go-git', valid values are ('go-git', 'libgit2').
                    Deprecated: gitImplementation is deprecated now that 'go-git' is the
                    only supported implementation.
                  enum:
                    - go-git
                    - libgit2
                  type: string
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                include:
                  description: |-
                    Include specifies a list of GitRepository resources which Artifacts
                    should be included in the Artifact produced for this GitRepository.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                interval:
                  description: Interval at which to check the GitRepository for updates.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                recurseSubmodules:
                  description: |-
                    RecurseSubmodules enables the initialization of all submodules within
                    the GitRepository as cloned from the URL, using their default settings.
                  type: boolean
                ref:
                  description: |-
                    Reference specifies the Git reference to resolve and monitor for
                    changes, defaults to the 'master' branch.
                  properties:
                    branch:
                      description: Branch to check out, defaults to 'master' if no other field is defined.
                      type: string
                    commit:
                      description: |-
                        Commit SHA to check out, takes precedence over all reference fields.

                        This can be combined with Branch to shallow clone the branch, in which
                        the commit is expected to exist.
                      type: string
                    name:
                      description: |-
                        Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                        It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                        Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                      type: string
                    semver:
                      description: SemVer tag expression to check out, takes precedence over Tag.
                      type: string
                    tag:
                      description: Tag to check out, takes precedence over Branch.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials for
                    the GitRepository.
                    For HTTPS repositories the Secret must contain 'username' and 'password'
                    fields for basic auth or 'bearerToken' field for token auth.
                    For SSH repositories the Secret must contain 'identity'
                    and 'known_hosts' fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    GitRepository.
                  type: boolean
                timeout:
                  default: 60s
                  description: Timeout for Git operations like cloning, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: URL specifies the Git repository URL, it can be an HTTP/S or SSH address.
                  pattern: ^(http|https|ssh)://.*$
                  type: string
                verify:
                  description: |-
                    Verification specifies the configuration to verify the Git commit
                    signature(s).
                  properties:
                    mode:
                      description: Mode specifies what Git object should be verified, currently ('head').
                      enum:
                        - head
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Secret containing the public keys of trusted Git
                        authors.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - mode
                    - secretRef
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: GitRepositoryStatus records the observed state of a Git repository.
              properties:
                artifact:
                  description: Artifact represents the last successful GitRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the GitRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: |-
                    ContentConfigChecksum is a checksum of all the configurations related to
                    the content of the source artifact:
                     - .spec.ignore
                     - .spec.recurseSubmodules
                     - .spec.included and the checksum of the included artifacts
                    observed in .status.observedGeneration version of the object. This can
                    be used to determine if the content of the included repository has
                    changed.
                    It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.

                    Deprecated: Replaced with explicit fields for observed artifact content
                    config in the status.
                  type: string
                includedArtifacts:
                  description: |-
                    IncludedArtifacts contains a list of the last successfully included
                    Artifacts as instructed by GitRepositorySpec.Include.
                  items:
                    description: Artifact represents the output of a Source reconciliation.
                    properties:
                      digest:
                        description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                        pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                        type: string
                      lastUpdateTime:
                        description: |-
                          LastUpdateTime is the timestamp corresponding to the last update of the
                          Artifact.
                        format: date-time
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: Metadata holds upstream information such as OCI annotations.
                        type: object
                      path:
                        description: |-
                          Path is the relative file path of the Artifact. It can be used to locate
                          the file in the root of the Artifact storage on the local file system of
                          the controller managing the Source.
                        type: string
                      revision:
                        description: |-
                          Revision is a human-readable identifier traceable in the origin source
                          system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                        type: string
                      size:
                        description: Size is the number of bytes in the file.
                        format: int64
                        type: integer
                      url:
                        description: |-
                          URL is the HTTP address of the Artifact as exposed by the controller
                          managing the Source. It can be used to retrieve the Artifact for
                          consumption, e.g. by another controller applying the Artifact contents.
                        type: string
                    required:
                      - lastUpdateTime
                      - path
                      - revision
                      - url
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the GitRepository
                    object.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedInclude:
                  description: |-
                    ObservedInclude is the observed list of GitRepository resources used to
                    to produce the current Artifact.
                  items:
                    description: |-
                      GitRepositoryInclude specifies a local reference to a GitRepository which
                      Artifact (sub-)contents must be included, and where they should be placed.
                    properties:
                      fromPath:
                        description: |-
                          FromPath specifies the path to copy contents from, defaults to the root
                          of the Artifact.
                        type: string
                      repository:
                        description: |-
                          GitRepositoryRef specifies the GitRepository which Artifact contents
                          must be included.
                        properties:
                          name:
                            description: Name of the referent.
                            type: string
                        required:
                          - name
                        type: object
                      toPath:
                        description: |-
                          ToPath specifies the path to copy contents to, defaults to the name of
                          the GitRepositoryRef.
                        type: string
                    required:
                      - repository
                    type: object
                  type: array
                observedRecurseSubmodules:
                  description: |-
                    ObservedRecurseSubmodules is the observed resource submodules
                    configuration used to produce the current Artifact.
                  type: boolean
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    GitRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: helmcharts.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmChart
    listKind: HelmChartList
    plural: helmcharts
    shortNames:
      - hc
    singular: helmchart
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                chart:
                  description: |-
                    Chart is the name or path the Helm chart is available at in the
                    SourceRef.
                  type: string
                ignoreMissingValuesFiles:
                  description: |-
                    IgnoreMissingValuesFiles controls whether to silently ignore missing values
                    files rather than failing.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmChart SourceRef is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    ReconcileStrategy determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    source.
                  type: boolean
                valuesFiles:
                  description: |-
                    ValuesFiles is an alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be a
                    relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file
                    overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                    This field is only supported when using HelmRepository source with spec.type 'oci'.
                    Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                version:
                  default: '*'
                  description: |-
                    Version is the chart version semver expression, ignored for charts from
                    GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedChartName:
                  description: |-
                    ObservedChartName is the last observed chart name as specified by the
                    resolved chart reference.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmChart
                    object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: |-
                    ObservedSourceArtifactRevision is the last observed Artifact.Revision
                    of the HelmChartSpec.SourceRef.
                  type: string
                observedValuesFiles:
                  description: |-
                    ObservedValuesFiles are the observed value files of the last successful
                    reconciliation.
                    It matches the chart in the last successfully reconciled artifact.
                  items:
                    type: string
                  type: array
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 HelmChart is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec defines the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: The name or path the Helm chart is available at in the SourceRef.
                  type: string
                interval:
                  description: The interval at which to check the Source for updates.
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    Determines what enables the creation of a new artifact. Valid values are
                    ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: The reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                valuesFile:
                  description: |-
                    Alternative values file to use as the default chart values, expected to
                    be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                    for backwards compatibility the file defined here is merged before the
                    ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: |-
                    Alternative list of values files to use as the chart values (values.yaml
                    is not included by default), expected to be a relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file overriding
                    the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                version:
                  default: '*'
                  description: |-
                    The chart version semver expression, ignored for charts from GitRepository
                    and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus defines the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful chart sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last chart pulled.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.chart
          name: Chart
          type: string
        - jsonPath: .spec.version
          name: Version
          type: string
        - jsonPath: .spec.sourceRef.kind
          name: Source Kind
          type: string
        - jsonPath: .spec.sourceRef.name
          name: Source Name
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 HelmChart is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmChart is the Schema for the helmcharts API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmChartSpec specifies the desired state of a Helm chart.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                chart:
                  description: |-
                    Chart is the name or path the Helm chart is available at in the
                    SourceRef.
                  type: string
                ignoreMissingValuesFiles:
                  description: |-
                    IgnoreMissingValuesFiles controls whether to silently ignore missing values
                    files rather than failing.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmChart SourceRef is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                reconcileStrategy:
                  default: ChartVersion
                  description: |-
                    ReconcileStrategy determines what enables the creation of a new artifact.
                    Valid values are ('ChartVersion', 'Revision').
                    See the documentation of the values for an explanation on their behavior.
                    Defaults to ChartVersion when omitted.
                  enum:
                    - ChartVersion
                    - Revision
                  type: string
                sourceRef:
                  description: SourceRef is the reference to the Source the chart is available at.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent, valid values are ('HelmRepository', 'GitRepository',
                        'Bucket').
                      enum:
                        - HelmRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    source.
                  type: boolean
                valuesFile:
                  description: |-
                    ValuesFile is an alternative values file to use as the default chart
                    values, expected to be a relative path in the SourceRef. Deprecated in
                    favor of ValuesFiles, for backwards compatibility the file specified here
                    is merged before the ValuesFiles items. Ignored when omitted.
                  type: string
                valuesFiles:
                  description: |-
                    ValuesFiles is an alternative list of values files to use as the chart
                    values (values.yaml is not included by default), expected to be a
                    relative path in the SourceRef.
                    Values files are merged in the order of this list with the last file
                    overriding the first. Ignored when omitted.
                  items:
                    type: string
                  type: array
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                    This field is only supported when using HelmRepository source with spec.type 'oci'.
                    Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                version:
                  default: '*'
                  description: |-
                    Version is the chart version semver expression, ignored for charts from
                    GitRepository and Bucket sources. Defaults to latest when omitted.
                  type: string
              required:
                - chart
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmChartStatus records the observed state of the HelmChart.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmChart.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedChartName:
                  description: |-
                    ObservedChartName is the last observed chart name as specified by the
                    resolved chart reference.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmChart
                    object.
                  format: int64
                  type: integer
                observedSourceArtifactRevision:
                  description: |-
                    ObservedSourceArtifactRevision is the last observed Artifact.Revision
                    of the HelmChartSpec.SourceRef.
                  type: string
                observedValuesFiles:
                  description: |-
                    ObservedValuesFiles are the observed value files of the last successful
                    reconciliation.
                    It matches the chart in the last successfully reconciled artifact.
                  items:
                    type: string
                  type: array
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    BucketStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: helm-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: helmreleases.helm.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: helm.toolkit.fluxcd.io
  names:
    kind: HelmRelease
    listKind: HelmReleaseList
    plural: helmreleases
    shortNames:
      - hr
    singular: helmrelease
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v2
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          maxLength: 2048
                          minLength: 1
                          type: string
                        ignoreMissingValuesFiles:
                          description: IgnoreMissingValuesFiles controls whether to silently ignore missing values files rather than failing.
                          type: boolean
                        interval:
                          description: |-
                            Interval at which to check the v1.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact,
                            are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                                - notation
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableSchemaValidation:
                      description: |-
                        DisableSchemaValidation prevents the Helm install action from validating
                        the values against the JSON Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '5'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  maxLength: 253
                  minLength: 1
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    filters:
                      description: Filters is a list of tests to run or exclude from running.
                      items:
                        description: Filter holds the configuration for individual Helm test filters.
                        properties:
                          exclude:
                            description: Exclude specifies whether the named test should be excluded.
                            type: boolean
                          name:
                            description: Name is the name of the test.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableSchemaValidation:
                      description: |-
                        DisableSchemaValidation prevents the Helm upgrade action from validating
                        the values against the JSON Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - interval
              type: object
              x-kubernetes-validations:
                - message: either chart or chartRef must be set
                  rule: (has(self.chart) && !has(self.chartRef)) || (!has(self.chart) && has(self.chartRef))
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.
                  enum:
                    - install
                    - upgrade
                  type: string
                lastAttemptedRevision:
                  description: |-
                    LastAttemptedRevision is the Source revision of the last reconciliation
                    attempt. For OCIRepository  sources, the 12 first characters of the digest are
                    appended to the chart version e.g. "1.2.3+1234567890ab".
                  type: string
                lastAttemptedRevisionDigest:
                  description: |-
                    LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
                    This is only set for OCIRepository sources.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum for the values of the last
                    reconciliation attempt.
                    Deprecated: Use LastAttemptedConfigDigest instead.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastReleaseRevision:
                  description: |-
                    LastReleaseRevision is the revision of the last successful Helm release.
                    Deprecated: Use History instead.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.
                  maxLength: 63
                  minLength: 1
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v2beta1 HelmRelease is deprecated, upgrade to v2
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1beta2.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          type: string
                        interval:
                          description: |-
                            Interval at which to check the v1beta2.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1beta2.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFile:
                          description: |-
                            Alternative values file to use as the default chart values, expected to
                            be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                            for backwards compatibility the file defined here is merged before the
                            ValuesFiles items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact, are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1beta2.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.

                    Note: this field is provisional to the v2 API, and not actively used
                    by v2beta1 HelmReleases.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt-in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: |-
                    Interval at which to reconcile the Helm release.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '10'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                          patchesJson6902:
                            description: JSON 6902 patches, defined as inline YAML objects.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document with an array of operation objects.
                                  items:
                                    description: |-
                                      JSON6902 is a JSON6902 operation object.
                                      https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: |-
                                          From contains a JSON-pointer value that references a location within the target document where the operation is
                                          performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        type: string
                                      op:
                                        description: |-
                                          Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                          "test".
                                          https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                          - test
                                          - remove
                                          - add
                                          - replace
                                          - move
                                          - copy
                                        type: string
                                      path:
                                        description: |-
                                          Path contains the JSON-pointer value that references a location within the target document where the operation
                                          is performed. The meaning of the value depends on the value of Op.
                                        type: string
                                      value:
                                        description: |-
                                          Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                          account by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - op
                                      - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                                - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: Strategic merge patches, defined as inline YAML objects.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                          When set, must be a valid Data Key, consisting of alphanumeric characters,
                          '-', '_' or '.'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - chart
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: LastAppliedRevision is the revision of the last successfully applied source.
                  type: string
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum of the values of the last
                    reconciliation attempt.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                lastReleaseRevision:
                  description: LastReleaseRevision is the revision of the last successful Helm release.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.

                    Note: this field is provisional to the v2beta2 API, and not actively used
                    by v2beta1 HelmReleases.
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v2beta2 HelmRelease is deprecated, upgrade to v2
      name: v2beta2
      schema:
        openAPIV3Schema:
          description: HelmRelease is the Schema for the helmreleases API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmReleaseSpec defines the desired state of a Helm release.
              properties:
                chart:
                  description: |-
                    Chart defines the template of the v1beta2.HelmChart that should be created
                    for this HelmRelease.
                  properties:
                    metadata:
                      description: ObjectMeta holds the template for metadata like labels and annotations.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            Annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            Map of string keys and values that can be used to organize and categorize
                            (scope and select) objects.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
                          type: object
                      type: object
                    spec:
                      description: Spec holds the template for the v1beta2.HelmChartSpec for this HelmRelease.
                      properties:
                        chart:
                          description: The name or path the Helm chart is available at in the SourceRef.
                          maxLength: 2048
                          minLength: 1
                          type: string
                        ignoreMissingValuesFiles:
                          description: IgnoreMissingValuesFiles controls whether to silently ignore missing values files rather than failing.
                          type: boolean
                        interval:
                          description: |-
                            Interval at which to check the v1.Source for updates. Defaults to
                            'HelmReleaseSpec.Interval'.
                          pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                          type: string
                        reconcileStrategy:
                          default: ChartVersion
                          description: |-
                            Determines what enables the creation of a new artifact. Valid values are
                            ('ChartVersion', 'Revision').
                            See the documentation of the values for an explanation on their behavior.
                            Defaults to ChartVersion when omitted.
                          enum:
                            - ChartVersion
                            - Revision
                          type: string
                        sourceRef:
                          description: The name and namespace of the v1.Source the chart is available at.
                          properties:
                            apiVersion:
                              description: APIVersion of the referent.
                              type: string
                            kind:
                              description: Kind of the referent.
                              enum:
                                - HelmRepository
                                - GitRepository
                                - Bucket
                              type: string
                            name:
                              description: Name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
                            namespace:
                              description: Namespace of the referent.
                              maxLength: 63
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        valuesFile:
                          description: |-
                            Alternative values file to use as the default chart values, expected to
                            be a relative path in the SourceRef. Deprecated in favor of ValuesFiles,
                            for backwards compatibility the file defined here is merged before the
                            ValuesFiles items. Ignored when omitted.
                          type: string
                        valuesFiles:
                          description: |-
                            Alternative list of values files to use as the chart values (values.yaml
                            is not included by default), expected to be a relative path in the SourceRef.
                            Values files are merged in the order of this list with the last file overriding
                            the first. Ignored when omitted.
                          items:
                            type: string
                          type: array
                        verify:
                          description: |-
                            Verify contains the secret name containing the trusted public keys
                            used to verify the signature and specifies which provider to use to check
                            whether OCI image is authentic.
                            This field is only supported for OCI sources.
                            Chart dependencies, which are not bundled in the umbrella chart artifact,
                            are not verified.
                          properties:
                            provider:
                              default: cosign
                              description: Provider specifies the technology used to sign the OCI Helm chart.
                              enum:
                                - cosign
                                - notation
                              type: string
                            secretRef:
                              description: |-
                                SecretRef specifies the Kubernetes Secret containing the
                                trusted public keys.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - provider
                          type: object
                        version:
                          default: '*'
                          description: |-
                            Version semver expression, ignored for charts from v1beta2.GitRepository and
                            v1beta2.Bucket sources. Defaults to latest when omitted.
                          type: string
                      required:
                        - chart
                        - sourceRef
                      type: object
                  required:
                    - spec
                  type: object
                chartRef:
                  description: |-
                    ChartRef holds a reference to a source controller resource containing the
                    Helm chart artifact.

                    Note: this field is provisional to the v2 API, and not actively used
                    by v2beta2 HelmReleases.
                  properties:
                    apiVersion:
                      description: APIVersion of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - HelmChart
                      type: string
                    name:
                      description: Name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      maxLength: 63
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice with
                    references to HelmRelease resources that must be ready before this HelmRelease
                    can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                driftDetection:
                  description: |-
                    DriftDetection holds the configuration for detecting and handling
                    differences between the manifest in the Helm storage and the resources
                    currently existing in the cluster.
                  properties:
                    ignore:
                      description: |-
                        Ignore contains a list of rules for specifying which changes to ignore
                        during diffing.
                      items:
                        description: |-
                          IgnoreRule defines a rule to selectively disregard specific changes during
                          the drift detection process.
                        properties:
                          paths:
                            description: |-
                              Paths is a list of JSON Pointer (RFC 6901) paths to be excluded from
                              consideration in a Kubernetes object.
                            items:
                              type: string
                            type: array
                          target:
                            description: |-
                              Target is a selector for specifying Kubernetes objects to which this
                              rule applies.
                              If Target is not set, the Paths will be ignored for all Kubernetes
                              objects within the manifest of the Helm release.
                            properties:
                              annotationSelector:
                                description: |-
                                  AnnotationSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource annotations.
                                type: string
                              group:
                                description: |-
                                  Group is the API group to select resources from.
                                  Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              kind:
                                description: |-
                                  Kind of the API Group to select resources from.
                                  Together with Group and Version it is capable of unambiguously
                                  identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                              labelSelector:
                                description: |-
                                  LabelSelector is a string that follows the label selection expression
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                  It matches with the resource labels.
                                type: string
                              name:
                                description: Name to match resources with.
                                type: string
                              namespace:
                                description: Namespace to select resources from.
                                type: string
                              version:
                                description: |-
                                  Version of the API Group to select resources from.
                                  Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                  https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                type: string
                            type: object
                        required:
                          - paths
                        type: object
                      type: array
                    mode:
                      description: |-
                        Mode defines how differences should be handled between the Helm manifest
                        and the manifest currently applied to the cluster.
                        If not explicitly set, it defaults to DiffModeDisabled.
                      enum:
                        - enabled
                        - warn
                        - disabled
                      type: string
                  type: object
                install:
                  description: Install holds the configuration for Helm install actions for this HelmRelease.
                  properties:
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Create` and if omitted
                        CRDs are installed but not updated.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are applied (installed) during Helm install action.
                        With this option users can opt in to CRD replace existing CRDs on Helm
                        install actions, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    createNamespace:
                      description: |-
                        CreateNamespace tells the Helm install action to create the
                        HelmReleaseSpec.TargetNamespace if it does not exist yet.
                        On uninstall, the namespace will not be garbage collected.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm install action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm install action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        install has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        install has been performed.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm install
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an install action but fail. Defaults to
                            'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false'.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using an uninstall, is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                      type: object
                    replace:
                      description: |-
                        Replace tells the Helm install action to re-use the 'ReleaseName', but only
                        if that name is a deleted release which remains in the history.
                      type: boolean
                    skipCRDs:
                      description: |-
                        SkipCRDs tells the Helm install action to not install any CRDs. By default,
                        CRDs are installed if not already present.

                        Deprecated use CRD policy (`crds`) attribute with value `Skip` instead.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm install action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                interval:
                  description: Interval at which to reconcile the Helm release.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    KubeConfig for reconciling the HelmRelease on a remote cluster.
                    When used in combination with HelmReleaseSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when HelmReleaseSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                maxHistory:
                  description: |-
                    MaxHistory is the number of revisions saved by Helm for this HelmRelease.
                    Use '0' for an unlimited number of revisions; defaults to '5'.
                  type: integer
                persistentClient:
                  description: |-
                    PersistentClient tells the controller to use a persistent Kubernetes
                    client for this release. When enabled, the client will be reused for the
                    duration of the reconciliation, instead of being created and destroyed
                    for each (step of a) Helm action.

                    This can improve performance, but may cause issues with some Helm charts
                    that for example do create Custom Resource Definitions during installation
                    outside Helm's CRD lifecycle hooks, which are then not observed to be
                    available by e.g. post-install hooks.

                    If not set, it defaults to true.
                  type: boolean
                postRenderers:
                  description: |-
                    PostRenderers holds an array of Helm PostRenderers, which will be applied in order
                    of their definition.
                  items:
                    description: PostRenderer contains a Helm PostRenderer specification.
                    properties:
                      kustomize:
                        description: Kustomization to apply as PostRenderer.
                        properties:
                          images:
                            description: |-
                              Images is a list of (image name, new name, new tag or digest)
                              for changing image names, tags or digests. This can also be achieved with a
                              patch, but this operator is simpler to specify.
                            items:
                              description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                              properties:
                                digest:
                                  description: |-
                                    Digest is the value used to replace the original image tag.
                                    If digest is present NewTag value is ignored.
                                  type: string
                                name:
                                  description: Name is a tag-less image name.
                                  type: string
                                newName:
                                  description: NewName is the value used to replace the original name.
                                  type: string
                                newTag:
                                  description: NewTag is the value used to replace the original tag.
                                  type: string
                              required:
                                - name
                              type: object
                            type: array
                          patches:
                            description: |-
                              Strategic merge and JSON patches, defined as inline YAML objects,
                              capable of targeting objects based on kind, label and annotation selectors.
                            items:
                              description: |-
                                Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                                be applied to.
                              properties:
                                patch:
                                  description: |-
                                    Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                                    an array of operation objects.
                                  type: string
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                              type: object
                            type: array
                          patchesJson6902:
                            description: |-
                              JSON 6902 patches, defined as inline YAML objects.
                              Deprecated: use Patches instead.
                            items:
                              description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                              properties:
                                patch:
                                  description: Patch contains the JSON6902 patch document with an array of operation objects.
                                  items:
                                    description: |-
                                      JSON6902 is a JSON6902 operation object.
                                      https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                    properties:
                                      from:
                                        description: |-
                                          From contains a JSON-pointer value that references a location within the target document where the operation is
                                          performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                                        type: string
                                      op:
                                        description: |-
                                          Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                          "test".
                                          https://datatracker.ietf.org/doc/html/rfc6902#section-4
                                        enum:
                                          - test
                                          - remove
                                          - add
                                          - replace
                                          - move
                                          - copy
                                        type: string
                                      path:
                                        description: |-
                                          Path contains the JSON-pointer value that references a location within the target document where the operation
                                          is performed. The meaning of the value depends on the value of Op.
                                        type: string
                                      value:
                                        description: |-
                                          Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                          account by all operations.
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - op
                                      - path
                                    type: object
                                  type: array
                                target:
                                  description: Target points to the resources that the patch document should be applied to.
                                  properties:
                                    annotationSelector:
                                      description: |-
                                        AnnotationSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource annotations.
                                      type: string
                                    group:
                                      description: |-
                                        Group is the API group to select resources from.
                                        Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the API Group to select resources from.
                                        Together with Group and Version it is capable of unambiguously
                                        identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                    labelSelector:
                                      description: |-
                                        LabelSelector is a string that follows the label selection expression
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                                        It matches with the resource labels.
                                      type: string
                                    name:
                                      description: Name to match resources with.
                                      type: string
                                    namespace:
                                      description: Namespace to select resources from.
                                      type: string
                                    version:
                                      description: |-
                                        Version of the API Group to select resources from.
                                        Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                                        https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                                      type: string
                                  type: object
                              required:
                                - patch
                                - target
                              type: object
                            type: array
                          patchesStrategicMerge:
                            description: |-
                              Strategic merge patches, defined as inline YAML objects.
                              Deprecated: use Patches instead.
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  type: array
                releaseName:
                  description: |-
                    ReleaseName used for the Helm release. Defaults to a composition of
                    '[TargetNamespace-]Name'.
                  maxLength: 53
                  minLength: 1
                  type: string
                rollback:
                  description: Rollback holds the configuration for Helm rollback actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        rollback action when it fails.
                      type: boolean
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        rollback has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        rollback has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    recreate:
                      description: Recreate performs pod restarts for the resource if applicable.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm rollback action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this HelmRelease.
                  maxLength: 253
                  minLength: 1
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace used for the Helm storage.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                suspend:
                  description: |-
                    Suspend tells the controller to suspend reconciliation for this HelmRelease,
                    it does not apply to already started reconciliations. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace to target when performing operations for the HelmRelease.
                    Defaults to the namespace of the HelmRelease.
                  maxLength: 63
                  minLength: 1
                  type: string
                test:
                  description: Test holds the configuration for Helm test actions for this HelmRelease.
                  properties:
                    enable:
                      description: |-
                        Enable enables Helm test actions for this HelmRelease after an Helm install
                        or upgrade action has been performed.
                      type: boolean
                    filters:
                      description: Filters is a list of tests to run or exclude from running.
                      items:
                        description: Filter holds the configuration for individual Helm test filters.
                        properties:
                          exclude:
                            description: Exclude specifies whether the named test should be excluded.
                            type: boolean
                          name:
                            description: Name is the name of the test.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                    ignoreFailures:
                      description: |-
                        IgnoreFailures tells the controller to skip remediation when the Helm tests
                        are run but fail. Can be overwritten for tests run after install or upgrade
                        actions in 'Install.IgnoreTestFailures' and 'Upgrade.IgnoreTestFailures'.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation during
                        the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                timeout:
                  description: |-
                    Timeout is the time to wait for any individual Kubernetes operation (like Jobs
                    for hooks) during the performance of a Helm action. Defaults to '5m0s'.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                uninstall:
                  description: Uninstall holds the configuration for Helm uninstall actions for this HelmRelease.
                  properties:
                    deletionPropagation:
                      default: background
                      description: |-
                        DeletionPropagation specifies the deletion propagation policy when
                        a Helm uninstall is performed.
                      enum:
                        - background
                        - foreground
                        - orphan
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm rollback action.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables waiting for all the resources to be deleted after
                        a Helm uninstall is performed.
                      type: boolean
                    keepHistory:
                      description: |-
                        KeepHistory tells Helm to remove all associated resources and mark the
                        release as deleted, but retain the release history.
                      type: boolean
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm uninstall action. Defaults
                        to 'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                upgrade:
                  description: Upgrade holds the configuration for Helm upgrade actions for this HelmRelease.
                  properties:
                    cleanupOnFail:
                      description: |-
                        CleanupOnFail allows deletion of new resources created during the Helm
                        upgrade action when it fails.
                      type: boolean
                    crds:
                      description: |-
                        CRDs upgrade CRDs from the Helm Chart's crds directory according
                        to the CRD upgrade policy provided here. Valid values are `Skip`,
                        `Create` or `CreateReplace`. Default is `Skip` and if omitted
                        CRDs are neither installed nor upgraded.

                        Skip: do neither install nor replace (update) any CRDs.

                        Create: new CRDs are created, existing CRDs are neither updated nor deleted.

                        CreateReplace: new CRDs are created, existing CRDs are updated (replaced)
                        but not deleted.

                        By default, CRDs are not applied during Helm upgrade action. With this
                        option users can opt-in to CRD upgrade, which is not (yet) natively supported by Helm.
                        https://helm.sh/docs/chart_best_practices/custom_resource_definitions.
                      enum:
                        - Skip
                        - Create
                        - CreateReplace
                      type: string
                    disableHooks:
                      description: DisableHooks prevents hooks from running during the Helm upgrade action.
                      type: boolean
                    disableOpenAPIValidation:
                      description: |-
                        DisableOpenAPIValidation prevents the Helm upgrade action from validating
                        rendered templates against the Kubernetes OpenAPI Schema.
                      type: boolean
                    disableWait:
                      description: |-
                        DisableWait disables the waiting for resources to be ready after a Helm
                        upgrade has been performed.
                      type: boolean
                    disableWaitForJobs:
                      description: |-
                        DisableWaitForJobs disables waiting for jobs to complete after a Helm
                        upgrade has been performed.
                      type: boolean
                    force:
                      description: Force forces resource updates through a replacement strategy.
                      type: boolean
                    preserveValues:
                      description: |-
                        PreserveValues will make Helm reuse the last release's values and merge in
                        overrides from 'Values'. Setting this flag makes the HelmRelease
                        non-declarative.
                      type: boolean
                    remediation:
                      description: |-
                        Remediation holds the remediation configuration for when the Helm upgrade
                        action for the HelmRelease fails. The default is to not perform any action.
                      properties:
                        ignoreTestFailures:
                          description: |-
                            IgnoreTestFailures tells the controller to skip remediation when the Helm
                            tests are run after an upgrade action but fail.
                            Defaults to 'Test.IgnoreFailures'.
                          type: boolean
                        remediateLastFailure:
                          description: |-
                            RemediateLastFailure tells the controller to remediate the last failure, when
                            no retries remain. Defaults to 'false' unless 'Retries' is greater than 0.
                          type: boolean
                        retries:
                          description: |-
                            Retries is the number of retries that should be attempted on failures before
                            bailing. Remediation, using 'Strategy', is performed between each attempt.
                            Defaults to '0', a negative integer equals to unlimited retries.
                          type: integer
                        strategy:
                          description: Strategy to use for failure remediation. Defaults to 'rollback'.
                          enum:
                            - rollback
                            - uninstall
                          type: string
                      type: object
                    timeout:
                      description: |-
                        Timeout is the time to wait for any individual Kubernetes operation (like
                        Jobs for hooks) during the performance of a Helm upgrade action. Defaults to
                        'HelmReleaseSpec.Timeout'.
                      pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                      type: string
                  type: object
                values:
                  description: Values holds the values for this Helm release.
                  x-kubernetes-preserve-unknown-fields: true
                valuesFrom:
                  description: |-
                    ValuesFrom holds references to resources containing Helm values for this HelmRelease,
                    and information about how they should be merged.
                  items:
                    description: |-
                      ValuesReference contains a reference to a resource containing Helm values,
                      and optionally the key they can be found at.
                    properties:
                      kind:
                        description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: |-
                          Name of the values referent. Should reside in the same namespace as the
                          referring resource.
                        maxLength: 253
                        minLength: 1
                        type: string
                      optional:
                        description: |-
                          Optional marks this ValuesReference as optional. When set, a not found error
                          for the values reference is ignored, but any ValuesKey, TargetPath or
                          transient error will still result in a reconciliation failure.
                        type: boolean
                      targetPath:
                        description: |-
                          TargetPath is the YAML dot notation path the value should be merged at. When
                          set, the ValuesKey is expected to be a single flat value. Defaults to 'None',
                          which results in the values getting merged at the root.
                        maxLength: 250
                        pattern: ^([a-zA-Z0-9_\-.\\\/]|\[[0-9]{1,5}\])+$
                        type: string
                      valuesKey:
                        description: |-
                          ValuesKey is the data key where the values.yaml or a specific value can be
                          found at. Defaults to 'values.yaml'.
                        maxLength: 253
                        pattern: ^[\-._a-zA-Z0-9]+$
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
              required:
                - interval
              type: object
              x-kubernetes-validations:
                - message: either chart or chartRef must be set
                  rule: (has(self.chart) && !has(self.chartRef)) || (!has(self.chart) && has(self.chartRef))
            status:
              default:
                observedGeneration: -1
              description: HelmReleaseStatus defines the observed state of a HelmRelease.
              properties:
                conditions:
                  description: Conditions holds the conditions for the HelmRelease.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                failures:
                  description: |-
                    Failures is the reconciliation failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                helmChart:
                  description: |-
                    HelmChart is the namespaced name of the HelmChart resource created by
                    the controller for the HelmRelease.
                  type: string
                history:
                  description: |-
                    History holds the history of Helm releases performed for this HelmRelease
                    up to the last successfully completed release.
                  items:
                    description: |-
                      Snapshot captures a point-in-time copy of the status information for a Helm release,
                      as managed by the controller.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion is the API version of the Snapshot.
                          Provisional: when the calculation method of the Digest field is changed,
                          this field will be used to distinguish between the old and new methods.
                        type: string
                      appVersion:
                        description: AppVersion is the chart app version of the release object in storage.
                        type: string
                      chartName:
                        description: ChartName is the chart name of the release object in storage.
                        type: string
                      chartVersion:
                        description: |-
                          ChartVersion is the chart version of the release object in
                          storage.
                        type: string
                      configDigest:
                        description: |-
                          ConfigDigest is the checksum of the config (better known as
                          "values") of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      deleted:
                        description: Deleted is when the release was deleted.
                        format: date-time
                        type: string
                      digest:
                        description: |-
                          Digest is the checksum of the release object in storage.
                          It has the format of `<algo>:<checksum>`.
                        type: string
                      firstDeployed:
                        description: FirstDeployed is when the release was first deployed.
                        format: date-time
                        type: string
                      lastDeployed:
                        description: LastDeployed is when the release was last deployed.
                        format: date-time
                        type: string
                      name:
                        description: Name is the name of the release.
                        type: string
                      namespace:
                        description: Namespace is the namespace the release is deployed to.
                        type: string
                      ociDigest:
                        description: OCIDigest is the digest of the OCI artifact associated with the release.
                        type: string
                      status:
                        description: Status is the current state of the release.
                        type: string
                      testHooks:
                        additionalProperties:
                          description: |-
                            TestHookStatus holds the status information for a test hook as observed
                            to be run by the controller.
                          properties:
                            lastCompleted:
                              description: LastCompleted is the time the test hook last completed.
                              format: date-time
                              type: string
                            lastStarted:
                              description: LastStarted is the time the test hook was last started.
                              format: date-time
                              type: string
                            phase:
                              description: Phase the test hook was observed to be in.
                              type: string
                          type: object
                        description: |-
                          TestHooks is the list of test hooks for the release as observed to be
                          run by the controller.
                        type: object
                      version:
                        description: Version is the version of the release object in storage.
                        type: integer
                    required:
                      - chartName
                      - chartVersion
                      - configDigest
                      - digest
                      - firstDeployed
                      - lastDeployed
                      - name
                      - namespace
                      - status
                      - version
                    type: object
                  type: array
                installFailures:
                  description: |-
                    InstallFailures is the install failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
                lastAppliedRevision:
                  description: |-
                    LastAppliedRevision is the revision of the last successfully applied
                    source.
                    Deprecated: the revision can now be found in the History.
                  type: string
                lastAttemptedConfigDigest:
                  description: |-
                    LastAttemptedConfigDigest is the digest for the config (better known as
                    "values") of the last reconciliation attempt.
                  type: string
                lastAttemptedGeneration:
                  description: |-
                    LastAttemptedGeneration is the last generation the controller attempted
                    to reconcile.
                  format: int64
                  type: integer
                lastAttemptedReleaseAction:
                  description: |-
                    LastAttemptedReleaseAction is the last release action performed for this
                    HelmRelease. It is used to determine the active remediation strategy.
                  enum:
                    - install
                    - upgrade
                  type: string
                lastAttemptedRevision:
                  description: |-
                    LastAttemptedRevision is the Source revision of the last reconciliation
                    attempt. For OCIRepository  sources, the 12 first characters of the digest are
                    appended to the chart version e.g. "1.2.3+1234567890ab".
                  type: string
                lastAttemptedRevisionDigest:
                  description: |-
                    LastAttemptedRevisionDigest is the digest of the last reconciliation attempt.
                    This is only set for OCIRepository sources.
                  type: string
                lastAttemptedValuesChecksum:
                  description: |-
                    LastAttemptedValuesChecksum is the SHA1 checksum for the values of the last
                    reconciliation attempt.
                    Deprecated: Use LastAttemptedConfigDigest instead.
                  type: string
                lastHandledForceAt:
                  description: |-
                    LastHandledForceAt holds the value of the most recent force request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastHandledResetAt:
                  description: |-
                    LastHandledResetAt holds the value of the most recent reset request
                    value, so a change of the annotation value can be detected.
                  type: string
                lastReleaseRevision:
                  description: |-
                    LastReleaseRevision is the revision of the last successful Helm release.
                    Deprecated: Use History instead.
                  type: integer
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedPostRenderersDigest:
                  description: |-
                    ObservedPostRenderersDigest is the digest for the post-renderers of
                    the last successful reconciliation attempt.
                  type: string
                storageNamespace:
                  description: |-
                    StorageNamespace is the namespace of the Helm release storage for the
                    current release.
                  maxLength: 63
                  minLength: 1
                  type: string
                upgradeFailures:
                  description: |-
                    UpgradeFailures is the upgrade failure count against the latest desired
                    state. It is reset after a successful reconciliation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: helmrepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: HelmRepository
    listKind: HelmRepositoryList
    plural: helmrepositories
    shortNames:
      - helmrepo
    singular: helmrepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                HelmRepositorySpec specifies the required configuration to produce an
                Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    It takes precedence over the values specified in the Secret referred
                    to by `.spec.secretRef`.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                insecure:
                  description: |-
                    Insecure allows connecting to a non-TLS HTTP container registry.
                    This field is only taken into account if the .spec.type field is set to 'oci'.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed
                    on to a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the
                    index differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result
                    in credentials getting stolen in a MITM-attack.
                  type: boolean
                provider:
                  default: generic
                  description: |-
                    Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    This field is optional, and only taken into account if the .spec.type field is set to 'oci'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the HelmRepository.
                    For HTTP/S basic auth the secret must contain 'username' and 'password'
                    fields.
                    Support for TLS auth using the 'certFile' and 'keyFile', and/or 'caFile'
                    keys is deprecated. Please use `.spec.certSecretRef` instead.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    HelmRepository.
                  type: boolean
                timeout:
                  description: |-
                    Timeout is used for the index fetch operation for an HTTPS helm repository,
                    and for remote OCI Repository operations like pulling for an OCI helm
                    chart by the associated HelmChart.
                    Its default value is 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: |-
                    Type of the HelmRepository.
                    When this field is set to  "oci", the URL field value must be prefixed with "oci://".
                  enum:
                    - default
                    - oci
                  type: string
                url:
                  description: |-
                    URL of the Helm repository, a valid URL contains at least a protocol and
                    host.
                  pattern: ^(http|https|oci)://.*$
                  type: string
              required:
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmRepository
                    object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 HelmRepository is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HelmRepositorySpec defines the reference to a Helm repository.
              properties:
                accessFrom:
                  description: AccessFrom defines an Access Control List for allowing cross-namespace references to this object.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                interval:
                  description: The interval at which to check the upstream for updates.
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed on to
                    a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the index
                    differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result in
                    credentials getting stolen in a MITM-attack.
                  type: boolean
                secretRef:
                  description: |-
                    The name of the secret containing authentication credentials for the Helm
                    repository.
                    For HTTP/S basic auth the secret must contain username and
                    password fields.
                    For TLS the secret must contain a certFile and keyFile, and/or
                    caFile fields.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout of index downloading, defaults to 60s.
                  type: string
                url:
                  description: The Helm repository URL, a valid URL contains at least a protocol and host.
                  type: string
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus defines the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the output of the last successful repository sync.
                  properties:
                    checksum:
                      description: Checksum is the SHA256 checksum of the artifact.
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of this
                        artifact.
                      format: date-time
                      type: string
                    path:
                      description: Path is the relative file path of this artifact.
                      type: string
                    revision:
                      description: |-
                        Revision is a human readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm index timestamp, a Helm
                        chart version, etc.
                      type: string
                    url:
                      description: URL is the HTTP address of this artifact.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: URL is the download link for the last index fetched.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 HelmRepository is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: HelmRepository is the Schema for the helmrepositories API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                HelmRepositorySpec specifies the required configuration to produce an
                Artifact for a Helm repository index YAML.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom specifies an Access Control List for allowing cross-namespace
                    references to this object.
                    NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    It takes precedence over the values specified in the Secret referred
                    to by `.spec.secretRef`.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                insecure:
                  description: |-
                    Insecure allows connecting to a non-TLS HTTP container registry.
                    This field is only taken into account if the .spec.type field is set to 'oci'.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the HelmRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                passCredentials:
                  description: |-
                    PassCredentials allows the credentials from the SecretRef to be passed
                    on to a host that does not match the host as defined in URL.
                    This may be required if the host of the advertised chart URLs in the
                    index differ from the defined URL.
                    Enabling this should be done with caution, as it can potentially result
                    in credentials getting stolen in a MITM-attack.
                  type: boolean
                provider:
                  default: generic
                  description: |-
                    Provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    This field is optional, and only taken into account if the .spec.type field is set to 'oci'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing authentication credentials
                    for the HelmRepository.
                    For HTTP/S basic auth the secret must contain 'username' and 'password'
                    fields.
                    Support for TLS auth using the 'certFile' and 'keyFile', and/or 'caFile'
                    keys is deprecated. Please use `.spec.certSecretRef` instead.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend the reconciliation of this
                    HelmRepository.
                  type: boolean
                timeout:
                  description: |-
                    Timeout is used for the index fetch operation for an HTTPS helm repository,
                    and for remote OCI Repository operations like pulling for an OCI helm
                    chart by the associated HelmChart.
                    Its default value is 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: |-
                    Type of the HelmRepository.
                    When this field is set to  "oci", the URL field value must be prefixed with "oci://".
                  enum:
                    - default
                    - oci
                  type: string
                url:
                  description: |-
                    URL of the Helm repository, a valid URL contains at least a protocol and
                    host.
                  pattern: ^(http|https|oci)://.*$
                  type: string
              required:
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: HelmRepositoryStatus records the observed state of the HelmRepository.
              properties:
                artifact:
                  description: Artifact represents the last successful HelmRepository reconciliation.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the HelmRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: |-
                    ObservedGeneration is the last observed generation of the HelmRepository
                    object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the dynamic fetch link for the latest Artifact.
                    It is provided on a "best effort" basis, and using the precise
                    HelmRepositoryStatus.Artifact data is recommended.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-reflector-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: imagepolicies.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImagePolicy
    listKind: ImagePolicyList
    plural: imagepolicies
    singular: imagepolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImagePolicySpec defines the parameters for calculating the
                ImagePolicy
              properties:
                filterTags:
                  description: |-
                    FilterTags enables filtering for only a subset of tags based on a set of
                    rules. If no rules are provided, all the tags from the repository will be
                    ordered and compared.
                  properties:
                    extract:
                      description: |-
                        Extract allows a capture group to be extracted from the specified regular
                        expression pattern, useful before tag evaluation.
                      type: string
                    pattern:
                      description: |-
                        Pattern specifies a regular expression pattern used to filter for image
                        tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: |-
                    ImageRepositoryRef points at the object specifying the image
                    being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                      type: string
                  required:
                    - name
                  type: object
                policy:
                  description: |-
                    Policy gives the particulars of the policy to be followed in
                    selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the letters of the
                            alphabet as tags, ascending order would select Z, and descending order
                            would select A.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the integer values
                            from 0 to 9 as tags, ascending order would select 9, and descending order
                            would select 0.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    semver:
                      description: |-
                        SemVer gives a semantic version range to check against the tags
                        available.
                      properties:
                        range:
                          description: |-
                            Range gives a semver range for the image tag; the highest
                            version within the range that's a tag yields the latest image.
                          type: string
                      required:
                        - range
                      type: object
                  type: object
              required:
                - imageRepositoryRef
                - policy
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                latestImage:
                  description: |-
                    LatestImage gives the first in the list of images scanned by
                    the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.latestImage
          name: LatestImage
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImagePolicy is the Schema for the imagepolicies API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImagePolicySpec defines the parameters for calculating the
                ImagePolicy.
              properties:
                filterTags:
                  description: |-
                    FilterTags enables filtering for only a subset of tags based on a set of
                    rules. If no rules are provided, all the tags from the repository will be
                    ordered and compared.
                  properties:
                    extract:
                      description: |-
                        Extract allows a capture group to be extracted from the specified regular
                        expression pattern, useful before tag evaluation.
                      type: string
                    pattern:
                      description: |-
                        Pattern specifies a regular expression pattern used to filter for image
                        tags.
                      type: string
                  type: object
                imageRepositoryRef:
                  description: |-
                    ImageRepositoryRef points at the object specifying the image
                    being scanned
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                      type: string
                  required:
                    - name
                  type: object
                policy:
                  description: |-
                    Policy gives the particulars of the policy to be followed in
                    selecting the most recent image
                  properties:
                    alphabetical:
                      description: Alphabetical set of rules to use for alphabetical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the letters of the
                            alphabet as tags, ascending order would select Z, and descending order
                            would select A.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    numerical:
                      description: Numerical set of rules to use for numerical ordering of the tags.
                      properties:
                        order:
                          default: asc
                          description: |-
                            Order specifies the sorting order of the tags. Given the integer values
                            from 0 to 9 as tags, ascending order would select 9, and descending order
                            would select 0.
                          enum:
                            - asc
                            - desc
                          type: string
                      type: object
                    semver:
                      description: |-
                        SemVer gives a semantic version range to check against the tags
                        available.
                      properties:
                        range:
                          description: |-
                            Range gives a semver range for the image tag; the highest
                            version within the range that's a tag yields the latest image.
                          type: string
                      required:
                        - range
                      type: object
                  type: object
              required:
                - imageRepositoryRef
                - policy
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImagePolicyStatus defines the observed state of ImagePolicy
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                latestImage:
                  description: |-
                    LatestImage gives the first in the list of images scanned by
                    the image repository, when filtered and ordered according to
                    the policy.
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                observedPreviousImage:
                  description: |-
                    ObservedPreviousImage is the observed previous LatestImage. It is used
                    to keep track of the previous and current images.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-reflector-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: imagerepositories.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImageRepository
    listKind: ImageRepositoryList
    plural: imagerepositories
    singular: imagerepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.lastScanResult.scanTime
          name: Last scan
          type: string
        - jsonPath: .status.lastScanResult.tagCount
          name: Tags
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImageRepositorySpec defines the parameters for scanning an image
                repository, e.g., `fluxcd/flux`.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom defines an ACL for allowing cross-namespace references
                    to the ImageRepository object based on the caller's namespace labels.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a secret containing
                    either or both of

                     - a PEM-encoded client certificate (`certFile`) and private
                     key (`keyFile`);
                     - a PEM-encoded CA certificate (`caFile`)

                     and whichever are supplied, will be used for connecting to the
                     registry. The client cert and key are useful if you are
                     authenticating with a certificate; the CA cert is useful if
                     you are using a self-signed server certificate.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                exclusionList:
                  description: |-
                    ExclusionList is a list of regex strings used to exclude certain tags
                    from being stored in the database.
                  items:
                    type: string
                  type: array
                image:
                  description: Image is the name of the image repository
                  type: string
                interval:
                  description: |-
                    Interval is the length of time to wait between
                    scans of the image repository.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                secretRef:
                  description: |-
                    SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the
                    equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets.
                  maxLength: 253
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent image scans.
                    It does not apply to already started scans. Defaults to false.
                  type: boolean
                timeout:
                  description: |-
                    Timeout for image scanning.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - image
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: |-
                    CanonicalName is the name of the image repository with all the
                    implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                    - tagCount
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.lastScanResult.scanTime
          name: Last scan
          type: string
        - jsonPath: .status.lastScanResult.tagCount
          name: Tags
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImageRepository is the Schema for the imagerepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                ImageRepositorySpec defines the parameters for scanning an image
                repository, e.g., `fluxcd/flux`.
              properties:
                accessFrom:
                  description: |-
                    AccessFrom defines an ACL for allowing cross-namespace references
                    to the ImageRepository object based on the caller's namespace labels.
                  properties:
                    namespaceSelectors:
                      description: |-
                        NamespaceSelectors is the list of namespace selectors to which this ACL applies.
                        Items in this list are evaluated using a logical OR operation.
                      items:
                        description: |-
                          NamespaceSelector selects the namespaces to which this ACL applies.
                          An empty map of MatchLabels matches all namespaces in a cluster.
                        properties:
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                      type: array
                  required:
                    - namespaceSelectors
                  type: object
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    Note: Support for the `caFile`, `certFile` and `keyFile` keys has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                exclusionList:
                  default:
                    - ^.*\.sig$
                  description: |-
                    ExclusionList is a list of regex strings used to exclude certain tags
                    from being stored in the database.
                  items:
                    type: string
                  maxItems: 25
                  type: array
                image:
                  description: Image is the name of the image repository
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: |-
                    Interval is the length of time to wait between
                    scans of the image repository.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                provider:
                  default: generic
                  description: |-
                    The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the container registry.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                secretRef:
                  description: |-
                    SecretRef can be given the name of a secret containing
                    credentials to use for the image registry. The secret should be
                    created with `kubectl create secret docker-registry`, or the
                    equivalent.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets.
                  maxLength: 253
                  type: string
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent image scans.
                    It does not apply to already started scans. Defaults to false.
                  type: boolean
                timeout:
                  description: |-
                    Timeout for image scanning.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
              required:
                - image
                - interval
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageRepositoryStatus defines the observed state of ImageRepository
              properties:
                canonicalImageName:
                  description: |-
                    CanonicalName is the name of the image repository with all the
                    implied bits made explicit; e.g., `docker.io/library/alpine`
                    rather than `alpine`.
                  type: string
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastScanResult:
                  description: LastScanResult contains the number of fetched tags.
                  properties:
                    latestTags:
                      items:
                        type: string
                      type: array
                    scanTime:
                      format: date-time
                      type: string
                    tagCount:
                      type: integer
                  required:
                    - tagCount
                  type: object
                observedExclusionList:
                  description: |-
                    ObservedExclusionList is a list of observed exclusion list. It reflects
                    the exclusion rules used for the observed scan result in
                    spec.lastScanResult.
                  items:
                    type: string
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: image-automation-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: imageupdateautomations.image.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: image.toolkit.fluxcd.io
  names:
    kind: ImageUpdateAutomation
    listKind: ImageUpdateAutomationList
    plural: imageupdateautomations
    singular: imageupdateautomation
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.lastAutomationRunTime
          name: Last run
          type: string
      deprecated: true
      deprecationWarning: v1beta1 ImageUpdateAutomation is deprecated, upgrade to v1beta2
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of ImageUpdateAutomation
              properties:
                git:
                  description: |-
                    GitSpec contains all the git-specific definitions. This is
                    technically optional, but in practice mandatory until there are
                    other kinds of source allowed.
                  properties:
                    checkout:
                      description: |-
                        Checkout gives the parameters for cloning the git repository,
                        ready to make changes. If not present, the `spec.ref` field from the
                        referenced `GitRepository` or its default will be used.
                      properties:
                        ref:
                          description: |-
                            Reference gives a branch, tag or commit to clone from the Git
                            repository.
                          properties:
                            branch:
                              description: Branch to check out, defaults to 'master' if no other field is defined.
                              type: string
                            commit:
                              description: |-
                                Commit SHA to check out, takes precedence over all reference fields.

                                This can be combined with Branch to shallow clone the branch, in which
                                the commit is expected to exist.
                              type: string
                            name:
                              description: |-
                                Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                                It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                                Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                              type: string
                            semver:
                              description: SemVer tag expression to check out, takes precedence over Tag.
                              type: string
                            tag:
                              description: Tag to check out, takes precedence over Branch.
                              type: string
                          type: object
                      required:
                        - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: |-
                            Author gives the email and optionally the name to use as the
                            author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making a commit.
                              type: string
                          required:
                            - email
                          type: object
                        messageTemplate:
                          description: |-
                            MessageTemplate provides a template for the commit message,
                            into which will be interpolated the details of the change made.
                          type: string
                        signingKey:
                          description: SigningKey provides the option to sign commits with a GPG key
                          properties:
                            secretRef:
                              description: |-
                                SecretRef holds the name to a secret that contains a 'git.asc' key
                                corresponding to the ASCII Armored file containing the GPG signing
                                keypair as the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - secretRef
                          type: object
                      required:
                        - author
                      type: object
                    push:
                      description: |-
                        Push specifies how and where to push commits made by the
                        automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: |-
                            Branch specifies that commits should be pushed to the branch
                            named. The branch is created using `.spec.checkout.branch` as the
                            starting point, if it doesn't already exist.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: |-
                            Options specifies the push options that are sent to the Git
                            server when performing a push operation. For details, see:
                            https://git-scm.com/docs/git-push#Documentation/git-push.txt---push-optionltoptiongt
                          type: object
                        refspec:
                          description: |-
                            Refspec specifies the Git Refspec to use for a push operation.
                            If both Branch and Refspec are provided, then the commit is pushed
                            to the branch and also using the specified refspec.
                            For more details about Git Refspecs, see:
                            https://git-scm.com/book/en/v2/Git-Internals-The-Refspec
                          type: string
                      type: object
                  required:
                    - commit
                  type: object
                interval:
                  description: |-
                    Interval gives an lower bound for how often the automation
                    run should be attempted.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                sourceRef:
                  description: |-
                    SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent.
                      enum:
                        - GitRepository
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to not run this automation, until
                    it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: |-
                    Update gives the specification for how to update the files in
                    the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: |-
                        Path to the directory containing the manifests to be updated.
                        Defaults to 'None', which translates to the root path
                        of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                        - Setters
                      type: string
                  required:
                    - strategy
                  type: object
              required:
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageUpdateAutomationStatus defines the observed state of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: |-
                    LastAutomationRunTime records the last time the controller ran
                    this automation through to completion (even if no updates were
                    made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastPushCommit:
                  description: |-
                    LastPushCommit records the SHA1 of the last commit made by the
                    controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.lastAutomationRunTime
          name: Last run
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: ImageUpdateAutomation is the Schema for the imageupdateautomations API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageUpdateAutomationSpec defines the desired state of ImageUpdateAutomation
              properties:
                git:
                  description: |-
                    GitSpec contains all the git-specific definitions. This is
                    technically optional, but in practice mandatory until there are
                    other kinds of source allowed.
                  properties:
                    checkout:
                      description: |-
                        Checkout gives the parameters for cloning the git repository,
                        ready to make changes. If not present, the `spec.ref` field from the
                        referenced `GitRepository` or its default will be used.
                      properties:
                        ref:
                          description: |-
                            Reference gives a branch, tag or commit to clone from the Git
                            repository.
                          properties:
                            branch:
                              description: Branch to check out, defaults to 'master' if no other field is defined.
                              type: string
                            commit:
                              description: |-
                                Commit SHA to check out, takes precedence over all reference fields.

                                This can be combined with Branch to shallow clone the branch, in which
                                the commit is expected to exist.
                              type: string
                            name:
                              description: |-
                                Name of the reference to check out; takes precedence over Branch, Tag and SemVer.

                                It must be a valid Git reference: https://git-scm.com/docs/git-check-ref-format#_description
                                Examples: "refs/heads/main", "refs/tags/v0.1.0", "refs/pull/420/head", "refs/merge-requests/1/head"
                              type: string
                            semver:
                              description: SemVer tag expression to check out, takes precedence over Tag.
                              type: string
                            tag:
                              description: Tag to check out, takes precedence over Branch.
                              type: string
                          type: object
                      required:
                        - ref
                      type: object
                    commit:
                      description: Commit specifies how to commit to the git repository.
                      properties:
                        author:
                          description: |-
                            Author gives the email and optionally the name to use as the
                            author of commits.
                          properties:
                            email:
                              description: Email gives the email to provide when making a commit.
                              type: string
                            name:
                              description: Name gives the name to provide when making a commit.
                              type: string
                          required:
                            - email
                          type: object
                        messageTemplate:
                          description: |-
                            MessageTemplate provides a template for the commit message,
                            into which will be interpolated the details of the change made.
                          type: string
                        signingKey:
                          description: SigningKey provides the option to sign commits with a GPG key
                          properties:
                            secretRef:
                              description: |-
                                SecretRef holds the name to a secret that contains a 'git.asc' key
                                corresponding to the ASCII Armored file containing the GPG signing
                                keypair as the value. It must be in the same namespace as the
                                ImageUpdateAutomation.
                              properties:
                                name:
                                  description: Name of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - secretRef
                          type: object
                      required:
                        - author
                      type: object
                    push:
                      description: |-
                        Push specifies how and where to push commits made by the
                        automation. If missing, commits are pushed (back) to
                        `.spec.checkout.branch` or its default.
                      properties:
                        branch:
                          description: |-
                            Branch specifies that commits should be pushed to the branch
                            named. The branch is created using `.spec.checkout.branch` as the
                            starting point, if it doesn't already exist.
                          type: string
                        options:
                          additionalProperties:
                            type: string
                          description: |-
                            Options specifies the push options that are sent to the Git
                            server when performing a push operation. For details, see:
                            https://git-scm.com/docs/git-push#Documentation/git-push.txt---push-optionltoptiongt
                          type: object
                        refspec:
                          description: |-
                            Refspec specifies the Git Refspec to use for a push operation.
                            If both Branch and Refspec are provided, then the commit is pushed
                            to the branch and also using the specified refspec.
                            For more details about Git Refspecs, see:
                            https://git-scm.com/book/en/v2/Git-Internals-The-Refspec
                          type: string
                      type: object
                  required:
                    - commit
                  type: object
                interval:
                  description: |-
                    Interval gives an lower bound for how often the automation
                    run should be attempted.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                policySelector:
                  description: |-
                    PolicySelector allows to filter applied policies based on labels.
                    By default includes all policies in namespace.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                sourceRef:
                  description: |-
                    SourceRef refers to the resource giving access details
                    to a git repository.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      default: GitRepository
                      description: Kind of the referent.
                      enum:
                        - GitRepository
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to not run this automation, until
                    it is unset (or set to false). Defaults to false.
                  type: boolean
                update:
                  default:
                    strategy: Setters
                  description: |-
                    Update gives the specification for how to update the files in
                    the repository. This can be left empty, to use the default
                    value.
                  properties:
                    path:
                      description: |-
                        Path to the directory containing the manifests to be updated.
                        Defaults to 'None', which translates to the root path
                        of the GitRepositoryRef.
                      type: string
                    strategy:
                      default: Setters
                      description: Strategy names the strategy to be used.
                      enum:
                        - Setters
                      type: string
                  required:
                    - strategy
                  type: object
              required:
                - interval
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: ImageUpdateAutomationStatus defines the observed state of ImageUpdateAutomation
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAutomationRunTime:
                  description: |-
                    LastAutomationRunTime records the last time the controller ran
                    this automation through to completion (even if no updates were
                    made).
                  format: date-time
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                lastPushCommit:
                  description: |-
                    LastPushCommit records the SHA1 of the last commit made by the
                    controller, for this automation object
                  type: string
                lastPushTime:
                  description: LastPushTime records the time of the last pushed change.
                  format: date-time
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                observedPolicies:
                  additionalProperties:
                    description: ImageRef represents an image reference.
                    properties:
                      name:
                        description: Name is the bare image's name.
                        type: string
                      tag:
                        description: Tag is the image's tag.
                        type: string
                    required:
                      - name
                      - tag
                    type: object
                  description: |-
                    ObservedPolicies is the list of observed ImagePolicies that were
                    considered by the ImageUpdateAutomation update process.
                  type: object
                observedSourceRevision:
                  description: |-
                    ObservedPolicies []ObservedPolicy `json:"observedPolicies,omitempty"`
                    ObservedSourceRevision is the last observed source revision. This can be
                    used to determine if the source has been updated since last observation.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: infraassessmentreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: InfraAssessmentReport
    listKind: InfraAssessmentReportList
    plural: infraassessmentreports
    shortNames:
      - infraassessment
      - infraassessments
    singular: infraassessmentreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the infra assessment scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: InfraAssessmentReport is a specification for the InfraAssessmentReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: InfraAssessmentSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
              required:
                - checks
                - scanner
                - summary
              type: object
          required:
            - report
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: issuers.cert-manager.io
spec:
  conversion:
    strategy: None
  group: cert-manager.io
  names:
    categories:
      - cert-manager
    kind: Issuer
    listKind: IssuerList
    plural: issuers
    singular: issuer
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: |-
            An Issuer represents a certificate issuing authority which can be
            referenced as part of `issuerRef` fields.
            It is scoped to a single namespace and can therefore only be referenced by
            resources within the same namespace.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Desired state of the Issuer resource.
              properties:
                acme:
                  description: |-
                    ACME configures this issuer to communicate with a RFC8555 (ACME) server
                    to obtain signed x509 certificates.
                  properties:
                    caBundle:
                      description: |-
                        Base64-encoded bundle of PEM CAs which can be used to validate the certificate
                        chain presented by the ACME server.
                        Mutually exclusive with SkipTLSVerify; prefer using CABundle to prevent various
                        kinds of security vulnerabilities.
                        If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
                        the container is used to validate the TLS connection.
                      format: byte
                      type: string
                    disableAccountKeyGeneration:
                      description: |-
                        Enables or disables generating a new ACME account key.
                        If true, the Issuer resource will *not* request a new account but will expect
                        the account key to be supplied via an existing secret.
                        If false, the cert-manager system will generate a new ACME account key
                        for the Issuer.
                        Defaults to false.
                      type: boolean
                    email:
                      description: |-
                        Email is the email address to be associated with the ACME account.
                        This field is optional, but it is strongly recommended to be set.
                        It will be used to contact you in case of issues with your account or
                        certificates, including expiry notification emails.
                        This field may be updated after the account is initially registered.
                      type: string
                    enableDurationFeature:
                      description: |-
                        Enables requesting a Not After date on certificates that matches the
                        duration of the certificate. This is not supported by all ACME servers
                        like Let's Encrypt. If set to true when the ACME server does not support
                        it, it will create an error on the Order.
                        Defaults to false.
                      type: boolean
                    externalAccountBinding:
                      description: |-
                        ExternalAccountBinding is a reference to a CA external account of the ACME
                        server.
                        If set, upon registration cert-manager will attempt to associate the given
                        external account credentials with the registered ACME account.
                      properties:
                        keyAlgorithm:
                          description: |-
                            Deprecated: keyAlgorithm field exists for historical compatibility
                            reasons and should not be used. The algorithm is now hardcoded to HS256
                            in golang/x/crypto/acme.
                          enum:
                            - HS256
                            - HS384
                            - HS512
                          type: string
                        keyID:
                          description: keyID is the ID of the CA key that the External Account is bound to.
                          type: string
                        keySecretRef:
                          description: |-
                            keySecretRef is a Secret Key Selector referencing a data item in a Kubernetes
                            Secret which holds the symmetric MAC key of the External Account Binding.
                            The `key` is the index string that is paired with the key data in the
                            Secret and should not be confused with the key data itself, or indeed with
                            the External Account Binding keyID above.
                            The secret key stored in the Secret **must** be un-padded, base64 URL
                            encoded data.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - keyID
                        - keySecretRef
                      type: object
                    preferredChain:
                      description: |-
                        PreferredChain is the chain to use if the ACME server outputs multiple.
                        PreferredChain is no guarantee that this one gets delivered by the ACME
                        endpoint.
                        For example, for Let's Encrypt's DST crosssign you would use:
                        "DST Root CA X3" or "ISRG Root X1" for the newer Let's Encrypt root CA.
                        This value picks the first certificate bundle in the combined set of
                        ACME default and alternative chains that has a root-most certificate with
                        this value as its issuer's commonname.
                      maxLength: 64
                      type: string
                    privateKeySecretRef:
                      description: |-
                        PrivateKey is the name of a Kubernetes Secret resource that will be used to
                        store the automatically generated ACME account private key.
                        Optionally, a `key` may be specified to select a specific entry within
                        the named Secret resource.
                        If `key` is not specified, a default of `tls.key` will be used.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    server:
                      description: |-
                        Server is the URL used to access the ACME server's 'directory' endpoint.
                        For example, for Let's Encrypt's staging endpoint, you would use:
                        "https://acme-staging-v02.api.letsencrypt.org/directory".
                        Only ACME v2 endpoints (i.e. RFC 8555) are supported.
                      type: string
                    skipTLSVerify:
                      description: |-
                        INSECURE: Enables or disables validation of the ACME server TLS certificate.
                        If true, requests to the ACME server will not have the TLS certificate chain
                        validated.
                        Mutually exclusive with CABundle; prefer using CABundle to prevent various
                        kinds of security vulnerabilities.
                        Only enable this option in development environments.
                        If CABundle and SkipTLSVerify are unset, the system certificate bundle inside
                        the container is used to validate the TLS connection.
                        Defaults to false.
                      type: boolean
                    solvers:
                      description: |-
                        Solvers is a list of challenge solvers that will be used to solve
                        ACME challenges for the matching domains.
                        Solver configurations must be provided in order to obtain certificates
                        from an ACME server.
                        For more information, see: https://cert-manager.io/docs/configuration/acme/
                      items:
                        description: |-
                          An ACMEChallengeSolver describes how to solve ACME challenges for the issuer it is part of.
                          A selector may be provided to use different solving strategies for different DNS names.
                          Only one of HTTP01 or DNS01 must be provided.
                        properties:
                          dns01:
                            description: |-
                              Configures cert-manager to attempt to complete authorizations by
                              performing the DNS01 challenge flow.
                            properties:
                              acmeDNS:
                                description: |-
                                  Use the 'ACME DNS' (https://github.com/joohoi/acme-dns) API to manage
                                  DNS01 challenge records.
                                properties:
                                  accountSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  host:
                                    type: string
                                required:
                                  - accountSecretRef
                                  - host
                                type: object
                              akamai:
                                description: Use the Akamai DNS zone management API to manage DNS01 challenge records.
                                properties:
                                  accessTokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientSecretSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientTokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  serviceConsumerDomain:
                                    type: string
                                required:
                                  - accessTokenSecretRef
                                  - clientSecretSecretRef
                                  - clientTokenSecretRef
                                  - serviceConsumerDomain
                                type: object
                              azureDNS:
                                description: Use the Microsoft Azure DNS API to manage DNS01 challenge records.
                                properties:
                                  clientID:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      The ClientID of the Azure Service Principal used to authenticate with Azure DNS.
                                      If set, ClientSecret and TenantID must also be set.
                                    type: string
                                  clientSecretSecretRef:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      A reference to a Secret containing the password associated with the Service Principal.
                                      If set, ClientID and TenantID must also be set.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  environment:
                                    description: name of the Azure environment (default AzurePublicCloud)
                                    enum:
                                      - AzurePublicCloud
                                      - AzureChinaCloud
                                      - AzureGermanCloud
                                      - AzureUSGovernmentCloud
                                    type: string
                                  hostedZoneName:
                                    description: name of the DNS zone that should be used
                                    type: string
                                  managedIdentity:
                                    description: |-
                                      Auth: Azure Workload Identity or Azure Managed Service Identity:
                                      Settings to enable Azure Workload Identity or Azure Managed Service Identity
                                      If set, ClientID, ClientSecret and TenantID must not be set.
                                    properties:
                                      clientID:
                                        description: client ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                      resourceID:
                                        description: |-
                                          resource ID of the managed identity, can not be used at the same time as clientID
                                          Cannot be used for Azure Managed Service Identity
                                        type: string
                                      tenantID:
                                        description: tenant ID of the managed identity, can not be used at the same time as resourceID
                                        type: string
                                    type: object
                                  resourceGroupName:
                                    description: resource group the DNS zone is located in
                                    type: string
                                  subscriptionID:
                                    description: ID of the Azure subscription
                                    type: string
                                  tenantID:
                                    description: |-
                                      Auth: Azure Service Principal:
                                      The TenantID of the Azure Service Principal used to authenticate with Azure DNS.
                                      If set, ClientID and ClientSecret must also be set.
                                    type: string
                                required:
                                  - resourceGroupName
                                  - subscriptionID
                                type: object
                              cloudDNS:
                                description: Use the Google Cloud DNS API to manage DNS01 challenge records.
                                properties:
                                  hostedZoneName:
                                    description: |-
                                      HostedZoneName is an optional field that tells cert-manager in which
                                      Cloud DNS zone the challenge record has to be created.
                                      If left empty cert-manager will automatically choose a zone.
                                    type: string
                                  project:
                                    type: string
                                  serviceAccountSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - project
                                type: object
                              cloudflare:
                                description: Use the Cloudflare API to manage DNS01 challenge records.
                                properties:
                                  apiKeySecretRef:
                                    description: |-
                                      API key to use to authenticate with Cloudflare.
                                      Note: using an API token to authenticate is now the recommended method
                                      as it allows greater control of permissions.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  apiTokenSecretRef:
                                    description: API token used to authenticate with Cloudflare.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  email:
                                    description: Email of the account, only required when using API key based authentication.
                                    type: string
                                type: object
                              cnameStrategy:
                                description: |-
                                  CNAMEStrategy configures how the DNS01 provider should handle CNAME
                                  records when found in DNS zones.
                                enum:
                                  - None
                                  - Follow
                                type: string
                              digitalocean:
                                description: Use the DigitalOcean DNS API to manage DNS01 challenge records.
                                properties:
                                  tokenSecretRef:
                                    description: |-
                                      A reference to a specific 'key' within a Secret resource.
                                      In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - tokenSecretRef
                                type: object
                              rfc2136:
                                description: |-
                                  Use RFC2136 ("Dynamic Updates in the Domain Name System") (https://datatracker.ietf.org/doc/rfc2136/)
                                  to manage DNS01 challenge records.
                                properties:
                                  nameserver:
                                    description: |-
                                      The IP address or hostname of an authoritative DNS server supporting
                                      RFC2136 in the form host:port. If the host is an IPv6 address it must be
                                      enclosed in square brackets (e.g [2001:db8::1]) ; port is optional.
                                      This field is required.
                                    type: string
                                  tsigAlgorithm:
                                    description: |-
                                      The TSIG Algorithm configured in the DNS supporting RFC2136. Used only
                                      when ``tsigSecretSecretRef`` and ``tsigKeyName`` are defined.
                                      Supported values are (case-insensitive): ``HMACMD5`` (default),
                                      ``HMACSHA1``, ``HMACSHA256`` or ``HMACSHA512``.
                                    type: string
                                  tsigKeyName:
                                    description: |-
                                      The TSIG Key name configured in the DNS.
                                      If ``tsigSecretSecretRef`` is defined, this field is required.
                                    type: string
                                  tsigSecretSecretRef:
                                    description: |-
                                      The name of the secret containing the TSIG value.
                                      If ``tsigKeyName`` is defined, this field is required.
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - nameserver
                                type: object
                              route53:
                                description: Use the AWS Route53 API to manage DNS01 challenge records.
                                properties:
                                  accessKeyID:
                                    description: |-
                                      The AccessKeyID is used for authentication.
                                      Cannot be set when SecretAccessKeyID is set.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    type: string
                                  accessKeyIDSecretRef:
                                    description: |-
                                      The SecretAccessKey is used for authentication. If set, pull the AWS
                                      access key ID from a key within a Kubernetes Secret.
                                      Cannot be set when AccessKeyID is set.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  auth:
                                    description: Auth configures how cert-manager authenticates.
                                    properties:
                                      kubernetes:
                                        description: |-
                                          Kubernetes authenticates with Route53 using AssumeRoleWithWebIdentity
                                          by passing a bound ServiceAccount token.
                                        properties:
                                          serviceAccountRef:
                                            description: |-
                                              A reference to a service account that will be used to request a bound
                                              token (also known as "projected token"). To use this field, you must
                                              configure an RBAC rule to let cert-manager request a token.
                                            properties:
                                              audiences:
                                                description: |-
                                                  TokenAudiences is an optional list of audiences to include in the
                                                  token passed to AWS. The default token consisting of the issuer's namespace
                                                  and name is always included.
                                                  If unset the audience defaults to `sts.amazonaws.com`.
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: Name of the ServiceAccount used to request a token.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                    required:
                                      - kubernetes
                                    type: object
                                  hostedZoneID:
                                    description: If set, the provider will manage only this zone in Route53 and will not do a lookup using the route53:ListHostedZonesByName api call.
                                    type: string
                                  region:
                                    description: |-
                                      Override the AWS region.

                                      Route53 is a global service and does not have regional endpoints but the
                                      region specified here (or via environment variables) is used as a hint to
                                      help compute the correct AWS credential scope and partition when it
                                      connects to Route53. See:
                                      - [Amazon Route 53 endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/r53.html)
                                      - [Global services](https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html)

                                      If you omit this region field, cert-manager will use the region from
                                      AWS_REGION and AWS_DEFAULT_REGION environment variables, if they are set
                                      in the cert-manager controller Pod.

                                      The `region` field is not needed if you use [IAM Roles for Service Accounts (IRSA)](https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html).
                                      Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                      [Amazon EKS Pod Identity Webhook](https://github.com/aws/amazon-eks-pod-identity-webhook).
                                      In this case this `region` field value is ignored.

                                      The `region` field is not needed if you use [EKS Pod Identities](https://docs.aws.amazon.com/eks/latest/userguide/pod-identities.html).
                                      Instead an AWS_REGION environment variable is added to the cert-manager controller Pod by:
                                      [Amazon EKS Pod Identity Agent](https://github.com/aws/eks-pod-identity-agent),
                                      In this case this `region` field value is ignored.
                                    type: string
                                  role:
                                    description: |-
                                      Role is a Role ARN which the Route53 provider will assume using either the explicit credentials AccessKeyID/SecretAccessKey
                                      or the inferred credentials from environment variables, shared credentials file or AWS Instance metadata
                                    type: string
                                  secretAccessKeySecretRef:
                                    description: |-
                                      The SecretAccessKey is used for authentication.
                                      If neither the Access Key nor Key ID are set, we fall-back to using env
                                      vars, shared credentials file or AWS Instance metadata,
                                      see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                    properties:
                                      key:
                                        description: |-
                                          The key of the entry in the Secret resource's `data` field to be used.
                                          Some instances of this field may be defaulted, in others it may be
                                          required.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the resource being referred to.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              webhook:
                                description: |-
                                  Configure an external webhook based DNS01 challenge solver to manage
                                  DNS01 challenge records.
                                properties:
                                  config:
                                    description: |-
                                      Additional configuration that should be passed to the webhook apiserver
                                      when challenges are processed.
                                      This can contain arbitrary JSON data.
                                      Secret values should not be specified in this stanza.
                                      If secret values are needed (e.g. credentials for a DNS service), you
                                      should use a SecretKeySelector to reference a Secret resource.
                                      For details on the schema of this field, consult the webhook provider
                                      implementation's documentation.
                                    x-kubernetes-preserve-unknown-fields: true
                                  groupName:
                                    description: |-
                                      The API group name that should be used when POSTing ChallengePayload
                                      resources to the webhook apiserver.
                                      This should be the same as the GroupName specified in the webhook
                                      provider implementation.
                                    type: string
                                  solverName:
                                    description: |-
                                      The name of the solver to use, as defined in the webhook provider
                                      implementation.
                                      This will typically be the name of the provider, e.g. 'cloudflare'.
                                    type: string
                                required:
                                  - groupName
                                  - solverName
                                type: object
                            type: object
                          http01:
                            description: |-
                              Configures cert-manager to attempt to complete authorizations by
                              performing the HTTP01 challenge flow.
                              It is not possible to obtain certificates for wildcard domain names
                              (e.g. `*.example.com`) using the HTTP01 challenge mechanism.
                            properties:
                              gatewayHTTPRoute:
                                description: |-
                                  The Gateway API is a sig-network community API that models service networking
                                  in Kubernetes (https://gateway-api.sigs.k8s.io/). The Gateway solver will
                                  create HTTPRoutes with the specified labels in the same namespace as the challenge.
                                  This solver is experimental, and fields / behaviour may change in the future.
                                properties:
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      Custom labels that will be applied to HTTPRoutes created by cert-manager
                                      while solving HTTP-01 challenges.
                                    type: object
                                  parentRefs:
                                    description: |-
                                      When solving an HTTP-01 challenge, cert-manager creates an HTTPRoute.
                                      cert-manager needs to know which parentRefs should be used when creating
                                      the HTTPRoute. Usually, the parentRef references a Gateway. See:
                                      https://gateway-api.sigs.k8s.io/api-types/httproute/#attaching-to-gateways
                                    items:
                                      description: |-
                                        ParentReference identifies an API object (usually a Gateway) that can be considered
                                        a parent of this resource (usually a route). There are two kinds of parent resources
                                        with "Core" support:

                                        * Gateway (Gateway conformance profile)
                                        * Service (Mesh conformance profile, ClusterIP Services only)

                                        This API may be extended in the future to support additional kinds of parent
                                        resources.

                                        The API object must be valid in the cluster; the Group and Kind must
                                        be registered in the cluster for this reference to be valid.
                                      properties:
                                        group:
                                          default: gateway.networking.k8s.io
                                          description: |-
                                            Group is the group of the referent.
                                            When unspecified, "gateway.networking.k8s.io" is inferred.
                                            To set the core API group (such as for a "Service" kind referent),
                                            Group must be explicitly set to "" (empty string).

                                            Support: Core
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Gateway
                                          description: |-
                                            Kind is kind of the referent.

                                            There are two kinds of parent resources with "Core" support:

                                            * Gateway (Gateway conformance profile)
                                            * Service (Mesh conformance profile, ClusterIP Services only)

                                            Support for other resources is Implementation-Specific.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: |-
                                            Name is the name of the referent.

                                            Support: Core
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the referent. When unspecified, this refers
                                            to the local namespace of the Route.

                                            Note that there are specific rules for ParentRefs which cross namespace
                                            boundaries. Cross-namespace references are only valid if they are explicitly
                                            allowed by something in the namespace they are referring to. For example:
                                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                                            generic way to enable any other kind of cross-namespace reference.

                                            <gateway:experimental:description>
                                            ParentRefs from a Route to a Service in the same namespace are "producer"
                                            routes, which apply default routing rules to inbound connections from
                                            any namespace to the Service.

                                            ParentRefs from a Route to a Service in a different namespace are
                                            "consumer" routes, and these routing rules are only applied to outbound
                                            connections originating from the same namespace as the Route, for which
                                            the intended destination of the connections are a Service targeted as a
                                            ParentRef of the Route.
                                            </gateway:experimental:description>

                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port is the network port this Route targets. It can be interpreted
                                            differently based on the type of parent resource.

                                            When the parent resource is a Gateway, this targets all listeners
                                            listening on the specified port that also support this kind of Route(and
                                            select this Route). It's not recommended to set `Port` unless the
                                            networking behaviors specified in a Route must apply to a specific port
                                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                                            and SectionName are specified, the name and port of the selected listener
                                            must match both specified values.

                                            <gateway:experimental:description>
                                            When the parent resource is a Service, this targets a specific port in the
                                            Service spec. When both Port (experimental) and SectionName are specified,
                                            the name and port of the selected port must match both specified values.
                                            </gateway:experimental:description>

                                            Implementations MAY choose to support other parent resources.
                                            Implementations supporting other types of parent resources MUST clearly
                                            document how/if Port is interpreted.

                                            For the purpose of status, an attachment is considered successful as
                                            long as the parent resource accepts it partially. For example, Gateway
                                            listeners can restrict which Routes can attach to them by Route kind,
                                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                                            from the referencing Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept attachment from this Route,
                                            the Route MUST be considered detached from the Gateway.

                                            Support: Extended
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        sectionName:
                                          description: |-
                                            SectionName is the name of a section within the target resource. In the
                                            following resources, SectionName is interpreted as the following:

                                            * Gateway: Listener name. When both Port (experimental) and SectionName
                                            are specified, the name and port of the selected listener must match
                                            both specified values.
                                            * Service: Port name. When both Port (experimental) and SectionName
                                            are specified, the name and port of the selected listener must match
                                            both specified values.

                                            Implementations MAY choose to support attaching Routes to other resources.
                                            If that is the case, they MUST clearly document how SectionName is
                                            interpreted.

                                            When unspecified (empty string), this will reference the entire resource.
                                            For the purpose of status, an attachment is considered successful if at
                                            least one section in the parent resource accepts it. For example, Gateway
                                            listeners can restrict which Routes can attach to them by Route kind,
                                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                                            the referencing Route, the Route MUST be considered successfully
                                            attached. If no Gateway listeners accept attachment from this Route, the
                                            Route MUST be considered detached from the Gateway.

                                            Support: Core
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    type: array
                                  podTemplate:
                                    description: |-
                                      Optional pod template used to configure the ACME challenge solver pods
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: |-
                                          PodSpec defines overrides for the HTTP01 challenge solver pod.
                                          Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: |-
                                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - preference
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to an update), the system
                                                      may or may not try to eventually evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        items:
                                                          description: |-
                                                            A null or empty node selector term matches no objects. The requirements of
                                                            them are ANDed.
                                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the anti-affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the anti-affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the anti-affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: |-
                                                LocalObjectReference contains enough information to let you locate the
                                                referenced object inside the same namespace.
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              NodeSelector is a selector which must be true for the pod to fit on a node.
                                              Selector which must match a node's labels for the pod to be scheduled on that node.
                                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          securityContext:
                                            description: If specified, the pod's security context
                                            properties:
                                              fsGroup:
                                                description: |-
                                                  A special supplemental group that applies to all containers in a pod.
                                                  Some volume types allow the Kubelet to change the ownership of that volume
                                                  to be owned by the pod:

                                                  1. The owning GID will be the FSGroup
                                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                                  3. The permission bits are OR'd with rw-rw----

                                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              fsGroupChangePolicy:
                                                description: |-
                                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                                  before being exposed inside Pod. This field will only apply to
                                                  volume types which support fsGroup based ownership(and permissions).
                                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                                  and emptydir.
                                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                type: string
                                              runAsGroup:
                                                description: |-
                                                  The GID to run the entrypoint of the container process.
                                                  Uses runtime default if unset.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              runAsNonRoot:
                                                description: |-
                                                  Indicates that the container must run as a non-root user.
                                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                                  does not run as UID 0 (root) and fail to start the container if it does.
                                                  If unset or false, no such validation will be performed.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: boolean
                                              runAsUser:
                                                description: |-
                                                  The UID to run the entrypoint of the container process.
                                                  Defaults to user specified in image metadata if unspecified.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              seLinuxOptions:
                                                description: |-
                                                  The SELinux context to be applied to all containers.
                                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                                  container.  May also be set in SecurityContext.  If set in
                                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                                  takes precedence for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  level:
                                                    description: Level is SELinux level label that applies to the container.
                                                    type: string
                                                  role:
                                                    description: Role is a SELinux role label that applies to the container.
                                                    type: string
                                                  type:
                                                    description: Type is a SELinux type label that applies to the container.
                                                    type: string
                                                  user:
                                                    description: User is a SELinux user label that applies to the container.
                                                    type: string
                                                type: object
                                              seccompProfile:
                                                description: |-
                                                  The seccomp options to use by the containers in this pod.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  localhostProfile:
                                                    description: |-
                                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                                      The profile must be preconfigured on the node to work.
                                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                                    type: string
                                                  type:
                                                    description: |-
                                                      type indicates which kind of seccomp profile will be applied.
                                                      Valid options are:

                                                      Localhost - a profile defined in a file on the node should be used.
                                                      RuntimeDefault - the container runtime default profile should be used.
                                                      Unconfined - no profile should be applied.
                                                    type: string
                                                required:
                                                  - type
                                                type: object
                                              supplementalGroups:
                                                description: |-
                                                  A list of groups applied to the first process run in each container, in addition
                                                  to the container's primary GID, the fsGroup (if specified), and group memberships
                                                  defined in the container image for the uid of the container process. If unspecified,
                                                  no additional groups are added to any container. Note that group memberships
                                                  defined in the container image for the uid of the container process are still effective,
                                                  even if they are not included in this list.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  format: int64
                                                  type: integer
                                                type: array
                                              sysctls:
                                                description: |-
                                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                                  sysctls (by the container runtime) might fail to launch.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  description: Sysctl defines a kernel parameter to be set
                                                  properties:
                                                    name:
                                                      description: Name of a property to set
                                                      type: string
                                                    value:
                                                      description: Value of a property to set
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: |-
                                                The pod this Toleration is attached to tolerates any taint that matches
                                                the triple <key,value,effect> using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: |-
                                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: |-
                                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Operator represents a key's relationship to the value.
                                                    Valid operators are Exists and Equal. Defaults to Equal.
                                                    Exists is equivalent to wildcard for value, so that a pod can
                                                    tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: |-
                                                    TolerationSeconds represents the period of time the toleration (which must be
                                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                                    negative values will be treated as 0 (evict immediately) by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: |-
                                                    Value is the taint value the toleration matches to.
                                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: |-
                                      Optional service type for Kubernetes solver service. Supported values
                                      are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                              ingress:
                                description: |-
                                  The ingress based HTTP01 challenge solver will solve challenges by
                                  creating or modifying Ingress resources in order to route requests for
                                  '/.well-known/acme-challenge/XYZ' to 'challenge solver' pods that are
                                  provisioned by cert-manager for each Challenge to be completed.
                                properties:
                                  class:
                                    description: |-
                                      This field configures the annotation `kubernetes.io/ingress.class` when
                                      creating Ingress resources to solve ACME challenges that use this
                                      challenge solver. Only one of `class`, `name` or `ingressClassName` may
                                      be specified.
                                    type: string
                                  ingressClassName:
                                    description: |-
                                      This field configures the field `ingressClassName` on the created Ingress
                                      resources used to solve ACME challenges that use this challenge solver.
                                      This is the recommended way of configuring the ingress class. Only one of
                                      `class`, `name` or `ingressClassName` may be specified.
                                    type: string
                                  ingressTemplate:
                                    description: |-
                                      Optional ingress template used to configure the ACME challenge solver
                                      ingress used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the ingress used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver ingress.
                                            type: object
                                        type: object
                                    type: object
                                  name:
                                    description: |-
                                      The name of the ingress resource that should have ACME challenge solving
                                      routes inserted into it in order to solve HTTP01 challenges.
                                      This is typically used in conjunction with ingress controllers like
                                      ingress-gce, which maintains a 1:1 mapping between external IPs and
                                      ingress resources. Only one of `class`, `name` or `ingressClassName` may
                                      be specified.
                                    type: string
                                  podTemplate:
                                    description: |-
                                      Optional pod template used to configure the ACME challenge solver pods
                                      used for HTTP01 challenges.
                                    properties:
                                      metadata:
                                        description: |-
                                          ObjectMeta overrides for the pod used to solve HTTP01 challenges.
                                          Only the 'labels' and 'annotations' fields may be set.
                                          If labels or annotations overlap with in-built values, the values here
                                          will override the in-built values.
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            description: Labels that should be added to the created ACME HTTP01 solver pods.
                                            type: object
                                        type: object
                                      spec:
                                        description: |-
                                          PodSpec defines overrides for the HTTP01 challenge solver pod.
                                          Check ACMEChallengeSolverHTTP01IngressPodSpec to find out currently supported fields.
                                          All other fields will be ignored.
                                        properties:
                                          affinity:
                                            description: If specified, the pod's scheduling constraints
                                            properties:
                                              nodeAffinity:
                                                description: Describes node affinity scheduling rules for the pod.
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: |-
                                                        An empty preferred scheduling term matches all objects with implicit weight 0
                                                        (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                      properties:
                                                        preference:
                                                          description: A node selector term, associated with the corresponding weight.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        weight:
                                                          description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - preference
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to an update), the system
                                                      may or may not try to eventually evict the pod from its node.
                                                    properties:
                                                      nodeSelectorTerms:
                                                        description: Required. A list of node selector terms. The terms are ORed.
                                                        items:
                                                          description: |-
                                                            A null or empty node selector term matches no objects. The requirements of
                                                            them are ANDed.
                                                            The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                          properties:
                                                            matchExpressions:
                                                              description: A list of node selector requirements by node's labels.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchFields:
                                                              description: A list of node selector requirements by node's fields.
                                                              items:
                                                                description: |-
                                                                  A node selector requirement is a selector that contains values, a key, and an operator
                                                                  that relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: The label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      Represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      An array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. If the operator is Gt or Lt, the values
                                                                      array must have a single element, which will be interpreted as an integer.
                                                                      This array is replaced during a strategic merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                    required:
                                                      - nodeSelectorTerms
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                              podAffinity:
                                                description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                              podAntiAffinity:
                                                description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                                properties:
                                                  preferredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      The scheduler will prefer to schedule pods to nodes that satisfy
                                                      the anti-affinity expressions specified by this field, but it may choose
                                                      a node that violates one or more of the expressions. The node that is
                                                      most preferred is the one with the greatest sum of weights, i.e.
                                                      for each node that meets all of the scheduling requirements (resource
                                                      request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                      compute a sum by iterating through the elements of this field and adding
                                                      "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                      node(s) with the highest sum are the most preferred.
                                                    items:
                                                      description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                      properties:
                                                        podAffinityTerm:
                                                          description: Required. A pod affinity term, associated with the corresponding weight.
                                                          properties:
                                                            labelSelector:
                                                              description: |-
                                                                A label query over a set of resources, in this case pods.
                                                                If it's null, this PodAffinityTerm matches with no Pods.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            matchLabelKeys:
                                                              description: |-
                                                                MatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                                Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            mismatchLabelKeys:
                                                              description: |-
                                                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                                                be taken into consideration. The keys are used to lookup values from the
                                                                incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                                to select the group of existing pods which pods will be taken into consideration
                                                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                                pod labels will be ignored. The default value is empty.
                                                                The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                                Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                                This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            namespaceSelector:
                                                              description: |-
                                                                A label query over the set of namespaces that the term applies to.
                                                                The term is applied to the union of the namespaces selected by this field
                                                                and the ones listed in the namespaces field.
                                                                null selector and null or empty namespaces list means "this pod's namespace".
                                                                An empty selector ({}) matches all namespaces.
                                                              properties:
                                                                matchExpressions:
                                                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                  items:
                                                                    description: |-
                                                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                                                      relates the key and values.
                                                                    properties:
                                                                      key:
                                                                        description: key is the label key that the selector applies to.
                                                                        type: string
                                                                      operator:
                                                                        description: |-
                                                                          operator represents a key's relationship to a set of values.
                                                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                        type: string
                                                                      values:
                                                                        description: |-
                                                                          values is an array of string values. If the operator is In or NotIn,
                                                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                          the values array must be empty. This array is replaced during a strategic
                                                                          merge patch.
                                                                        items:
                                                                          type: string
                                                                        type: array
                                                                        x-kubernetes-list-type: atomic
                                                                    required:
                                                                      - key
                                                                      - operator
                                                                    type: object
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                                matchLabels:
                                                                  additionalProperties:
                                                                    type: string
                                                                  description: |-
                                                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                  type: object
                                                              type: object
                                                              x-kubernetes-map-type: atomic
                                                            namespaces:
                                                              description: |-
                                                                namespaces specifies a static list of namespace names that the term applies to.
                                                                The term is applied to the union of the namespaces listed in this field
                                                                and the ones selected by namespaceSelector.
                                                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            topologyKey:
                                                              description: |-
                                                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                                whose value of the label with key topologyKey matches that of any node on which any of the
                                                                selected pods is running.
                                                                Empty topologyKey is not allowed.
                                                              type: string
                                                          required:
                                                            - topologyKey
                                                          type: object
                                                        weight:
                                                          description: |-
                                                            weight associated with matching the corresponding podAffinityTerm,
                                                            in the range 1-100.
                                                          format: int32
                                                          type: integer
                                                      required:
                                                        - podAffinityTerm
                                                        - weight
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  requiredDuringSchedulingIgnoredDuringExecution:
                                                    description: |-
                                                      If the anti-affinity requirements specified by this field are not met at
                                                      scheduling time, the pod will not be scheduled onto the node.
                                                      If the anti-affinity requirements specified by this field cease to be met
                                                      at some point during pod execution (e.g. due to a pod label update), the
                                                      system may or may not try to eventually evict the pod from its node.
                                                      When there are multiple elements, the lists of nodes corresponding to each
                                                      podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                    items:
                                                      description: |-
                                                        Defines a set of pods (namely those matching the labelSelector
                                                        relative to the given namespace(s)) that this pod should be
                                                        co-located (affinity) or not co-located (anti-affinity) with,
                                                        where co-located is defined as running on a node whose value of
                                                        the label with key <topologyKey> matches that of any node on which
                                                        a pod of the set of pods is running
                                                      properties:
                                                        labelSelector:
                                                          description: |-
                                                            A label query over a set of resources, in this case pods.
                                                            If it's null, this PodAffinityTerm matches with no Pods.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        matchLabelKeys:
                                                          description: |-
                                                            MatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                            Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        mismatchLabelKeys:
                                                          description: |-
                                                            MismatchLabelKeys is a set of pod label keys to select which pods will
                                                            be taken into consideration. The keys are used to lookup values from the
                                                            incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                            to select the group of existing pods which pods will be taken into consideration
                                                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                            pod labels will be ignored. The default value is empty.
                                                            The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                            Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                            This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        namespaceSelector:
                                                          description: |-
                                                            A label query over the set of namespaces that the term applies to.
                                                            The term is applied to the union of the namespaces selected by this field
                                                            and the ones listed in the namespaces field.
                                                            null selector and null or empty namespaces list means "this pod's namespace".
                                                            An empty selector ({}) matches all namespaces.
                                                          properties:
                                                            matchExpressions:
                                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                              items:
                                                                description: |-
                                                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                                                  relates the key and values.
                                                                properties:
                                                                  key:
                                                                    description: key is the label key that the selector applies to.
                                                                    type: string
                                                                  operator:
                                                                    description: |-
                                                                      operator represents a key's relationship to a set of values.
                                                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                    type: string
                                                                  values:
                                                                    description: |-
                                                                      values is an array of string values. If the operator is In or NotIn,
                                                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                      the values array must be empty. This array is replaced during a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                    type: array
                                                                    x-kubernetes-list-type: atomic
                                                                required:
                                                                  - key
                                                                  - operator
                                                                type: object
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                            matchLabels:
                                                              additionalProperties:
                                                                type: string
                                                              description: |-
                                                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                              type: object
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        namespaces:
                                                          description: |-
                                                            namespaces specifies a static list of namespace names that the term applies to.
                                                            The term is applied to the union of the namespaces listed in this field
                                                            and the ones selected by namespaceSelector.
                                                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                        topologyKey:
                                                          description: |-
                                                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                            whose value of the label with key topologyKey matches that of any node on which any of the
                                                            selected pods is running.
                                                            Empty topologyKey is not allowed.
                                                          type: string
                                                      required:
                                                        - topologyKey
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                            type: object
                                          imagePullSecrets:
                                            description: If specified, the pod's imagePullSecrets
                                            items:
                                              description: |-
                                                LocalObjectReference contains enough information to let you locate the
                                                referenced object inside the same namespace.
                                              properties:
                                                name:
                                                  default: ""
                                                  description: |-
                                                    Name of the referent.
                                                    This field is effectively required, but due to backwards compatibility is
                                                    allowed to be empty. Instances of this type with an empty value here are
                                                    almost certainly wrong.
                                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  type: string
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                          nodeSelector:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              NodeSelector is a selector which must be true for the pod to fit on a node.
                                              Selector which must match a node's labels for the pod to be scheduled on that node.
                                              More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                            type: object
                                          priorityClassName:
                                            description: If specified, the pod's priorityClassName.
                                            type: string
                                          securityContext:
                                            description: If specified, the pod's security context
                                            properties:
                                              fsGroup:
                                                description: |-
                                                  A special supplemental group that applies to all containers in a pod.
                                                  Some volume types allow the Kubelet to change the ownership of that volume
                                                  to be owned by the pod:

                                                  1. The owning GID will be the FSGroup
                                                  2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
                                                  3. The permission bits are OR'd with rw-rw----

                                                  If unset, the Kubelet will not modify the ownership and permissions of any volume.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              fsGroupChangePolicy:
                                                description: |-
                                                  fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
                                                  before being exposed inside Pod. This field will only apply to
                                                  volume types which support fsGroup based ownership(and permissions).
                                                  It will have no effect on ephemeral volume types such as: secret, configmaps
                                                  and emptydir.
                                                  Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                type: string
                                              runAsGroup:
                                                description: |-
                                                  The GID to run the entrypoint of the container process.
                                                  Uses runtime default if unset.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              runAsNonRoot:
                                                description: |-
                                                  Indicates that the container must run as a non-root user.
                                                  If true, the Kubelet will validate the image at runtime to ensure that it
                                                  does not run as UID 0 (root) and fail to start the container if it does.
                                                  If unset or false, no such validation will be performed.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                                                type: boolean
                                              runAsUser:
                                                description: |-
                                                  The UID to run the entrypoint of the container process.
                                                  Defaults to user specified in image metadata if unspecified.
                                                  May also be set in SecurityContext.  If set in both SecurityContext and
                                                  PodSecurityContext, the value specified in SecurityContext takes precedence
                                                  for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                format: int64
                                                type: integer
                                              seLinuxOptions:
                                                description: |-
                                                  The SELinux context to be applied to all containers.
                                                  If unspecified, the container runtime will allocate a random SELinux context for each
                                                  container.  May also be set in SecurityContext.  If set in
                                                  both SecurityContext and PodSecurityContext, the value specified in SecurityContext
                                                  takes precedence for that container.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  level:
                                                    description: Level is SELinux level label that applies to the container.
                                                    type: string
                                                  role:
                                                    description: Role is a SELinux role label that applies to the container.
                                                    type: string
                                                  type:
                                                    description: Type is a SELinux type label that applies to the container.
                                                    type: string
                                                  user:
                                                    description: User is a SELinux user label that applies to the container.
                                                    type: string
                                                type: object
                                              seccompProfile:
                                                description: |-
                                                  The seccomp options to use by the containers in this pod.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                properties:
                                                  localhostProfile:
                                                    description: |-
                                                      localhostProfile indicates a profile defined in a file on the node should be used.
                                                      The profile must be preconfigured on the node to work.
                                                      Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                                      Must be set if type is "Localhost". Must NOT be set for any other type.
                                                    type: string
                                                  type:
                                                    description: |-
                                                      type indicates which kind of seccomp profile will be applied.
                                                      Valid options are:

                                                      Localhost - a profile defined in a file on the node should be used.
                                                      RuntimeDefault - the container runtime default profile should be used.
                                                      Unconfined - no profile should be applied.
                                                    type: string
                                                required:
                                                  - type
                                                type: object
                                              supplementalGroups:
                                                description: |-
                                                  A list of groups applied to the first process run in each container, in addition
                                                  to the container's primary GID, the fsGroup (if specified), and group memberships
                                                  defined in the container image for the uid of the container process. If unspecified,
                                                  no additional groups are added to any container. Note that group memberships
                                                  defined in the container image for the uid of the container process are still effective,
                                                  even if they are not included in this list.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  format: int64
                                                  type: integer
                                                type: array
                                              sysctls:
                                                description: |-
                                                  Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
                                                  sysctls (by the container runtime) might fail to launch.
                                                  Note that this field cannot be set when spec.os.name is windows.
                                                items:
                                                  description: Sysctl defines a kernel parameter to be set
                                                  properties:
                                                    name:
                                                      description: Name of a property to set
                                                      type: string
                                                    value:
                                                      description: Value of a property to set
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          serviceAccountName:
                                            description: If specified, the pod's service account
                                            type: string
                                          tolerations:
                                            description: If specified, the pod's tolerations.
                                            items:
                                              description: |-
                                                The pod this Toleration is attached to tolerates any taint that matches
                                                the triple <key,value,effect> using the matching operator <operator>.
                                              properties:
                                                effect:
                                                  description: |-
                                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                  type: string
                                                key:
                                                  description: |-
                                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    Operator represents a key's relationship to the value.
                                                    Valid operators are Exists and Equal. Defaults to Equal.
                                                    Exists is equivalent to wildcard for value, so that a pod can
                                                    tolerate all taints of a particular category.
                                                  type: string
                                                tolerationSeconds:
                                                  description: |-
                                                    TolerationSeconds represents the period of time the toleration (which must be
                                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                                    negative values will be treated as 0 (evict immediately) by the system.
                                                  format: int64
                                                  type: integer
                                                value:
                                                  description: |-
                                                    Value is the taint value the toleration matches to.
                                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  serviceType:
                                    description: |-
                                      Optional service type for Kubernetes solver service. Supported values
                                      are NodePort or ClusterIP. If unset, defaults to NodePort.
                                    type: string
                                type: object
                            type: object
                          selector:
                            description: |-
                              Selector selects a set of DNSNames on the Certificate resource that
                              should be solved using this challenge solver.
                              If not specified, the solver will be treated as the 'default' solver
                              with the lowest priority, i.e. if any other solver has a more specific
                              match, it will be used instead.
                            properties:
                              dnsNames:
                                description: |-
                                  List of DNSNames that this solver will be used to solve.
                                  If specified and a match is found, a dnsNames selector will take
                                  precedence over a dnsZones selector.
                                  If multiple solvers match with the same dnsNames value, the solver
                                  with the most matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined earlier in the list
                                  will be selected.
                                items:
                                  type: string
                                type: array
                              dnsZones:
                                description: |-
                                  List of DNSZones that this solver will be used to solve.
                                  The most specific DNS zone match specified here will take precedence
                                  over other DNS zone matches, so a solver specifying sys.example.com
                                  will be selected over one specifying example.com for the domain
                                  www.sys.example.com.
                                  If multiple solvers match with the same dnsZones value, the solver
                                  with the most matching labels in matchLabels will be selected.
                                  If neither has more matches, the solver defined earlier in the list
                                  will be selected.
                                items:
                                  type: string
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  A label selector that is used to refine the set of certificate's that
                                  this challenge solver will apply to.
                                type: object
                            type: object
                        type: object
                      type: array
                  required:
                    - privateKeySecretRef
                    - server
                  type: object
                ca:
                  description: |-
                    CA configures this issuer to sign certificates using a signing CA keypair
                    stored in a Secret resource.
                    This is used to build internal PKIs that are managed by cert-manager.
                  properties:
                    crlDistributionPoints:
                      description: |-
                        The CRL distribution points is an X.509 v3 certificate extension which identifies
                        the location of the CRL from which the revocation of this certificate can be checked.
                        If not set, certificates will be issued without distribution points set.
                      items:
                        type: string
                      type: array
                    issuingCertificateURLs:
                      description: |-
                        IssuingCertificateURLs is a list of URLs which this issuer should embed into certificates
                        it creates. See https://www.rfc-editor.org/rfc/rfc5280#section-4.2.2.1 for more details.
                        As an example, such a URL might be "http://ca.domain.com/ca.crt".
                      items:
                        type: string
                      type: array
                    ocspServers:
                      description: |-
                        The OCSP server list is an X.509 v3 extension that defines a list of
                        URLs of OCSP responders. The OCSP responders can be queried for the
                        revocation status of an issued certificate. If not set, the
                        certificate will be issued with no OCSP servers set. For example, an
                        OCSP server URL could be "http://ocsp.int-x3.letsencrypt.org".
                      items:
                        type: string
                      type: array
                    secretName:
                      description: |-
                        SecretName is the name of the secret used to sign Certificates issued
                        by this Issuer.
                      type: string
                  required:
                    - secretName
                  type: object
                selfSigned:
                  description: |-
                    SelfSigned configures this issuer to 'self sign' certificates using the
                    private key used to create the CertificateRequest object.
                  properties:
                    crlDistributionPoints:
                      description: |-
                        The CRL distribution points is an X.509 v3 certificate extension which identifies
                        the location of the CRL from which the revocation of this certificate can be checked.
                        If not set certificate will be issued without CDP. Values are strings.
                      items:
                        type: string
                      type: array
                  type: object
                vault:
                  description: |-
                    Vault configures this issuer to sign certificates using a HashiCorp Vault
                    PKI backend.
                  properties:
                    auth:
                      description: Auth configures how cert-manager authenticates with the Vault server.
                      properties:
                        appRole:
                          description: |-
                            AppRole authenticates with Vault using the App Role auth mechanism,
                            with the role and secret stored in a Kubernetes Secret resource.
                          properties:
                            path:
                              description: |-
                                Path where the App Role authentication backend is mounted in Vault, e.g:
                                "approle"
                              type: string
                            roleId:
                              description: |-
                                RoleID configured in the App Role authentication backend when setting
                                up the authentication backend in Vault.
                              type: string
                            secretRef:
                              description: |-
                                Reference to a key in a Secret that contains the App Role secret used
                                to authenticate with Vault.
                                The `key` field must be specified and denotes which entry within the Secret
                                resource is used as the app role secret.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - path
                            - roleId
                            - secretRef
                          type: object
                        clientCertificate:
                          description: |-
                            ClientCertificate authenticates with Vault by presenting a client
                            certificate during the request's TLS handshake.
                            Works only when using HTTPS protocol.
                          properties:
                            mountPath:
                              description: |-
                                The Vault mountPath here is the mount path to use when authenticating with
                                Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                default value "/v1/auth/cert" will be used.
                              type: string
                            name:
                              description: |-
                                Name of the certificate role to authenticate against.
                                If not set, matching any certificate role, if available.
                              type: string
                            secretName:
                              description: |-
                                Reference to Kubernetes Secret of type "kubernetes.io/tls" (hence containing
                                tls.crt and tls.key) used to authenticate to Vault using TLS client
                                authentication.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            Kubernetes authenticates with Vault by passing the ServiceAccount
                            token stored in the named Secret resource to the Vault server.
                          properties:
                            mountPath:
                              description: |-
                                The Vault mountPath here is the mount path to use when authenticating with
                                Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                default value "/v1/auth/kubernetes" will be used.
                              type: string
                            role:
                              description: |-
                                A required field containing the Vault Role to assume. A Role binds a
                                Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: |-
                                The required Secret field containing a Kubernetes ServiceAccount JWT used
                                for authenticating with Vault. Use of 'ambient credentials' is not
                                supported.
                              properties:
                                key:
                                  description: |-
                                    The key of the entry in the Secret resource's `data` field to be used.
                                    Some instances of this field may be defaulted, in others it may be
                                    required.
                                  type: string
                                name:
                                  description: |-
                                    Name of the resource being referred to.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              required:
                                - name
                              type: object
                            serviceAccountRef:
                              description: |-
                                A reference to a service account that will be used to request a bound
                                token (also known as "projected token"). Compared to using "secretRef",
                                using this field means that you don't rely on statically bound tokens. To
                                use this field, you must configure an RBAC rule to let cert-manager
                                request a token.
                              properties:
                                audiences:
                                  description: |-
                                    TokenAudiences is an optional list of extra audiences to include in the token passed to Vault. The default token
                                    consisting of the issuer's namespace and name is always included.
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name of the ServiceAccount used to request a token.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - role
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    caBundle:
                      description: |-
                        Base64-encoded bundle of PEM CAs which will be used to validate the certificate
                        chain presented by Vault. Only used if using HTTPS to connect to Vault and
                        ignored for HTTP connections.
                        Mutually exclusive with CABundleSecretRef.
                        If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
                        the cert-manager controller container is used to validate the TLS connection.
                      format: byte
                      type: string
                    caBundleSecretRef:
                      description: |-
                        Reference to a Secret containing a bundle of PEM-encoded CAs to use when
                        verifying the certificate chain presented by Vault when using HTTPS.
                        Mutually exclusive with CABundle.
                        If neither CABundle nor CABundleSecretRef are defined, the certificate bundle in
                        the cert-manager controller container is used to validate the TLS connection.
                        If no key for the Secret is specified, cert-manager will default to 'ca.crt'.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    clientCertSecretRef:
                      description: |-
                        Reference to a Secret containing a PEM-encoded Client Certificate to use when the
                        Vault server requires mTLS.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    clientKeySecretRef:
                      description: |-
                        Reference to a Secret containing a PEM-encoded Client Private Key to use when the
                        Vault server requires mTLS.
                      properties:
                        key:
                          description: |-
                            The key of the entry in the Secret resource's `data` field to be used.
                            Some instances of this field may be defaulted, in others it may be
                            required.
                          type: string
                        name:
                          description: |-
                            Name of the resource being referred to.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      required:
                        - name
                      type: object
                    namespace:
                      description: |-
                        Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                        More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces
                      type: string
                    path:
                      description: |-
                        Path is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                        "my_pki_mount/sign/my-role-name".
                      type: string
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                  required:
                    - auth
                    - path
                    - server
                  type: object
                venafi:
                  description: |-
                    Venafi configures this issuer to sign certificates using a Venafi TPP
                    or Venafi Cloud policy zone.
                  properties:
                    cloud:
                      description: |-
                        Cloud specifies the Venafi cloud configuration settings.
                        Only one of TPP or Cloud may be specified.
                      properties:
                        apiTokenSecretRef:
                          description: APITokenSecretRef is a secret key selector for the Venafi Cloud API token.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        url:
                          description: |-
                            URL is the base URL for Venafi Cloud.
                            Defaults to "https://api.venafi.cloud/v1".
                          type: string
                      required:
                        - apiTokenSecretRef
                      type: object
                    tpp:
                      description: |-
                        TPP specifies Trust Protection Platform configuration settings.
                        Only one of TPP or Cloud may be specified.
                      properties:
                        caBundle:
                          description: |-
                            Base64-encoded bundle of PEM CAs which will be used to validate the certificate
                            chain presented by the TPP server. Only used if using HTTPS; ignored for HTTP.
                            If undefined, the certificate bundle in the cert-manager controller container
                            is used to validate the chain.
                          format: byte
                          type: string
                        caBundleSecretRef:
                          description: |-
                            Reference to a Secret containing a base64-encoded bundle of PEM CAs
                            which will be used to validate the certificate chain presented by the TPP server.
                            Only used if using HTTPS; ignored for HTTP. Mutually exclusive with CABundle.
                            If neither CABundle nor CABundleSecretRef is defined, the certificate bundle in
                            the cert-manager controller container is used to validate the TLS connection.
                          properties:
                            key:
                              description: |-
                                The key of the entry in the Secret resource's `data` field to be used.
                                Some instances of this field may be defaulted, in others it may be
                                required.
                              type: string
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        credentialsRef:
                          description: |-
                            CredentialsRef is a reference to a Secret containing the Venafi TPP API credentials.
                            The secret must contain the key 'access-token' for the Access Token Authentication,
                            or two keys, 'username' and 'password' for the API Keys Authentication.
                          properties:
                            name:
                              description: |-
                                Name of the resource being referred to.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          required:
                            - name
                          type: object
                        url:
                          description: |-
                            URL is the base URL for the vedsdk endpoint of the Venafi TPP instance,
                            for example: "https://tpp.example.com/vedsdk".
                          type: string
                      required:
                        - credentialsRef
                        - url
                      type: object
                    zone:
                      description: |-
                        Zone is the Venafi Policy Zone to use for this issuer.
                        All requests made to the Venafi platform will be restricted by the named
                        zone policy.
                        This field is required.
                      type: string
                  required:
                    - zone
                  type: object
              type: object
            status:
              description: Status of the Issuer. This is set and managed automatically.
              properties:
                acme:
                  description: |-
                    ACME specific status options.
                    This field should only be set if the Issuer is configured to use an ACME
                    server to issue certificates.
                  properties:
                    lastPrivateKeyHash:
                      description: |-
                        LastPrivateKeyHash is a hash of the private key associated with the latest
                        registered ACME account, in order to track changes made to registered account
                        associated with the Issuer
                      type: string
                    lastRegisteredEmail:
                      description: |-
                        LastRegisteredEmail is the email associated with the latest registered
                        ACME account, in order to track changes made to registered account
                        associated with the  Issuer
                      type: string
                    uri:
                      description: |-
                        URI is the unique account identifier, which can also be used to retrieve
                        account details from the CA
                      type: string
                  type: object
                conditions:
                  description: |-
                    List of status conditions to indicate the status of a CertificateRequest.
                    Known condition types are `Ready`.
                  items:
                    description: IssuerCondition contains condition information for an Issuer.
                    properties:
                      lastTransitionTime:
                        description: |-
                          LastTransitionTime is the timestamp corresponding to the last status
                          change of this condition.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          Message is a human readable description of the details of the last
                          transition, complementing reason.
                        type: string
                      observedGeneration:
                        description: |-
                          If set, this represents the .metadata.generation that the condition was
                          set based upon.
                          For instance, if .metadata.generation is currently 12, but the
                          .status.condition[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the Issuer.
                        format: int64
                        type: integer
                      reason:
                        description: |-
                          Reason is a brief machine readable explanation for the condition's last
                          transition.
                        type: string
                      status:
                        description: Status of the condition, one of (`True`, `False`, `Unknown`).
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: Type of the condition, known values are (`Ready`).
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: kustomize-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: kustomizations.kustomize.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: kustomize.toolkit.fluxcd.io
  names:
    kind: Kustomization
    listKind: KustomizationList
    plural: kustomizations
    shortNames:
      - ks
    singular: kustomization
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                KustomizationSpec defines the configuration to calculate the desired state
                from a Source using Kustomize.
              properties:
                commonMetadata:
                  description: |-
                    CommonMetadata specifies the common labels and annotations that are
                    applied to all resources. Any existing label or annotation will be
                    overridden if its key matches a common one.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations to be added to the object's metadata.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to be added to the object's metadata.
                      type: object
                  type: object
                components:
                  description: Components specifies relative paths to specifications of other Components.
                  items:
                    type: string
                  type: array
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: |-
                    The interval at which to reconcile the Kustomization.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When used in combination with KustomizationSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when KustomizationSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                namePrefix:
                  description: NamePrefix will prefix the names of all managed resources.
                  maxLength: 200
                  minLength: 1
                  type: string
                nameSuffix:
                  description: NameSuffix will suffix the names of all managed resources.
                  maxLength: 200
                  minLength: 1
                  type: string
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests that match any of the keys
                        defined in the map will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names, and they
                        must match the vars declared in the manifests for the substitution to
                        happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates whether the referenced resource must exist, or whether to
                              tolerate its absence. If true and the referenced resource is absent, proceed
                              as if the resource was present but empty, without any variables defined.
                            type: boolean
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent, defaults to the namespace of the Kubernetes
                        resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                wait:
                  description: |-
                    Wait instructs the controller to check the health of all the reconciled
                    resources. When enabled, the HealthChecks are ignored. Defaults to false.
                  type: boolean
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                inventory:
                  description: |-
                    Inventory contains the list of Kubernetes resource object references that
                    have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary to locate a resource within a cluster.
                        properties:
                          id:
                            description: |-
                              ID is the string representation of the Kubernetes resource object's metadata,
                              in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes resource object's kind.
                            type: string
                        required:
                          - id
                          - v
                        type: object
                      type: array
                  required:
                    - entries
                  type: object
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    Equals the Revision of the applied Artifact from the referenced Source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      deprecationWarning: v1beta1 Kustomization is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the desired state of a kustomization.
              properties:
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When specified, KubeConfig takes precedence over ServiceAccountName.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name to a secret that contains a 'value' key with
                        the kubeconfig file as the value. It must be in the same namespace as
                        the Kustomization.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        the Kustomization.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                patchesJson6902:
                  description: JSON 6902 patches, defined as inline YAML objects.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: |-
                            JSON6902 is a JSON6902 operation object.
                            https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: |-
                                From contains a JSON-pointer value that references a location within the target document where the operation is
                                performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: |-
                                Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                "test".
                                https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: |-
                                Path contains the JSON-pointer value that references a location within the target document where the operation
                                is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: |-
                                Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: Strategic merge patches, defined as inline YAML objects.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests
                        that match any of the keys defined in the map
                        will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names and they
                        must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent
                      type: string
                    kind:
                      description: Kind of the referent
                      enum:
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the Kustomization namespace
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  type: string
                validation:
                  description: |-
                    Validate the Kubernetes objects before applying them on the cluster.
                    The validation strategy can be 'client' (local dry-run), 'server'
                    (APIServer dry-run) or 'none'.
                    When 'Force' is 'true', validation will fallback to 'client' if set to
                    'server' because server-side validation is not supported in this scenario.
                  enum:
                    - none
                    - client
                    - server
                  type: string
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    The revision format for Git sources is <branch|tag>/<commit-sha>.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
                snapshot:
                  description: The last successfully applied revision metadata.
                  properties:
                    checksum:
                      description: The manifests sha1 checksum.
                      type: string
                    entries:
                      description: A list of Kubernetes kinds grouped by namespace.
                      items:
                        description: |-
                          Snapshot holds the metadata of namespaced
                          Kubernetes objects
                        properties:
                          kinds:
                            additionalProperties:
                              type: string
                            description: The list of Kubernetes kinds.
                            type: object
                          namespace:
                            description: The namespace of this entry.
                            type: string
                        required:
                          - kinds
                        type: object
                      type: array
                  required:
                    - checksum
                    - entries
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Kustomization is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Kustomization is the Schema for the kustomizations API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KustomizationSpec defines the configuration to calculate the desired state from a Source using Kustomize.
              properties:
                commonMetadata:
                  description: |-
                    CommonMetadata specifies the common labels and annotations that are applied to all resources.
                    Any existing label or annotation will be overridden if its key matches a common one.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations to be added to the object's metadata.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels to be added to the object's metadata.
                      type: object
                  type: object
                components:
                  description: Components specifies relative paths to specifications of other Components.
                  items:
                    type: string
                  type: array
                decryption:
                  description: Decrypt Kubernetes secrets before applying them on the cluster.
                  properties:
                    provider:
                      description: Provider is the name of the decryption engine.
                      enum:
                        - sops
                      type: string
                    secretRef:
                      description: The secret name containing the private OpenPGP keys used for decryption.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
                dependsOn:
                  description: |-
                    DependsOn may contain a meta.NamespacedObjectReference slice
                    with references to Kustomization resources that must be ready before this
                    Kustomization can be reconciled.
                  items:
                    description: |-
                      NamespacedObjectReference contains enough information to locate the referenced Kubernetes resource object in any
                      namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                force:
                  default: false
                  description: |-
                    Force instructs the controller to recreate resources
                    when patching fails due to an immutable field change.
                  type: boolean
                healthChecks:
                  description: A list of resources to be included in the health assessment.
                  items:
                    description: |-
                      NamespacedObjectKindReference contains enough information to locate the typed referenced Kubernetes resource object
                      in any namespace.
                    properties:
                      apiVersion:
                        description: API version of the referent, if not specified the Kubernetes preferred version will be used.
                        type: string
                      kind:
                        description: Kind of the referent.
                        type: string
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified it acts as LocalObjectReference.
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                images:
                  description: |-
                    Images is a list of (image name, new name, new tag or digest)
                    for changing image names, tags or digests. This can also be achieved with a
                    patch, but this operator is simpler to specify.
                  items:
                    description: Image contains an image name, a new name, a new tag or digest, which will replace the original name and tag.
                    properties:
                      digest:
                        description: |-
                          Digest is the value used to replace the original image tag.
                          If digest is present NewTag value is ignored.
                        type: string
                      name:
                        description: Name is a tag-less image name.
                        type: string
                      newName:
                        description: NewName is the value used to replace the original name.
                        type: string
                      newTag:
                        description: NewTag is the value used to replace the original tag.
                        type: string
                    required:
                      - name
                    type: object
                  type: array
                interval:
                  description: The interval at which to reconcile the Kustomization.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                kubeConfig:
                  description: |-
                    The KubeConfig for reconciling the Kustomization on a remote cluster.
                    When used in combination with KustomizationSpec.ServiceAccountName,
                    forces the controller to act on behalf of that Service Account at the
                    target cluster.
                    If the --default-service-account flag is set, its value will be used as
                    a controller level fallback for when KustomizationSpec.ServiceAccountName
                    is empty.
                  properties:
                    secretRef:
                      description: |-
                        SecretRef holds the name of a secret that contains a key with
                        the kubeconfig file as the value. If no key is set, the key will default
                        to 'value'.
                        It is recommended that the kubeconfig is self-contained, and the secret
                        is regularly updated if credentials such as a cloud-access-token expire.
                        Cloud specific `cmd-path` auth helpers will not function without adding
                        binaries and credentials to the Pod that is responsible for reconciling
                        Kubernetes resources.
                      properties:
                        key:
                          description: Key in the Secret, when not specified an implementation-specific default key is used.
                          type: string
                        name:
                          description: Name of the Secret.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secretRef
                  type: object
                patches:
                  description: |-
                    Strategic merge and JSON patches, defined as inline YAML objects,
                    capable of targeting objects based on kind, label and annotation selectors.
                  items:
                    description: |-
                      Patch contains an inline StrategicMerge or JSON6902 patch, and the target the patch should
                      be applied to.
                    properties:
                      patch:
                        description: |-
                          Patch contains an inline StrategicMerge patch or an inline JSON6902 patch with
                          an array of operation objects.
                        type: string
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                    type: object
                  type: array
                patchesJson6902:
                  description: |-
                    JSON 6902 patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.
                  items:
                    description: JSON6902Patch contains a JSON6902 patch and the target the patch should be applied to.
                    properties:
                      patch:
                        description: Patch contains the JSON6902 patch document with an array of operation objects.
                        items:
                          description: |-
                            JSON6902 is a JSON6902 operation object.
                            https://datatracker.ietf.org/doc/html/rfc6902#section-4
                          properties:
                            from:
                              description: |-
                                From contains a JSON-pointer value that references a location within the target document where the operation is
                                performed. The meaning of the value depends on the value of Op, and is NOT taken into account by all operations.
                              type: string
                            op:
                              description: |-
                                Op indicates the operation to perform. Its value MUST be one of "add", "remove", "replace", "move", "copy", or
                                "test".
                                https://datatracker.ietf.org/doc/html/rfc6902#section-4
                              enum:
                                - test
                                - remove
                                - add
                                - replace
                                - move
                                - copy
                              type: string
                            path:
                              description: |-
                                Path contains the JSON-pointer value that references a location within the target document where the operation
                                is performed. The meaning of the value depends on the value of Op.
                              type: string
                            value:
                              description: |-
                                Value contains a valid JSON structure. The meaning of the value depends on the value of Op, and is NOT taken into
                                account by all operations.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - op
                            - path
                          type: object
                        type: array
                      target:
                        description: Target points to the resources that the patch document should be applied to.
                        properties:
                          annotationSelector:
                            description: |-
                              AnnotationSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource annotations.
                            type: string
                          group:
                            description: |-
                              Group is the API group to select resources from.
                              Together with Version and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          kind:
                            description: |-
                              Kind of the API Group to select resources from.
                              Together with Group and Version it is capable of unambiguously
                              identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                          labelSelector:
                            description: |-
                              LabelSelector is a string that follows the label selection expression
                              https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#api
                              It matches with the resource labels.
                            type: string
                          name:
                            description: Name to match resources with.
                            type: string
                          namespace:
                            description: Namespace to select resources from.
                            type: string
                          version:
                            description: |-
                              Version of the API Group to select resources from.
                              Together with Group and Kind it is capable of unambiguously identifying and/or selecting resources.
                              https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/api-group.md
                            type: string
                        type: object
                    required:
                      - patch
                      - target
                    type: object
                  type: array
                patchesStrategicMerge:
                  description: |-
                    Strategic merge patches, defined as inline YAML objects.
                    Deprecated: Use Patches instead.
                  items:
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                path:
                  description: |-
                    Path to the directory containing the kustomization.yaml file, or the
                    set of plain YAMLs a kustomization.yaml should be generated for.
                    Defaults to 'None', which translates to the root path of the SourceRef.
                  type: string
                postBuild:
                  description: |-
                    PostBuild describes which actions to perform on the YAML manifest
                    generated by building the kustomize overlay.
                  properties:
                    substitute:
                      additionalProperties:
                        type: string
                      description: |-
                        Substitute holds a map of key/value pairs.
                        The variables defined in your YAML manifests
                        that match any of the keys defined in the map
                        will be substituted with the set value.
                        Includes support for bash string replacement functions
                        e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.
                      type: object
                    substituteFrom:
                      description: |-
                        SubstituteFrom holds references to ConfigMaps and Secrets containing
                        the variables and their values to be substituted in the YAML manifests.
                        The ConfigMap and the Secret data keys represent the var names and they
                        must match the vars declared in the manifests for the substitution to happen.
                      items:
                        description: |-
                          SubstituteReference contains a reference to a resource containing
                          the variables name and value.
                        properties:
                          kind:
                            description: Kind of the values referent, valid values are ('Secret', 'ConfigMap').
                            enum:
                              - Secret
                              - ConfigMap
                            type: string
                          name:
                            description: |-
                              Name of the values referent. Should reside in the same namespace as the
                              referring resource.
                            maxLength: 253
                            minLength: 1
                            type: string
                          optional:
                            default: false
                            description: |-
                              Optional indicates whether the referenced resource must exist, or whether to
                              tolerate its absence. If true and the referenced resource is absent, proceed
                              as if the resource was present but empty, without any variables defined.
                            type: boolean
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                  type: object
                prune:
                  description: Prune enables garbage collection.
                  type: boolean
                retryInterval:
                  description: |-
                    The interval at which to retry a previously failed reconciliation.
                    When not specified, the controller uses the KustomizationSpec.Interval
                    value to retry failures.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                serviceAccountName:
                  description: |-
                    The name of the Kubernetes service account to impersonate
                    when reconciling this Kustomization.
                  type: string
                sourceRef:
                  description: Reference of the source where the kustomization file is.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    kind:
                      description: Kind of the referent.
                      enum:
                        - OCIRepository
                        - GitRepository
                        - Bucket
                      type: string
                    name:
                      description: Name of the referent.
                      type: string
                    namespace:
                      description: Namespace of the referent, defaults to the namespace of the Kubernetes resource object that contains the reference.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent kustomize executions,
                    it does not apply to already started executions. Defaults to false.
                  type: boolean
                targetNamespace:
                  description: |-
                    TargetNamespace sets or overrides the namespace in the
                    kustomization.yaml file.
                  maxLength: 63
                  minLength: 1
                  type: string
                timeout:
                  description: |-
                    Timeout for validation, apply and health checking operations.
                    Defaults to 'Interval' duration.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                validation:
                  description: 'Deprecated: Not used in v1beta2.'
                  enum:
                    - none
                    - client
                    - server
                  type: string
                wait:
                  description: |-
                    Wait instructs the controller to check the health of all the reconciled resources.
                    When enabled, the HealthChecks are ignored. Defaults to false.
                  type: boolean
              required:
                - interval
                - prune
                - sourceRef
              type: object
            status:
              default:
                observedGeneration: -1
              description: KustomizationStatus defines the observed state of a kustomization.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                inventory:
                  description: Inventory contains the list of Kubernetes resource object references that have been successfully applied.
                  properties:
                    entries:
                      description: Entries of Kubernetes resource object references.
                      items:
                        description: ResourceRef contains the information necessary to locate a resource within a cluster.
                        properties:
                          id:
                            description: |-
                              ID is the string representation of the Kubernetes resource object's metadata,
                              in the format '<namespace>_<name>_<group>_<kind>'.
                            type: string
                          v:
                            description: Version is the API version of the Kubernetes resource object's kind.
                            type: string
                        required:
                          - id
                          - v
                        type: object
                      type: array
                  required:
                    - entries
                  type: object
                lastAppliedRevision:
                  description: |-
                    The last successfully applied revision.
                    Equals the Revision of the applied Artifact from the referenced Source.
                  type: string
                lastAttemptedRevision:
                  description: LastAttemptedRevision is the revision of the last reconciliation attempt.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: source-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: ocirepositories.source.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: source.toolkit.fluxcd.io
  names:
    kind: OCIRepository
    listKind: OCIRepositoryList
    plural: ocirepositories
    shortNames:
      - ocirepo
    singular: ocirepository
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.url
          name: URL
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: OCIRepository is the Schema for the ocirepositories API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OCIRepositorySpec defines the desired state of OCIRepository
              properties:
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a Secret containing
                    either or both of

                    - a PEM-encoded client certificate (`tls.crt`) and private
                    key (`tls.key`);
                    - a PEM-encoded CA certificate (`ca.crt`)

                    and whichever are supplied, will be used for connecting to the
                    registry. The client cert and key are useful if you are
                    authenticating with a certificate; the CA cert is useful if
                    you are using a self-signed server certificate. The Secret must
                    be of type `Opaque` or `kubernetes.io/tls`.

                    Note: Support for the `caFile`, `certFile` and `keyFile` keys have
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ignore:
                  description: |-
                    Ignore overrides the set of excluded patterns in the .sourceignore format
                    (which is the same as .gitignore). If not provided, a default will be used,
                    consult the documentation for your version to find out what those are.
                  type: string
                insecure:
                  description: Insecure allows connecting to a non-TLS HTTP container registry.
                  type: boolean
                interval:
                  description: |-
                    Interval at which the OCIRepository URL is checked for updates.
                    This interval is approximate and may be subject to jitter to ensure
                    efficient use of resources.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                layerSelector:
                  description: |-
                    LayerSelector specifies which layer should be extracted from the OCI artifact.
                    When not specified, the first layer found in the artifact is selected.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                provider:
                  default: generic
                  description: |-
                    The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.
                    When not specified, defaults to 'generic'.
                  enum:
                    - generic
                    - aws
                    - azure
                    - gcp
                  type: string
                proxySecretRef:
                  description: |-
                    ProxySecretRef specifies the Secret containing the proxy configuration
                    to use while communicating with the container registry.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                ref:
                  description: |-
                    The OCI reference to pull and monitor for changes,
                    defaults to the latest tag.
                  properties:
                    digest:
                      description: |-
                        Digest is the image digest to pull, takes precedence over SemVer.
                        The value should be in the format 'sha256:<HASH>'.
                      type: string
                    semver:
                      description: |-
                        SemVer is the range of tags to pull selecting the latest within
                        the range, takes precedence over Tag.
                      type: string
                    semverFilter:
                      description: SemverFilter is a regex pattern to filter the tags within the SemVer range.
                      type: string
                    tag:
                      description: Tag is the image tag to pull, defaults to latest.
                      type: string
                  type: object
                secretRef:
                  description: |-
                    SecretRef contains the secret name containing the registry login
                    credentials to resolve image metadata.
                    The secret must be of type kubernetes.io/dockerconfigjson.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                serviceAccountName:
                  description: |-
                    ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate
                    the image pull if the service account has attached pull secrets. For more information:
                    https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                  type: string
                suspend:
                  description: This flag tells the controller to suspend the reconciliation of this source.
                  type: boolean
                timeout:
                  default: 60s
                  description: The timeout for remote OCI Repository operations like pulling, defaults to 60s.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                url:
                  description: |-
                    URL is a reference to an OCI artifact repository hosted
                    on a remote container registry.
                  pattern: ^oci://.*$
                  type: string
                verify:
                  description: |-
                    Verify contains the secret name containing the trusted public keys
                    used to verify the signature and specifies which provider to use to check
                    whether OCI image is authentic.
                  properties:
                    matchOIDCIdentity:
                      description: |-
                        MatchOIDCIdentity specifies the identity matching criteria to use
                        while verifying an OCI artifact which was signed using Cosign keyless
                        signing. The artifact's identity is deemed to be verified if any of the
                        specified matchers match against the identity.
                      items:
                        description: |-
                          OIDCIdentityMatch specifies options for verifying the certificate identity,
                          i.e. the issuer and the subject of the certificate.
                        properties:
                          issuer:
                            description: |-
                              Issuer specifies the regex pattern to match against to verify
                              the OIDC issuer in the Fulcio certificate. The pattern must be a
                              valid Go regular expression.
                            type: string
                          subject:
                            description: |-
                              Subject specifies the regex pattern to match against to verify
                              the identity subject in the Fulcio certificate. The pattern must
                              be a valid Go regular expression.
                            type: string
                        required:
                          - issuer
                          - subject
                        type: object
                      type: array
                    provider:
                      default: cosign
                      description: Provider specifies the technology used to sign the OCI Artifact.
                      enum:
                        - cosign
                        - notation
                      type: string
                    secretRef:
                      description: |-
                        SecretRef specifies the Kubernetes Secret containing the
                        trusted public keys.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - provider
                  type: object
              required:
                - interval
                - url
              type: object
            status:
              default:
                observedGeneration: -1
              description: OCIRepositoryStatus defines the observed state of OCIRepository
              properties:
                artifact:
                  description: Artifact represents the output of the last successful OCI Repository sync.
                  properties:
                    digest:
                      description: Digest is the digest of the file in the form of '<algorithm>:<checksum>'.
                      pattern: ^[a-z0-9]+(?:[.+_-][a-z0-9]+)*:[a-zA-Z0-9=_-]+$
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the timestamp corresponding to the last update of the
                        Artifact.
                      format: date-time
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata holds upstream information such as OCI annotations.
                      type: object
                    path:
                      description: |-
                        Path is the relative file path of the Artifact. It can be used to locate
                        the file in the root of the Artifact storage on the local file system of
                        the controller managing the Source.
                      type: string
                    revision:
                      description: |-
                        Revision is a human-readable identifier traceable in the origin source
                        system. It can be a Git commit SHA, Git tag, a Helm chart version, etc.
                      type: string
                    size:
                      description: Size is the number of bytes in the file.
                      format: int64
                      type: integer
                    url:
                      description: |-
                        URL is the HTTP address of the Artifact as exposed by the controller
                        managing the Source. It can be used to retrieve the Artifact for
                        consumption, e.g. by another controller applying the Artifact contents.
                      type: string
                  required:
                    - lastUpdateTime
                    - path
                    - revision
                    - url
                  type: object
                conditions:
                  description: Conditions holds the conditions for the OCIRepository.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                contentConfigChecksum:
                  description: |-
                    ContentConfigChecksum is a checksum of all the configurations related to
                    the content of the source artifact:
                     - .spec.ignore
                     - .spec.layerSelector
                    observed in .status.observedGeneration version of the object. This can
                    be used to determine if the content configuration has changed and the
                    artifact needs to be rebuilt.
                    It has the format of `<algo>:<checksum>`, for example: `sha256:<checksum>`.

                    Deprecated: Replaced with explicit fields for observed artifact content
                    config in the status.
                  type: string
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                observedIgnore:
                  description: |-
                    ObservedIgnore is the observed exclusion patterns used for constructing
                    the source artifact.
                  type: string
                observedLayerSelector:
                  description: |-
                    ObservedLayerSelector is the observed layer selector used for constructing
                    the source artifact.
                  properties:
                    mediaType:
                      description: |-
                        MediaType specifies the OCI media type of the layer
                        which should be extracted from the OCI Artifact. The
                        first layer matching this type is selected.
                      type: string
                    operation:
                      description: |-
                        Operation specifies how the selected layer should be processed.
                        By default, the layer compressed content is extracted to storage.
                        When the operation is set to 'copy', the layer compressed content
                        is persisted to storage as it is.
                      enum:
                        - extract
                        - copy
                      type: string
                  type: object
                url:
                  description: URL is the download link for the artifact output of the last OCI Repository sync.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: cert-manager
    meta.helm.sh/release-namespace: cert-manager
  labels:
    app: cert-manager
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    helm.sh/chart: cert-manager-v1.17.1
    helm.toolkit.fluxcd.io/name: cert-manager
    helm.toolkit.fluxcd.io/namespace: cert-manager
  name: orders.acme.cert-manager.io
spec:
  conversion:
    strategy: None
  group: acme.cert-manager.io
  names:
    categories:
      - cert-manager
      - cert-manager-acme
    kind: Order
    listKind: OrderList
    plural: orders
    singular: order
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.issuerRef.name
          name: Issuer
          priority: 1
          type: string
        - jsonPath: .status.reason
          name: Reason
          priority: 1
          type: string
        - description: CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          description: Order is a type to represent an Order with an ACME server
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              properties:
                commonName:
                  description: |-
                    CommonName is the common name as specified on the DER encoded CSR.
                    If specified, this value must also be present in `dnsNames` or `ipAddresses`.
                    This field must match the corresponding field on the DER encoded CSR.
                  type: string
                dnsNames:
                  description: |-
                    DNSNames is a list of DNS names that should be included as part of the Order
                    validation process.
                    This field must match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                duration:
                  description: |-
                    Duration is the duration for the not after date for the requested certificate.
                    this is set on order creation as pe the ACME spec.
                  type: string
                ipAddresses:
                  description: |-
                    IPAddresses is a list of IP addresses that should be included as part of the Order
                    validation process.
                    This field must match the corresponding field on the DER encoded CSR.
                  items:
                    type: string
                  type: array
                issuerRef:
                  description: |-
                    IssuerRef references a properly configured ACME-type Issuer which should
                    be used to create this Order.
                    If the Issuer does not exist, processing will be retried.
                    If the Issuer is not an 'ACME' Issuer, an error will be returned and the
                    Order will be marked as failed.
                  properties:
                    group:
                      description: Group of the resource being referred to.
                      type: string
                    kind:
                      description: Kind of the resource being referred to.
                      type: string
                    name:
                      description: Name of the resource being referred to.
                      type: string
                  required:
                    - name
                  type: object
                request:
                  description: |-
                    Certificate signing request bytes in DER encoding.
                    This will be used when finalizing the order.
                    This field must be set on the order.
                  format: byte
                  type: string
              required:
                - issuerRef
                - request
              type: object
            status:
              properties:
                authorizations:
                  description: |-
                    Authorizations contains data returned from the ACME server on what
                    authorizations must be completed in order to validate the DNS names
                    specified on the Order.
                  items:
                    description: |-
                      ACMEAuthorization contains data returned from the ACME server on an
                      authorization that must be completed in order validate a DNS name on an ACME
                      Order resource.
                    properties:
                      challenges:
                        description: |-
                          Challenges specifies the challenge types offered by the ACME server.
                          One of these challenge types will be selected when validating the DNS
                          name and an appropriate Challenge resource will be created to perform
                          the ACME challenge process.
                        items:
                          description: |-
                            Challenge specifies a challenge offered by the ACME server for an Order.
                            An appropriate Challenge resource can be created to perform the ACME
                            challenge process.
                          properties:
                            token:
                              description: |-
                                Token is the token that must be presented for this challenge.
                                This is used to compute the 'key' that must also be presented.
                              type: string
                            type:
                              description: |-
                                Type is the type of challenge being offered, e.g. 'http-01', 'dns-01',
                                'tls-sni-01', etc.
                                This is the raw value retrieved from the ACME server.
                                Only 'http-01' and 'dns-01' are supported by cert-manager, other values
                                will be ignored.
                              type: string
                            url:
                              description: |-
                                URL is the URL of this challenge. It can be used to retrieve additional
                                metadata about the Challenge from the ACME server.
                              type: string
                          required:
                            - token
                            - type
                            - url
                          type: object
                        type: array
                      identifier:
                        description: Identifier is the DNS name to be validated as part of this authorization
                        type: string
                      initialState:
                        description: |-
                          InitialState is the initial state of the ACME authorization when first
                          fetched from the ACME server.
                          If an Authorization is already 'valid', the Order controller will not
                          create a Challenge resource for the authorization. This will occur when
                          working with an ACME server that enables 'authz reuse' (such as Let's
                          Encrypt's production endpoint).
                          If not set and 'identifier' is set, the state is assumed to be pending
                          and a Challenge will be created.
                        enum:
                          - valid
                          - ready
                          - pending
                          - processing
                          - invalid
                          - expired
                          - errored
                        type: string
                      url:
                        description: URL is the URL of the Authorization that must be completed
                        type: string
                      wildcard:
                        description: |-
                          Wildcard will be true if this authorization is for a wildcard DNS name.
                          If this is true, the identifier will be the *non-wildcard* version of
                          the DNS name.
                          For example, if '*.example.com' is the DNS name being validated, this
                          field will be 'true' and the 'identifier' field will be 'example.com'.
                        type: boolean
                    required:
                      - url
                    type: object
                  type: array
                certificate:
                  description: |-
                    Certificate is a copy of the PEM encoded certificate for this Order.
                    This field will be populated after the order has been successfully
                    finalized with the ACME server, and the order has transitioned to the
                    'valid' state.
                  format: byte
                  type: string
                failureTime:
                  description: |-
                    FailureTime stores the time that this order failed.
                    This is used to influence garbage collection and back-off.
                  format: date-time
                  type: string
                finalizeURL:
                  description: |-
                    FinalizeURL of the Order.
                    This is used to obtain certificates for this order once it has been completed.
                  type: string
                reason:
                  description: |-
                    Reason optionally provides more information about a why the order is in
                    the current state.
                  type: string
                state:
                  description: |-
                    State contains the current state of this Order resource.
                    States 'success' and 'expired' are 'final'
                  enum:
                    - valid
                    - ready
                    - pending
                    - processing
                    - invalid
                    - expired
                    - errored
                  type: string
                url:
                  description: |-
                    URL of the Order.
                    This will initially be empty when the resource is first created.
                    The Order controller will populate this field when the Order is first processed.
                    This field will be immutable after it is initially set.
                  type: string
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: providers.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Provider
    listKind: ProviderList
    plural: providers
    singular: provider
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Provider is deprecated, upgrade to v1beta3
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of Provider
              properties:
                address:
                  description: HTTP/S webhook address of this provider
                  pattern: ^(http|https)://
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef can be given the name of a secret containing
                    a PEM-encoded CA certificate (`caFile`)
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Alert channel for this provider
                  type: string
                proxy:
                  description: HTTP/S address of the proxy
                  pattern: ^(http|https)://
                  type: string
                secretRef:
                  description: |-
                    Secret reference containing the provider webhook URL
                    using "address" as data key
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events handling.
                    Defaults to false.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type of provider
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                  type: string
                username:
                  description: Bot username for this provider
                  type: string
              required:
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ProviderStatus defines the observed state of Provider
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Provider is deprecated, upgrade to v1beta3
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of the Provider.
              properties:
                address:
                  description: |-
                    Address specifies the endpoint, in a generic sense, to where alerts are sent.
                    What kind of endpoint depends on the specific Provider type being used.
                    For the generic Provider, for example, this is an HTTP/S address.
                    For other Provider types this could be a project ID or a namespace.
                  maxLength: 2048
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef specifies the Secret containing
                    a PEM-encoded CA certificate (in the `ca.crt` key).

                    Note: Support for the `caFile` key has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Channel specifies the destination channel where events should be posted.
                  maxLength: 2048
                  type: string
                interval:
                  description: Interval at which to reconcile the Provider with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                proxy:
                  description: Proxy the HTTP/S address of the proxy server.
                  maxLength: 2048
                  pattern: ^(http|https)://.*$
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the authentication
                    credentials for this Provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Provider.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the Provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type specifies which Provider implementation to use.
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - gitea
                    - bitbucketserver
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - googlepubsub
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                    - pagerduty
                    - datadog
                  type: string
                username:
                  description: Username specifies the name under which events are posted.
                  maxLength: 2048
                  type: string
              required:
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ProviderStatus defines the observed state of the Provider.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Provider.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last reconciled generation.
                  format: int64
                  type: integer
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta3
      schema:
        openAPIV3Schema:
          description: Provider is the Schema for the providers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ProviderSpec defines the desired state of the Provider.
              properties:
                address:
                  description: |-
                    Address specifies the endpoint, in a generic sense, to where alerts are sent.
                    What kind of endpoint depends on the specific Provider type being used.
                    For the generic Provider, for example, this is an HTTP/S address.
                    For other Provider types this could be a project ID or a namespace.
                  maxLength: 2048
                  type: string
                certSecretRef:
                  description: |-
                    CertSecretRef specifies the Secret containing
                    a PEM-encoded CA certificate (in the `ca.crt` key).

                    Note: Support for the `caFile` key has
                    been deprecated.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                channel:
                  description: Channel specifies the destination channel where events should be posted.
                  maxLength: 2048
                  type: string
                interval:
                  description: |-
                    Interval at which to reconcile the Provider with its Secret references.
                    Deprecated and not used in v1beta3.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                proxy:
                  description: Proxy the HTTP/S address of the proxy server.
                  maxLength: 2048
                  pattern: ^(http|https)://.*$
                  type: string
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the authentication
                    credentials for this Provider.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this Provider.
                  type: boolean
                timeout:
                  description: Timeout for sending alerts to the Provider.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m))+$
                  type: string
                type:
                  description: Type specifies which Provider implementation to use.
                  enum:
                    - slack
                    - discord
                    - msteams
                    - rocket
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - gitea
                    - bitbucketserver
                    - bitbucket
                    - azuredevops
                    - googlechat
                    - googlepubsub
                    - webex
                    - sentry
                    - azureeventhub
                    - telegram
                    - lark
                    - matrix
                    - opsgenie
                    - alertmanager
                    - grafana
                    - githubdispatch
                    - pagerduty
                    - datadog
                    - nats
                  type: string
                username:
                  description: Username specifies the name under which events are posted.
                  maxLength: 2048
                  type: string
              required:
                - type
              type: object
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: rbacassessmentreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: RbacAssessmentReport
    listKind: RbacAssessmentReportList
    plural: rbacassessmentreports
    shortNames:
      - rbacassessment
      - rbacassessments
    singular: rbacassessmentreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of the rbac assessment scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of failed checks with critical severity
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of failed checks with high severity
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of failed checks with medium severity
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of failed checks with low severity
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: RbacAssessmentReport is a specification for the RbacAssessmentReport resource.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              properties:
                checks:
                  description: Checks provides results of conducting audit steps.
                  items:
                    description: Check provides the result of conducting a single audit step.
                    properties:
                      category:
                        type: string
                      checkID:
                        type: string
                      description:
                        type: string
                      messages:
                        items:
                          type: string
                        type: array
                      remediation:
                        description: Remediation provides description or links to external resources to remediate failing check.
                        type: string
                      scope:
                        description: Scope indicates the section of config that was audited.
                        properties:
                          type:
                            description: Type indicates type of this scope, e.g. Container, ConfigMapKey or JSONPath.
                            type: string
                          value:
                            description: Value indicates value of this scope that depends on Type, e.g. container name, ConfigMap key or JSONPath expression
                            type: string
                        required:
                          - type
                          - value
                        type: object
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        type: string
                      success:
                        type: boolean
                      title:
                        type: string
                    required:
                      - checkID
                      - severity
                      - success
                    type: object
                  type: array
                scanner:
                  description: Scanner is the spec for a scanner generating a security assessment report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: RbacAssessmentSummary counts failed checks by severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of failed checks with critical severity.
                      type: integer
                    highCount:
                      description: HighCount is the number of failed checks with high severity.
                      type: integer
                    lowCount:
                      description: LowCount is the number of failed check with low severity.
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of failed checks with medium severity.
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                  type: object
              required:
                - checks
                - scanner
                - summary
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
    meta.helm.sh/release-name: flux
    meta.helm.sh/release-namespace: flux
  labels:
    app.kubernetes.io/component: notification-controller
    app.kubernetes.io/instance: flux
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: flux
    app.kubernetes.io/version: 2.4.0
    helm.sh/chart: flux2-2.14.1
  name: receivers.notification.toolkit.fluxcd.io
spec:
  conversion:
    strategy: None
  group: notification.toolkit.fluxcd.io
  names:
    kind: Receiver
    listKind: ReceiverList
    plural: receivers
    singular: receiver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of the Receiver.
              properties:
                events:
                  description: |-
                    Events specifies the list of event types to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                interval:
                  default: 10m
                  description: Interval at which to reconcile the Receiver with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the token used
                    to validate the payload authenticity.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this receiver.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                    - cdevents
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of the Receiver.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Receiver.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Receiver object.
                  format: int64
                  type: integer
                webhookPath:
                  description: |-
                    WebhookPath is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta1 Receiver is deprecated, upgrade to v1
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of Receiver
              properties:
                events:
                  description: |-
                    A list of events to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                      name:
                        description: Name of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    Secret reference containing the token used
                    to validate the payload authenticity
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    This flag tells the controller to suspend subsequent events handling.
                    Defaults to false.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of Receiver
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: ObservedGeneration is the last observed generation.
                  format: int64
                  type: integer
                url:
                  description: |-
                    Generated webhook URL in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Status
          type: string
      deprecated: true
      deprecationWarning: v1beta2 Receiver is deprecated, upgrade to v1
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: Receiver is the Schema for the receivers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ReceiverSpec defines the desired state of the Receiver.
              properties:
                events:
                  description: |-
                    Events specifies the list of event types to handle,
                    e.g. 'push' for GitHub or 'Push Hook' for GitLab.
                  items:
                    type: string
                  type: array
                interval:
                  description: Interval at which to reconcile the Receiver with its Secret references.
                  pattern: ^([0-9]+(\.[0-9]+)?(ms|s|m|h))+$
                  type: string
                resources:
                  description: A list of resources to be notified about changes.
                  items:
                    description: |-
                      CrossNamespaceObjectReference contains enough information to let you locate the
                      typed referenced object at cluster level
                    properties:
                      apiVersion:
                        description: API version of the referent
                        type: string
                      kind:
                        description: Kind of the referent
                        enum:
                          - Bucket
                          - GitRepository
                          - Kustomization
                          - HelmRelease
                          - HelmChart
                          - HelmRepository
                          - ImageRepository
                          - ImagePolicy
                          - ImageUpdateAutomation
                          - OCIRepository
                        type: string
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                          MatchLabels requires the name to be set to `*`.
                        type: object
                      name:
                        description: |-
                          Name of the referent
                          If multiple resources are targeted `*` may be set.
                        maxLength: 53
                        minLength: 1
                        type: string
                      namespace:
                        description: Namespace of the referent
                        maxLength: 53
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  type: array
                secretRef:
                  description: |-
                    SecretRef specifies the Secret containing the token used
                    to validate the payload authenticity.
                  properties:
                    name:
                      description: Name of the referent.
                      type: string
                  required:
                    - name
                  type: object
                suspend:
                  description: |-
                    Suspend tells the controller to suspend subsequent
                    events handling for this receiver.
                  type: boolean
                type:
                  description: |-
                    Type of webhook sender, used to determine
                    the validation procedure and payload deserialization.
                  enum:
                    - generic
                    - generic-hmac
                    - github
                    - gitlab
                    - bitbucket
                    - harbor
                    - dockerhub
                    - quay
                    - gcr
                    - nexus
                    - acr
                  type: string
              required:
                - resources
                - secretRef
                - type
              type: object
            status:
              default:
                observedGeneration: -1
              description: ReceiverStatus defines the observed state of the Receiver.
              properties:
                conditions:
                  description: Conditions holds the conditions for the Receiver.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastHandledReconcileAt:
                  description: |-
                    LastHandledReconcileAt holds the value of the most recent
                    reconcile request value, so a change of the annotation value
                    can be detected.
                  type: string
                observedGeneration:
                  description: ObservedGeneration is the last observed generation of the Receiver object.
                  format: int64
                  type: integer
                url:
                  description: |-
                    URL is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                    Deprecated: Replaced by WebhookPath.
                  type: string
                webhookPath:
                  description: |-
                    WebhookPath is the generated incoming webhook address in the format
                    of '/hook/sha256sum(token+name+namespace)'.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: sbomreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: SbomReport
    listKind: SbomReportList
    plural: sbomreports
    shortNames:
      - sbom
      - sboms
    singular: sbomreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of image repository
          jsonPath: .report.artifact.repository
          name: Repository
          type: string
        - description: The name of image tag
          jsonPath: .report.artifact.tag
          name: Tag
          type: string
        - description: The name of the sbom generation scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of dependencies in bom
          jsonPath: .report.summary.componentsCount
          name: Components
          priority: 1
          type: integer
        - description: The the number of components in bom
          jsonPath: .report.summary.dependenciesCount
          name: Dependencies
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SbomReport summarizes components and dependencies found in container image
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              description: Report is the actual sbom report data.
              properties:
                artifact:
                  description: |-
                    Artifact represents a standalone, executable package of software that includes everything needed to
                    run an application.
                  properties:
                    digest:
                      description: Digest is a unique and immutable identifier of an Artifact.
                      type: string
                    mimeType:
                      description: MimeType represents a type and format of an Artifact.
                      type: string
                    repository:
                      description: Repository is the name of the repository in the Artifact registry.
                      type: string
                    tag:
                      description: Tag is a mutable, human-readable string used to identify an Artifact.
                      type: string
                  type: object
                components:
                  description: Bom is artifact bill of materials.
                  properties:
                    bomFormat:
                      type: string
                    components:
                      items:
                        properties:
                          bom-ref:
                            type: string
                          group:
                            type: string
                          hashes:
                            items:
                              properties:
                                alg:
                                  type: string
                                content:
                                  type: string
                              type: object
                            type: array
                          licenses:
                            items:
                              properties:
                                expression:
                                  type: string
                                license:
                                  properties:
                                    id:
                                      type: string
                                    name:
                                      type: string
                                    url:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          name:
                            type: string
                          properties:
                            items:
                              properties:
                                name:
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          purl:
                            type: string
                          supplier:
                            properties:
                              contact:
                                items:
                                  properties:
                                    email:
                                      type: string
                                    name:
                                      type: string
                                    phone:
                                      type: string
                                  type: object
                                type: array
                              name:
                                type: string
                              url:
                                items:
                                  type: string
                                type: array
                            type: object
                          type:
                            type: string
                          version:
                            type: string
                        type: object
                      type: array
                    dependencies:
                      items:
                        properties:
                          dependsOn:
                            items:
                              type: string
                            type: array
                          ref:
                            type: string
                        type: object
                      type: array
                    metadata:
                      properties:
                        component:
                          properties:
                            bom-ref:
                              type: string
                            group:
                              type: string
                            hashes:
                              items:
                                properties:
                                  alg:
                                    type: string
                                  content:
                                    type: string
                                type: object
                              type: array
                            licenses:
                              items:
                                properties:
                                  expression:
                                    type: string
                                  license:
                                    properties:
                                      id:
                                        type: string
                                      name:
                                        type: string
                                      url:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            name:
                              type: string
                            properties:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            purl:
                              type: string
                            supplier:
                              properties:
                                contact:
                                  items:
                                    properties:
                                      email:
                                        type: string
                                      name:
                                        type: string
                                      phone:
                                        type: string
                                    type: object
                                  type: array
                                name:
                                  type: string
                                url:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type:
                              type: string
                            version:
                              type: string
                          type: object
                        timestamp:
                          type: string
                        tools:
                          properties:
                            components:
                              items:
                                properties:
                                  bom-ref:
                                    type: string
                                  group:
                                    type: string
                                  hashes:
                                    items:
                                      properties:
                                        alg:
                                          type: string
                                        content:
                                          type: string
                                      type: object
                                    type: array
                                  licenses:
                                    items:
                                      properties:
                                        expression:
                                          type: string
                                        license:
                                          properties:
                                            id:
                                              type: string
                                            name:
                                              type: string
                                            url:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  properties:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  purl:
                                    type: string
                                  supplier:
                                    properties:
                                      contact:
                                        items:
                                          properties:
                                            email:
                                              type: string
                                            name:
                                              type: string
                                            phone:
                                              type: string
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      url:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  type:
                                    type: string
                                  version:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    serialNumber:
                      type: string
                    specVersion:
                      type: string
                    version:
                      type: integer
                  required:
                    - bomFormat
                    - specVersion
                  type: object
                registry:
                  description: Registry is the registry the Artifact was pulled from.
                  properties:
                    server:
                      description: Server the FQDN of registry server.
                      type: string
                  type: object
                scanner:
                  description: Scanner is the scanner that generated this report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: Summary is a summary of sbom report.
                  properties:
                    componentsCount:
                      description: ComponentsCount is the number of components in bom.
                      minimum: 0
                      type: integer
                    dependenciesCount:
                      description: DependenciesCount is the number of dependencies in bom.
                      minimum: 0
                      type: integer
                  required:
                    - componentsCount
                    - dependenciesCount
                  type: object
                updateTimestamp:
                  description: UpdateTimestamp is a timestamp representing the server time in UTC when this report was updated.
                  format: date-time
                  type: string
              required:
                - artifact
                - components
                - scanner
                - summary
                - updateTimestamp
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    helm.toolkit.fluxcd.io/name: trivy-operator
    helm.toolkit.fluxcd.io/namespace: trivy
  name: vulnerabilityreports.aquasecurity.github.io
spec:
  conversion:
    strategy: None
  group: aquasecurity.github.io
  names:
    kind: VulnerabilityReport
    listKind: VulnerabilityReportList
    plural: vulnerabilityreports
    shortNames:
      - vuln
      - vulns
    singular: vulnerabilityreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The name of image repository
          jsonPath: .report.artifact.repository
          name: Repository
          type: string
        - description: The name of image tag
          jsonPath: .report.artifact.tag
          name: Tag
          type: string
        - description: The name of the vulnerability scanner
          jsonPath: .report.scanner.name
          name: Scanner
          type: string
        - description: The age of the report
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: The number of critical vulnerabilities
          jsonPath: .report.summary.criticalCount
          name: Critical
          priority: 1
          type: integer
        - description: The number of high vulnerabilities
          jsonPath: .report.summary.highCount
          name: High
          priority: 1
          type: integer
        - description: The number of medium vulnerabilities
          jsonPath: .report.summary.mediumCount
          name: Medium
          priority: 1
          type: integer
        - description: The number of low vulnerabilities
          jsonPath: .report.summary.lowCount
          name: Low
          priority: 1
          type: integer
        - description: The number of unknown vulnerabilities
          jsonPath: .report.summary.unknownCount
          name: Unknown
          priority: 1
          type: integer
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            VulnerabilityReport summarizes vulnerabilities in application dependencies and operating system packages
            built into container images.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            report:
              description: Report is the actual vulnerability report data.
              properties:
                artifact:
                  description: |-
                    Artifact represents a standalone, executable package of software that includes everything needed to
                    run an application.
                  properties:
                    digest:
                      description: Digest is a unique and immutable identifier of an Artifact.
                      type: string
                    mimeType:
                      description: MimeType represents a type and format of an Artifact.
                      type: string
                    repository:
                      description: Repository is the name of the repository in the Artifact registry.
                      type: string
                    tag:
                      description: Tag is a mutable, human-readable string used to identify an Artifact.
                      type: string
                  type: object
                os:
                  description: OS information of the artifact
                  properties:
                    eosl:
                      description: Eosl is true if OS version has reached end of service life
                      type: boolean
                    family:
                      description: Operating System Family
                      type: string
                    name:
                      description: Name or version of the OS
                      type: string
                  type: object
                registry:
                  description: Registry is the registry the Artifact was pulled from.
                  properties:
                    server:
                      description: Server the FQDN of registry server.
                      type: string
                  type: object
                scanner:
                  description: Scanner is the scanner that generated this report.
                  properties:
                    name:
                      description: Name the name of the scanner.
                      type: string
                    vendor:
                      description: Vendor the name of the vendor providing the scanner.
                      type: string
                    version:
                      description: Version the version of the scanner.
                      type: string
                  required:
                    - name
                    - vendor
                    - version
                  type: object
                summary:
                  description: Summary is a summary of Vulnerability counts grouped by Severity.
                  properties:
                    criticalCount:
                      description: CriticalCount is the number of vulnerabilities with Critical Severity.
                      minimum: 0
                      type: integer
                    highCount:
                      description: HighCount is the number of vulnerabilities with High Severity.
                      minimum: 0
                      type: integer
                    lowCount:
                      description: LowCount is the number of vulnerabilities with Low Severity.
                      minimum: 0
                      type: integer
                    mediumCount:
                      description: MediumCount is the number of vulnerabilities with Medium Severity.
                      minimum: 0
                      type: integer
                    noneCount:
                      description: NoneCount is the number of packages without any vulnerability.
                      minimum: 0
                      type: integer
                    unknownCount:
                      description: UnknownCount is the number of vulnerabilities with unknown severity.
                      minimum: 0
                      type: integer
                  required:
                    - criticalCount
                    - highCount
                    - lowCount
                    - mediumCount
                    - unknownCount
                  type: object
                updateTimestamp:
                  description: UpdateTimestamp is a timestamp representing the server time in UTC when this report was updated.
                  format: date-time
                  type: string
                vulnerabilities:
                  description: Vulnerabilities is a list of operating system (OS) or application software Vulnerability items found in the Artifact.
                  items:
                    description: Vulnerability is the spec for a vulnerability record.
                    properties:
                      class:
                        type: string
                      cvss:
                        additionalProperties:
                          properties:
                            V2Score:
                              type: number
                            V2Vector:
                              type: string
                            V3Score:
                              type: number
                            V3Vector:
                              type: string
                            V40Score:
                              type: number
                            V40Vector:
                              type: string
                          type: object
                        type: object
                      cvsssource:
                        type: string
                      description:
                        type: string
                      fixedVersion:
                        description: FixedVersion indicates the version of the Resource in which this vulnerability has been fixed.
                        type: string
                      installedVersion:
                        description: InstalledVersion indicates the installed version of the Resource.
                        type: string
                      lastModifiedDate:
                        description: LastModifiedDate indicates the last date CVE has been modified.
                        type: string
                      links:
                        items:
                          type: string
                        type: array
                      packagePURL:
                        type: string
                      packagePath:
                        type: string
                      packageType:
                        type: string
                      primaryLink:
                        type: string
                      publishedDate:
                        description: PublishedDate indicates the date of published CVE.
                        type: string
                      resource:
                        description: Resource is a vulnerable package, application, or library.
                        type: string
                      score:
                        type: number
                      severity:
                        description: Severity level of a vulnerability or a configuration audit check.
                        enum:
                          - CRITICAL
                          - HIGH
                          - MEDIUM
                          - LOW
                          - UNKNOWN
                        type: string
                      target:
                        type: string
                      title:
                        type: string
                      vulnerabilityID:
                        description: VulnerabilityID the vulnerability identifier.
                        type: string
                    required:
                      - fixedVersion
                      - installedVersion
                      - lastModifiedDate
                      - publishedDate
                      - resource
                      - severity
                      - title
                      - vulnerabilityID
                    type: object
                  type: array
              required:
                - artifact
                - os
                - scanner
                - summary
                - updateTimestamp
                - vulnerabilities
              type: object
          required:
            - report
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources: {}

